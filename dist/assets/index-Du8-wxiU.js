function KT(t,e){for(var n=0;n<e.length;n++){const r=e[n];if(typeof r!="string"&&!Array.isArray(r)){for(const s in r)if(s!=="default"&&!(s in t)){const o=Object.getOwnPropertyDescriptor(r,s);o&&Object.defineProperty(t,s,o.get?o:{enumerable:!0,get:()=>r[s]})}}}return Object.freeze(Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&r(i)}).observe(document,{childList:!0,subtree:!0});function n(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(s){if(s.ep)return;s.ep=!0;const o=n(s);fetch(s.href,o)}})();var Lr=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function um(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function XT(t){if(t.__esModule)return t;var e=t.default;if(typeof e=="function"){var n=function r(){return this instanceof r?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(t).forEach(function(r){var s=Object.getOwnPropertyDescriptor(t,r);Object.defineProperty(n,r,s.get?s:{enumerable:!0,get:function(){return t[r]}})}),n}var pb={exports:{}},hd={},fb={exports:{}},Re={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var qu=Symbol.for("react.element"),qT=Symbol.for("react.portal"),YT=Symbol.for("react.fragment"),QT=Symbol.for("react.strict_mode"),ZT=Symbol.for("react.profiler"),JT=Symbol.for("react.provider"),eE=Symbol.for("react.context"),tE=Symbol.for("react.forward_ref"),nE=Symbol.for("react.suspense"),rE=Symbol.for("react.memo"),sE=Symbol.for("react.lazy"),Z1=Symbol.iterator;function oE(t){return t===null||typeof t!="object"?null:(t=Z1&&t[Z1]||t["@@iterator"],typeof t=="function"?t:null)}var mb={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},gb=Object.assign,yb={};function aa(t,e,n){this.props=t,this.context=e,this.refs=yb,this.updater=n||mb}aa.prototype.isReactComponent={};aa.prototype.setState=function(t,e){if(typeof t!="object"&&typeof t!="function"&&t!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,t,e,"setState")};aa.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")};function xb(){}xb.prototype=aa.prototype;function lm(t,e,n){this.props=t,this.context=e,this.refs=yb,this.updater=n||mb}var cm=lm.prototype=new xb;cm.constructor=lm;gb(cm,aa.prototype);cm.isPureReactComponent=!0;var J1=Array.isArray,vb=Object.prototype.hasOwnProperty,dm={current:null},wb={key:!0,ref:!0,__self:!0,__source:!0};function bb(t,e,n){var r,s={},o=null,i=null;if(e!=null)for(r in e.ref!==void 0&&(i=e.ref),e.key!==void 0&&(o=""+e.key),e)vb.call(e,r)&&!wb.hasOwnProperty(r)&&(s[r]=e[r]);var a=arguments.length-2;if(a===1)s.children=n;else if(1<a){for(var u=Array(a),l=0;l<a;l++)u[l]=arguments[l+2];s.children=u}if(t&&t.defaultProps)for(r in a=t.defaultProps,a)s[r]===void 0&&(s[r]=a[r]);return{$$typeof:qu,type:t,key:o,ref:i,props:s,_owner:dm.current}}function iE(t,e){return{$$typeof:qu,type:t.type,key:e,ref:t.ref,props:t.props,_owner:t._owner}}function hm(t){return typeof t=="object"&&t!==null&&t.$$typeof===qu}function aE(t){var e={"=":"=0",":":"=2"};return"$"+t.replace(/[=:]/g,function(n){return e[n]})}var ev=/\/+/g;function kh(t,e){return typeof t=="object"&&t!==null&&t.key!=null?aE(""+t.key):e.toString(36)}function ec(t,e,n,r,s){var o=typeof t;(o==="undefined"||o==="boolean")&&(t=null);var i=!1;if(t===null)i=!0;else switch(o){case"string":case"number":i=!0;break;case"object":switch(t.$$typeof){case qu:case qT:i=!0}}if(i)return i=t,s=s(i),t=r===""?"."+kh(i,0):r,J1(s)?(n="",t!=null&&(n=t.replace(ev,"$&/")+"/"),ec(s,e,n,"",function(l){return l})):s!=null&&(hm(s)&&(s=iE(s,n+(!s.key||i&&i.key===s.key?"":(""+s.key).replace(ev,"$&/")+"/")+t)),e.push(s)),1;if(i=0,r=r===""?".":r+":",J1(t))for(var a=0;a<t.length;a++){o=t[a];var u=r+kh(o,a);i+=ec(o,e,n,u,s)}else if(u=oE(t),typeof u=="function")for(t=u.call(t),a=0;!(o=t.next()).done;)o=o.value,u=r+kh(o,a++),i+=ec(o,e,n,u,s);else if(o==="object")throw e=String(t),Error("Objects are not valid as a React child (found: "+(e==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":e)+"). If you meant to render a collection of children, use an array instead.");return i}function Il(t,e,n){if(t==null)return t;var r=[],s=0;return ec(t,r,"","",function(o){return e.call(n,o,s++)}),r}function uE(t){if(t._status===-1){var e=t._result;e=e(),e.then(function(n){(t._status===0||t._status===-1)&&(t._status=1,t._result=n)},function(n){(t._status===0||t._status===-1)&&(t._status=2,t._result=n)}),t._status===-1&&(t._status=0,t._result=e)}if(t._status===1)return t._result.default;throw t._result}var sn={current:null},tc={transition:null},lE={ReactCurrentDispatcher:sn,ReactCurrentBatchConfig:tc,ReactCurrentOwner:dm};function Cb(){throw Error("act(...) is not supported in production builds of React.")}Re.Children={map:Il,forEach:function(t,e,n){Il(t,function(){e.apply(this,arguments)},n)},count:function(t){var e=0;return Il(t,function(){e++}),e},toArray:function(t){return Il(t,function(e){return e})||[]},only:function(t){if(!hm(t))throw Error("React.Children.only expected to receive a single React element child.");return t}};Re.Component=aa;Re.Fragment=YT;Re.Profiler=ZT;Re.PureComponent=lm;Re.StrictMode=QT;Re.Suspense=nE;Re.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=lE;Re.act=Cb;Re.cloneElement=function(t,e,n){if(t==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+t+".");var r=gb({},t.props),s=t.key,o=t.ref,i=t._owner;if(e!=null){if(e.ref!==void 0&&(o=e.ref,i=dm.current),e.key!==void 0&&(s=""+e.key),t.type&&t.type.defaultProps)var a=t.type.defaultProps;for(u in e)vb.call(e,u)&&!wb.hasOwnProperty(u)&&(r[u]=e[u]===void 0&&a!==void 0?a[u]:e[u])}var u=arguments.length-2;if(u===1)r.children=n;else if(1<u){a=Array(u);for(var l=0;l<u;l++)a[l]=arguments[l+2];r.children=a}return{$$typeof:qu,type:t.type,key:s,ref:o,props:r,_owner:i}};Re.createContext=function(t){return t={$$typeof:eE,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},t.Provider={$$typeof:JT,_context:t},t.Consumer=t};Re.createElement=bb;Re.createFactory=function(t){var e=bb.bind(null,t);return e.type=t,e};Re.createRef=function(){return{current:null}};Re.forwardRef=function(t){return{$$typeof:tE,render:t}};Re.isValidElement=hm;Re.lazy=function(t){return{$$typeof:sE,_payload:{_status:-1,_result:t},_init:uE}};Re.memo=function(t,e){return{$$typeof:rE,type:t,compare:e===void 0?null:e}};Re.startTransition=function(t){var e=tc.transition;tc.transition={};try{t()}finally{tc.transition=e}};Re.unstable_act=Cb;Re.useCallback=function(t,e){return sn.current.useCallback(t,e)};Re.useContext=function(t){return sn.current.useContext(t)};Re.useDebugValue=function(){};Re.useDeferredValue=function(t){return sn.current.useDeferredValue(t)};Re.useEffect=function(t,e){return sn.current.useEffect(t,e)};Re.useId=function(){return sn.current.useId()};Re.useImperativeHandle=function(t,e,n){return sn.current.useImperativeHandle(t,e,n)};Re.useInsertionEffect=function(t,e){return sn.current.useInsertionEffect(t,e)};Re.useLayoutEffect=function(t,e){return sn.current.useLayoutEffect(t,e)};Re.useMemo=function(t,e){return sn.current.useMemo(t,e)};Re.useReducer=function(t,e,n){return sn.current.useReducer(t,e,n)};Re.useRef=function(t){return sn.current.useRef(t)};Re.useState=function(t){return sn.current.useState(t)};Re.useSyncExternalStore=function(t,e,n){return sn.current.useSyncExternalStore(t,e,n)};Re.useTransition=function(){return sn.current.useTransition()};Re.version="18.3.1";fb.exports=Re;var nt=fb.exports;const pm=um(nt);/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var cE=nt,dE=Symbol.for("react.element"),hE=Symbol.for("react.fragment"),pE=Object.prototype.hasOwnProperty,fE=cE.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,mE={key:!0,ref:!0,__self:!0,__source:!0};function Sb(t,e,n){var r,s={},o=null,i=null;n!==void 0&&(o=""+n),e.key!==void 0&&(o=""+e.key),e.ref!==void 0&&(i=e.ref);for(r in e)pE.call(e,r)&&!mE.hasOwnProperty(r)&&(s[r]=e[r]);if(t&&t.defaultProps)for(r in e=t.defaultProps,e)s[r]===void 0&&(s[r]=e[r]);return{$$typeof:dE,type:t,key:o,ref:i,props:s,_owner:fE.current}}hd.Fragment=hE;hd.jsx=Sb;hd.jsxs=Sb;pb.exports=hd;var G=pb.exports,Sp={},$b={exports:{}},zn={},kb={exports:{}},Ib={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(t){function e(X,ie){var me=X.length;X.push(ie);e:for(;0<me;){var Ne=me-1>>>1,Me=X[Ne];if(0<s(Me,ie))X[Ne]=ie,X[me]=Me,me=Ne;else break e}}function n(X){return X.length===0?null:X[0]}function r(X){if(X.length===0)return null;var ie=X[0],me=X.pop();if(me!==ie){X[0]=me;e:for(var Ne=0,Me=X.length,un=Me>>>1;Ne<un;){var ln=2*(Ne+1)-1,Ir=X[ln],En=ln+1,ui=X[En];if(0>s(Ir,me))En<Me&&0>s(ui,Ir)?(X[Ne]=ui,X[En]=me,Ne=En):(X[Ne]=Ir,X[ln]=me,Ne=ln);else if(En<Me&&0>s(ui,me))X[Ne]=ui,X[En]=me,Ne=En;else break e}}return ie}function s(X,ie){var me=X.sortIndex-ie.sortIndex;return me!==0?me:X.id-ie.id}if(typeof performance=="object"&&typeof performance.now=="function"){var o=performance;t.unstable_now=function(){return o.now()}}else{var i=Date,a=i.now();t.unstable_now=function(){return i.now()-a}}var u=[],l=[],c=1,d=null,h=3,p=!1,f=!1,y=!1,x=typeof setTimeout=="function"?setTimeout:null,g=typeof clearTimeout=="function"?clearTimeout:null,v=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function b(X){for(var ie=n(l);ie!==null;){if(ie.callback===null)r(l);else if(ie.startTime<=X)r(l),ie.sortIndex=ie.expirationTime,e(u,ie);else break;ie=n(l)}}function S(X){if(y=!1,b(X),!f)if(n(u)!==null)f=!0,ce(I);else{var ie=n(l);ie!==null&&Ce(S,ie.startTime-X)}}function I(X,ie){f=!1,y&&(y=!1,g(_),_=-1),p=!0;var me=h;try{for(b(ie),d=n(u);d!==null&&(!(d.expirationTime>ie)||X&&!V());){var Ne=d.callback;if(typeof Ne=="function"){d.callback=null,h=d.priorityLevel;var Me=Ne(d.expirationTime<=ie);ie=t.unstable_now(),typeof Me=="function"?d.callback=Me:d===n(u)&&r(u),b(ie)}else r(u);d=n(u)}if(d!==null)var un=!0;else{var ln=n(l);ln!==null&&Ce(S,ln.startTime-ie),un=!1}return un}finally{d=null,h=me,p=!1}}var E=!1,R=null,_=-1,L=5,F=-1;function V(){return!(t.unstable_now()-F<L)}function j(){if(R!==null){var X=t.unstable_now();F=X;var ie=!0;try{ie=R(!0,X)}finally{ie?K():(E=!1,R=null)}}else E=!1}var K;if(typeof v=="function")K=function(){v(j)};else if(typeof MessageChannel<"u"){var Z=new MessageChannel,ne=Z.port2;Z.port1.onmessage=j,K=function(){ne.postMessage(null)}}else K=function(){x(j,0)};function ce(X){R=X,E||(E=!0,K())}function Ce(X,ie){_=x(function(){X(t.unstable_now())},ie)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(X){X.callback=null},t.unstable_continueExecution=function(){f||p||(f=!0,ce(I))},t.unstable_forceFrameRate=function(X){0>X||125<X?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):L=0<X?Math.floor(1e3/X):5},t.unstable_getCurrentPriorityLevel=function(){return h},t.unstable_getFirstCallbackNode=function(){return n(u)},t.unstable_next=function(X){switch(h){case 1:case 2:case 3:var ie=3;break;default:ie=h}var me=h;h=ie;try{return X()}finally{h=me}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(X,ie){switch(X){case 1:case 2:case 3:case 4:case 5:break;default:X=3}var me=h;h=X;try{return ie()}finally{h=me}},t.unstable_scheduleCallback=function(X,ie,me){var Ne=t.unstable_now();switch(typeof me=="object"&&me!==null?(me=me.delay,me=typeof me=="number"&&0<me?Ne+me:Ne):me=Ne,X){case 1:var Me=-1;break;case 2:Me=250;break;case 5:Me=1073741823;break;case 4:Me=1e4;break;default:Me=5e3}return Me=me+Me,X={id:c++,callback:ie,priorityLevel:X,startTime:me,expirationTime:Me,sortIndex:-1},me>Ne?(X.sortIndex=me,e(l,X),n(u)===null&&X===n(l)&&(y?(g(_),_=-1):y=!0,Ce(S,me-Ne))):(X.sortIndex=Me,e(u,X),f||p||(f=!0,ce(I))),X},t.unstable_shouldYield=V,t.unstable_wrapCallback=function(X){var ie=h;return function(){var me=h;h=ie;try{return X.apply(this,arguments)}finally{h=me}}}})(Ib);kb.exports=Ib;var gE=kb.exports;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var yE=nt,Ln=gE;function Q(t){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+t,n=1;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var Nb=new Set,fu={};function Xo(t,e){Wi(t,e),Wi(t+"Capture",e)}function Wi(t,e){for(fu[t]=e,t=0;t<e.length;t++)Nb.add(e[t])}var rs=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),$p=Object.prototype.hasOwnProperty,xE=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,tv={},nv={};function vE(t){return $p.call(nv,t)?!0:$p.call(tv,t)?!1:xE.test(t)?nv[t]=!0:(tv[t]=!0,!1)}function wE(t,e,n,r){if(n!==null&&n.type===0)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return r?!1:n!==null?!n.acceptsBooleans:(t=t.toLowerCase().slice(0,5),t!=="data-"&&t!=="aria-");default:return!1}}function bE(t,e,n,r){if(e===null||typeof e>"u"||wE(t,e,n,r))return!0;if(r)return!1;if(n!==null)switch(n.type){case 3:return!e;case 4:return e===!1;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}function on(t,e,n,r,s,o,i){this.acceptsBooleans=e===2||e===3||e===4,this.attributeName=r,this.attributeNamespace=s,this.mustUseProperty=n,this.propertyName=t,this.type=e,this.sanitizeURL=o,this.removeEmptyString=i}var Ft={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(t){Ft[t]=new on(t,0,!1,t,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(t){var e=t[0];Ft[e]=new on(e,1,!1,t[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(t){Ft[t]=new on(t,2,!1,t.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(t){Ft[t]=new on(t,2,!1,t,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(t){Ft[t]=new on(t,3,!1,t.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(t){Ft[t]=new on(t,3,!0,t,null,!1,!1)});["capture","download"].forEach(function(t){Ft[t]=new on(t,4,!1,t,null,!1,!1)});["cols","rows","size","span"].forEach(function(t){Ft[t]=new on(t,6,!1,t,null,!1,!1)});["rowSpan","start"].forEach(function(t){Ft[t]=new on(t,5,!1,t.toLowerCase(),null,!1,!1)});var fm=/[\-:]([a-z])/g;function mm(t){return t[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(t){var e=t.replace(fm,mm);Ft[e]=new on(e,1,!1,t,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(t){var e=t.replace(fm,mm);Ft[e]=new on(e,1,!1,t,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(t){var e=t.replace(fm,mm);Ft[e]=new on(e,1,!1,t,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(t){Ft[t]=new on(t,1,!1,t.toLowerCase(),null,!1,!1)});Ft.xlinkHref=new on("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(t){Ft[t]=new on(t,1,!1,t.toLowerCase(),null,!0,!0)});function gm(t,e,n,r){var s=Ft.hasOwnProperty(e)?Ft[e]:null;(s!==null?s.type!==0:r||!(2<e.length)||e[0]!=="o"&&e[0]!=="O"||e[1]!=="n"&&e[1]!=="N")&&(bE(e,n,s,r)&&(n=null),r||s===null?vE(e)&&(n===null?t.removeAttribute(e):t.setAttribute(e,""+n)):s.mustUseProperty?t[s.propertyName]=n===null?s.type===3?!1:"":n:(e=s.attributeName,r=s.attributeNamespace,n===null?t.removeAttribute(e):(s=s.type,n=s===3||s===4&&n===!0?"":""+n,r?t.setAttributeNS(r,e,n):t.setAttribute(e,n))))}var ms=yE.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Nl=Symbol.for("react.element"),vi=Symbol.for("react.portal"),wi=Symbol.for("react.fragment"),ym=Symbol.for("react.strict_mode"),kp=Symbol.for("react.profiler"),Tb=Symbol.for("react.provider"),Eb=Symbol.for("react.context"),xm=Symbol.for("react.forward_ref"),Ip=Symbol.for("react.suspense"),Np=Symbol.for("react.suspense_list"),vm=Symbol.for("react.memo"),Ss=Symbol.for("react.lazy"),Rb=Symbol.for("react.offscreen"),rv=Symbol.iterator;function Da(t){return t===null||typeof t!="object"?null:(t=rv&&t[rv]||t["@@iterator"],typeof t=="function"?t:null)}var ct=Object.assign,Ih;function ja(t){if(Ih===void 0)try{throw Error()}catch(n){var e=n.stack.trim().match(/\n( *(at )?)/);Ih=e&&e[1]||""}return`
`+Ih+t}var Nh=!1;function Th(t,e){if(!t||Nh)return"";Nh=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(e)if(e=function(){throw Error()},Object.defineProperty(e.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(e,[])}catch(l){var r=l}Reflect.construct(t,[],e)}else{try{e.call()}catch(l){r=l}t.call(e.prototype)}else{try{throw Error()}catch(l){r=l}t()}}catch(l){if(l&&r&&typeof l.stack=="string"){for(var s=l.stack.split(`
`),o=r.stack.split(`
`),i=s.length-1,a=o.length-1;1<=i&&0<=a&&s[i]!==o[a];)a--;for(;1<=i&&0<=a;i--,a--)if(s[i]!==o[a]){if(i!==1||a!==1)do if(i--,a--,0>a||s[i]!==o[a]){var u=`
`+s[i].replace(" at new "," at ");return t.displayName&&u.includes("<anonymous>")&&(u=u.replace("<anonymous>",t.displayName)),u}while(1<=i&&0<=a);break}}}finally{Nh=!1,Error.prepareStackTrace=n}return(t=t?t.displayName||t.name:"")?ja(t):""}function CE(t){switch(t.tag){case 5:return ja(t.type);case 16:return ja("Lazy");case 13:return ja("Suspense");case 19:return ja("SuspenseList");case 0:case 2:case 15:return t=Th(t.type,!1),t;case 11:return t=Th(t.type.render,!1),t;case 1:return t=Th(t.type,!0),t;default:return""}}function Tp(t){if(t==null)return null;if(typeof t=="function")return t.displayName||t.name||null;if(typeof t=="string")return t;switch(t){case wi:return"Fragment";case vi:return"Portal";case kp:return"Profiler";case ym:return"StrictMode";case Ip:return"Suspense";case Np:return"SuspenseList"}if(typeof t=="object")switch(t.$$typeof){case Eb:return(t.displayName||"Context")+".Consumer";case Tb:return(t._context.displayName||"Context")+".Provider";case xm:var e=t.render;return t=t.displayName,t||(t=e.displayName||e.name||"",t=t!==""?"ForwardRef("+t+")":"ForwardRef"),t;case vm:return e=t.displayName||null,e!==null?e:Tp(t.type)||"Memo";case Ss:e=t._payload,t=t._init;try{return Tp(t(e))}catch{}}return null}function SE(t){var e=t.type;switch(t.tag){case 24:return"Cache";case 9:return(e.displayName||"Context")+".Consumer";case 10:return(e._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return t=e.render,t=t.displayName||t.name||"",e.displayName||(t!==""?"ForwardRef("+t+")":"ForwardRef");case 7:return"Fragment";case 5:return e;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Tp(e);case 8:return e===ym?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e}return null}function Hs(t){switch(typeof t){case"boolean":case"number":case"string":case"undefined":return t;case"object":return t;default:return""}}function _b(t){var e=t.type;return(t=t.nodeName)&&t.toLowerCase()==="input"&&(e==="checkbox"||e==="radio")}function $E(t){var e=_b(t)?"checked":"value",n=Object.getOwnPropertyDescriptor(t.constructor.prototype,e),r=""+t[e];if(!t.hasOwnProperty(e)&&typeof n<"u"&&typeof n.get=="function"&&typeof n.set=="function"){var s=n.get,o=n.set;return Object.defineProperty(t,e,{configurable:!0,get:function(){return s.call(this)},set:function(i){r=""+i,o.call(this,i)}}),Object.defineProperty(t,e,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(i){r=""+i},stopTracking:function(){t._valueTracker=null,delete t[e]}}}}function Tl(t){t._valueTracker||(t._valueTracker=$E(t))}function Pb(t){if(!t)return!1;var e=t._valueTracker;if(!e)return!0;var n=e.getValue(),r="";return t&&(r=_b(t)?t.checked?"true":"false":t.value),t=r,t!==n?(e.setValue(t),!0):!1}function yc(t){if(t=t||(typeof document<"u"?document:void 0),typeof t>"u")return null;try{return t.activeElement||t.body}catch{return t.body}}function Ep(t,e){var n=e.checked;return ct({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:n??t._wrapperState.initialChecked})}function sv(t,e){var n=e.defaultValue==null?"":e.defaultValue,r=e.checked!=null?e.checked:e.defaultChecked;n=Hs(e.value!=null?e.value:n),t._wrapperState={initialChecked:r,initialValue:n,controlled:e.type==="checkbox"||e.type==="radio"?e.checked!=null:e.value!=null}}function Ab(t,e){e=e.checked,e!=null&&gm(t,"checked",e,!1)}function Rp(t,e){Ab(t,e);var n=Hs(e.value),r=e.type;if(n!=null)r==="number"?(n===0&&t.value===""||t.value!=n)&&(t.value=""+n):t.value!==""+n&&(t.value=""+n);else if(r==="submit"||r==="reset"){t.removeAttribute("value");return}e.hasOwnProperty("value")?_p(t,e.type,n):e.hasOwnProperty("defaultValue")&&_p(t,e.type,Hs(e.defaultValue)),e.checked==null&&e.defaultChecked!=null&&(t.defaultChecked=!!e.defaultChecked)}function ov(t,e,n){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var r=e.type;if(!(r!=="submit"&&r!=="reset"||e.value!==void 0&&e.value!==null))return;e=""+t._wrapperState.initialValue,n||e===t.value||(t.value=e),t.defaultValue=e}n=t.name,n!==""&&(t.name=""),t.defaultChecked=!!t._wrapperState.initialChecked,n!==""&&(t.name=n)}function _p(t,e,n){(e!=="number"||yc(t.ownerDocument)!==t)&&(n==null?t.defaultValue=""+t._wrapperState.initialValue:t.defaultValue!==""+n&&(t.defaultValue=""+n))}var Ka=Array.isArray;function Pi(t,e,n,r){if(t=t.options,e){e={};for(var s=0;s<n.length;s++)e["$"+n[s]]=!0;for(n=0;n<t.length;n++)s=e.hasOwnProperty("$"+t[n].value),t[n].selected!==s&&(t[n].selected=s),s&&r&&(t[n].defaultSelected=!0)}else{for(n=""+Hs(n),e=null,s=0;s<t.length;s++){if(t[s].value===n){t[s].selected=!0,r&&(t[s].defaultSelected=!0);return}e!==null||t[s].disabled||(e=t[s])}e!==null&&(e.selected=!0)}}function Pp(t,e){if(e.dangerouslySetInnerHTML!=null)throw Error(Q(91));return ct({},e,{value:void 0,defaultValue:void 0,children:""+t._wrapperState.initialValue})}function iv(t,e){var n=e.value;if(n==null){if(n=e.children,e=e.defaultValue,n!=null){if(e!=null)throw Error(Q(92));if(Ka(n)){if(1<n.length)throw Error(Q(93));n=n[0]}e=n}e==null&&(e=""),n=e}t._wrapperState={initialValue:Hs(n)}}function Db(t,e){var n=Hs(e.value),r=Hs(e.defaultValue);n!=null&&(n=""+n,n!==t.value&&(t.value=n),e.defaultValue==null&&t.defaultValue!==n&&(t.defaultValue=n)),r!=null&&(t.defaultValue=""+r)}function av(t){var e=t.textContent;e===t._wrapperState.initialValue&&e!==""&&e!==null&&(t.value=e)}function Ob(t){switch(t){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ap(t,e){return t==null||t==="http://www.w3.org/1999/xhtml"?Ob(e):t==="http://www.w3.org/2000/svg"&&e==="foreignObject"?"http://www.w3.org/1999/xhtml":t}var El,Fb=function(t){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(e,n,r,s){MSApp.execUnsafeLocalFunction(function(){return t(e,n,r,s)})}:t}(function(t,e){if(t.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in t)t.innerHTML=e;else{for(El=El||document.createElement("div"),El.innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=El.firstChild;t.firstChild;)t.removeChild(t.firstChild);for(;e.firstChild;)t.appendChild(e.firstChild)}});function mu(t,e){if(e){var n=t.firstChild;if(n&&n===t.lastChild&&n.nodeType===3){n.nodeValue=e;return}}t.textContent=e}var tu={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},kE=["Webkit","ms","Moz","O"];Object.keys(tu).forEach(function(t){kE.forEach(function(e){e=e+t.charAt(0).toUpperCase()+t.substring(1),tu[e]=tu[t]})});function Lb(t,e,n){return e==null||typeof e=="boolean"||e===""?"":n||typeof e!="number"||e===0||tu.hasOwnProperty(t)&&tu[t]?(""+e).trim():e+"px"}function zb(t,e){t=t.style;for(var n in e)if(e.hasOwnProperty(n)){var r=n.indexOf("--")===0,s=Lb(n,e[n],r);n==="float"&&(n="cssFloat"),r?t.setProperty(n,s):t[n]=s}}var IE=ct({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Dp(t,e){if(e){if(IE[t]&&(e.children!=null||e.dangerouslySetInnerHTML!=null))throw Error(Q(137,t));if(e.dangerouslySetInnerHTML!=null){if(e.children!=null)throw Error(Q(60));if(typeof e.dangerouslySetInnerHTML!="object"||!("__html"in e.dangerouslySetInnerHTML))throw Error(Q(61))}if(e.style!=null&&typeof e.style!="object")throw Error(Q(62))}}function Op(t,e){if(t.indexOf("-")===-1)return typeof e.is=="string";switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Fp=null;function wm(t){return t=t.target||t.srcElement||window,t.correspondingUseElement&&(t=t.correspondingUseElement),t.nodeType===3?t.parentNode:t}var Lp=null,Ai=null,Di=null;function uv(t){if(t=Zu(t)){if(typeof Lp!="function")throw Error(Q(280));var e=t.stateNode;e&&(e=yd(e),Lp(t.stateNode,t.type,e))}}function Bb(t){Ai?Di?Di.push(t):Di=[t]:Ai=t}function Mb(){if(Ai){var t=Ai,e=Di;if(Di=Ai=null,uv(t),e)for(t=0;t<e.length;t++)uv(e[t])}}function Vb(t,e){return t(e)}function Wb(){}var Eh=!1;function Ub(t,e,n){if(Eh)return t(e,n);Eh=!0;try{return Vb(t,e,n)}finally{Eh=!1,(Ai!==null||Di!==null)&&(Wb(),Mb())}}function gu(t,e){var n=t.stateNode;if(n===null)return null;var r=yd(n);if(r===null)return null;n=r[e];e:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(t=t.type,r=!(t==="button"||t==="input"||t==="select"||t==="textarea")),t=!r;break e;default:t=!1}if(t)return null;if(n&&typeof n!="function")throw Error(Q(231,e,typeof n));return n}var zp=!1;if(rs)try{var Oa={};Object.defineProperty(Oa,"passive",{get:function(){zp=!0}}),window.addEventListener("test",Oa,Oa),window.removeEventListener("test",Oa,Oa)}catch{zp=!1}function NE(t,e,n,r,s,o,i,a,u){var l=Array.prototype.slice.call(arguments,3);try{e.apply(n,l)}catch(c){this.onError(c)}}var nu=!1,xc=null,vc=!1,Bp=null,TE={onError:function(t){nu=!0,xc=t}};function EE(t,e,n,r,s,o,i,a,u){nu=!1,xc=null,NE.apply(TE,arguments)}function RE(t,e,n,r,s,o,i,a,u){if(EE.apply(this,arguments),nu){if(nu){var l=xc;nu=!1,xc=null}else throw Error(Q(198));vc||(vc=!0,Bp=l)}}function qo(t){var e=t,n=t;if(t.alternate)for(;e.return;)e=e.return;else{t=e;do e=t,e.flags&4098&&(n=e.return),t=e.return;while(t)}return e.tag===3?n:null}function Gb(t){if(t.tag===13){var e=t.memoizedState;if(e===null&&(t=t.alternate,t!==null&&(e=t.memoizedState)),e!==null)return e.dehydrated}return null}function lv(t){if(qo(t)!==t)throw Error(Q(188))}function _E(t){var e=t.alternate;if(!e){if(e=qo(t),e===null)throw Error(Q(188));return e!==t?null:t}for(var n=t,r=e;;){var s=n.return;if(s===null)break;var o=s.alternate;if(o===null){if(r=s.return,r!==null){n=r;continue}break}if(s.child===o.child){for(o=s.child;o;){if(o===n)return lv(s),t;if(o===r)return lv(s),e;o=o.sibling}throw Error(Q(188))}if(n.return!==r.return)n=s,r=o;else{for(var i=!1,a=s.child;a;){if(a===n){i=!0,n=s,r=o;break}if(a===r){i=!0,r=s,n=o;break}a=a.sibling}if(!i){for(a=o.child;a;){if(a===n){i=!0,n=o,r=s;break}if(a===r){i=!0,r=o,n=s;break}a=a.sibling}if(!i)throw Error(Q(189))}}if(n.alternate!==r)throw Error(Q(190))}if(n.tag!==3)throw Error(Q(188));return n.stateNode.current===n?t:e}function Hb(t){return t=_E(t),t!==null?jb(t):null}function jb(t){if(t.tag===5||t.tag===6)return t;for(t=t.child;t!==null;){var e=jb(t);if(e!==null)return e;t=t.sibling}return null}var Kb=Ln.unstable_scheduleCallback,cv=Ln.unstable_cancelCallback,PE=Ln.unstable_shouldYield,AE=Ln.unstable_requestPaint,mt=Ln.unstable_now,DE=Ln.unstable_getCurrentPriorityLevel,bm=Ln.unstable_ImmediatePriority,Xb=Ln.unstable_UserBlockingPriority,wc=Ln.unstable_NormalPriority,OE=Ln.unstable_LowPriority,qb=Ln.unstable_IdlePriority,pd=null,zr=null;function FE(t){if(zr&&typeof zr.onCommitFiberRoot=="function")try{zr.onCommitFiberRoot(pd,t,void 0,(t.current.flags&128)===128)}catch{}}var vr=Math.clz32?Math.clz32:BE,LE=Math.log,zE=Math.LN2;function BE(t){return t>>>=0,t===0?32:31-(LE(t)/zE|0)|0}var Rl=64,_l=4194304;function Xa(t){switch(t&-t){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return t&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return t}}function bc(t,e){var n=t.pendingLanes;if(n===0)return 0;var r=0,s=t.suspendedLanes,o=t.pingedLanes,i=n&268435455;if(i!==0){var a=i&~s;a!==0?r=Xa(a):(o&=i,o!==0&&(r=Xa(o)))}else i=n&~s,i!==0?r=Xa(i):o!==0&&(r=Xa(o));if(r===0)return 0;if(e!==0&&e!==r&&!(e&s)&&(s=r&-r,o=e&-e,s>=o||s===16&&(o&4194240)!==0))return e;if(r&4&&(r|=n&16),e=t.entangledLanes,e!==0)for(t=t.entanglements,e&=r;0<e;)n=31-vr(e),s=1<<n,r|=t[n],e&=~s;return r}function ME(t,e){switch(t){case 1:case 2:case 4:return e+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function VE(t,e){for(var n=t.suspendedLanes,r=t.pingedLanes,s=t.expirationTimes,o=t.pendingLanes;0<o;){var i=31-vr(o),a=1<<i,u=s[i];u===-1?(!(a&n)||a&r)&&(s[i]=ME(a,e)):u<=e&&(t.expiredLanes|=a),o&=~a}}function Mp(t){return t=t.pendingLanes&-1073741825,t!==0?t:t&1073741824?1073741824:0}function Yb(){var t=Rl;return Rl<<=1,!(Rl&4194240)&&(Rl=64),t}function Rh(t){for(var e=[],n=0;31>n;n++)e.push(t);return e}function Yu(t,e,n){t.pendingLanes|=e,e!==536870912&&(t.suspendedLanes=0,t.pingedLanes=0),t=t.eventTimes,e=31-vr(e),t[e]=n}function WE(t,e){var n=t.pendingLanes&~e;t.pendingLanes=e,t.suspendedLanes=0,t.pingedLanes=0,t.expiredLanes&=e,t.mutableReadLanes&=e,t.entangledLanes&=e,e=t.entanglements;var r=t.eventTimes;for(t=t.expirationTimes;0<n;){var s=31-vr(n),o=1<<s;e[s]=0,r[s]=-1,t[s]=-1,n&=~o}}function Cm(t,e){var n=t.entangledLanes|=e;for(t=t.entanglements;n;){var r=31-vr(n),s=1<<r;s&e|t[r]&e&&(t[r]|=e),n&=~s}}var Ue=0;function Qb(t){return t&=-t,1<t?4<t?t&268435455?16:536870912:4:1}var Zb,Sm,Jb,eC,tC,Vp=!1,Pl=[],As=null,Ds=null,Os=null,yu=new Map,xu=new Map,Is=[],UE="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function dv(t,e){switch(t){case"focusin":case"focusout":As=null;break;case"dragenter":case"dragleave":Ds=null;break;case"mouseover":case"mouseout":Os=null;break;case"pointerover":case"pointerout":yu.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":xu.delete(e.pointerId)}}function Fa(t,e,n,r,s,o){return t===null||t.nativeEvent!==o?(t={blockedOn:e,domEventName:n,eventSystemFlags:r,nativeEvent:o,targetContainers:[s]},e!==null&&(e=Zu(e),e!==null&&Sm(e)),t):(t.eventSystemFlags|=r,e=t.targetContainers,s!==null&&e.indexOf(s)===-1&&e.push(s),t)}function GE(t,e,n,r,s){switch(e){case"focusin":return As=Fa(As,t,e,n,r,s),!0;case"dragenter":return Ds=Fa(Ds,t,e,n,r,s),!0;case"mouseover":return Os=Fa(Os,t,e,n,r,s),!0;case"pointerover":var o=s.pointerId;return yu.set(o,Fa(yu.get(o)||null,t,e,n,r,s)),!0;case"gotpointercapture":return o=s.pointerId,xu.set(o,Fa(xu.get(o)||null,t,e,n,r,s)),!0}return!1}function nC(t){var e=Co(t.target);if(e!==null){var n=qo(e);if(n!==null){if(e=n.tag,e===13){if(e=Gb(n),e!==null){t.blockedOn=e,tC(t.priority,function(){Jb(n)});return}}else if(e===3&&n.stateNode.current.memoizedState.isDehydrated){t.blockedOn=n.tag===3?n.stateNode.containerInfo:null;return}}}t.blockedOn=null}function nc(t){if(t.blockedOn!==null)return!1;for(var e=t.targetContainers;0<e.length;){var n=Wp(t.domEventName,t.eventSystemFlags,e[0],t.nativeEvent);if(n===null){n=t.nativeEvent;var r=new n.constructor(n.type,n);Fp=r,n.target.dispatchEvent(r),Fp=null}else return e=Zu(n),e!==null&&Sm(e),t.blockedOn=n,!1;e.shift()}return!0}function hv(t,e,n){nc(t)&&n.delete(e)}function HE(){Vp=!1,As!==null&&nc(As)&&(As=null),Ds!==null&&nc(Ds)&&(Ds=null),Os!==null&&nc(Os)&&(Os=null),yu.forEach(hv),xu.forEach(hv)}function La(t,e){t.blockedOn===e&&(t.blockedOn=null,Vp||(Vp=!0,Ln.unstable_scheduleCallback(Ln.unstable_NormalPriority,HE)))}function vu(t){function e(s){return La(s,t)}if(0<Pl.length){La(Pl[0],t);for(var n=1;n<Pl.length;n++){var r=Pl[n];r.blockedOn===t&&(r.blockedOn=null)}}for(As!==null&&La(As,t),Ds!==null&&La(Ds,t),Os!==null&&La(Os,t),yu.forEach(e),xu.forEach(e),n=0;n<Is.length;n++)r=Is[n],r.blockedOn===t&&(r.blockedOn=null);for(;0<Is.length&&(n=Is[0],n.blockedOn===null);)nC(n),n.blockedOn===null&&Is.shift()}var Oi=ms.ReactCurrentBatchConfig,Cc=!0;function jE(t,e,n,r){var s=Ue,o=Oi.transition;Oi.transition=null;try{Ue=1,$m(t,e,n,r)}finally{Ue=s,Oi.transition=o}}function KE(t,e,n,r){var s=Ue,o=Oi.transition;Oi.transition=null;try{Ue=4,$m(t,e,n,r)}finally{Ue=s,Oi.transition=o}}function $m(t,e,n,r){if(Cc){var s=Wp(t,e,n,r);if(s===null)Mh(t,e,r,Sc,n),dv(t,r);else if(GE(s,t,e,n,r))r.stopPropagation();else if(dv(t,r),e&4&&-1<UE.indexOf(t)){for(;s!==null;){var o=Zu(s);if(o!==null&&Zb(o),o=Wp(t,e,n,r),o===null&&Mh(t,e,r,Sc,n),o===s)break;s=o}s!==null&&r.stopPropagation()}else Mh(t,e,r,null,n)}}var Sc=null;function Wp(t,e,n,r){if(Sc=null,t=wm(r),t=Co(t),t!==null)if(e=qo(t),e===null)t=null;else if(n=e.tag,n===13){if(t=Gb(e),t!==null)return t;t=null}else if(n===3){if(e.stateNode.current.memoizedState.isDehydrated)return e.tag===3?e.stateNode.containerInfo:null;t=null}else e!==t&&(t=null);return Sc=t,null}function rC(t){switch(t){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(DE()){case bm:return 1;case Xb:return 4;case wc:case OE:return 16;case qb:return 536870912;default:return 16}default:return 16}}var Ts=null,km=null,rc=null;function sC(){if(rc)return rc;var t,e=km,n=e.length,r,s="value"in Ts?Ts.value:Ts.textContent,o=s.length;for(t=0;t<n&&e[t]===s[t];t++);var i=n-t;for(r=1;r<=i&&e[n-r]===s[o-r];r++);return rc=s.slice(t,1<r?1-r:void 0)}function sc(t){var e=t.keyCode;return"charCode"in t?(t=t.charCode,t===0&&e===13&&(t=13)):t=e,t===10&&(t=13),32<=t||t===13?t:0}function Al(){return!0}function pv(){return!1}function Bn(t){function e(n,r,s,o,i){this._reactName=n,this._targetInst=s,this.type=r,this.nativeEvent=o,this.target=i,this.currentTarget=null;for(var a in t)t.hasOwnProperty(a)&&(n=t[a],this[a]=n?n(o):o[a]);return this.isDefaultPrevented=(o.defaultPrevented!=null?o.defaultPrevented:o.returnValue===!1)?Al:pv,this.isPropagationStopped=pv,this}return ct(e.prototype,{preventDefault:function(){this.defaultPrevented=!0;var n=this.nativeEvent;n&&(n.preventDefault?n.preventDefault():typeof n.returnValue!="unknown"&&(n.returnValue=!1),this.isDefaultPrevented=Al)},stopPropagation:function(){var n=this.nativeEvent;n&&(n.stopPropagation?n.stopPropagation():typeof n.cancelBubble!="unknown"&&(n.cancelBubble=!0),this.isPropagationStopped=Al)},persist:function(){},isPersistent:Al}),e}var ua={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Im=Bn(ua),Qu=ct({},ua,{view:0,detail:0}),XE=Bn(Qu),_h,Ph,za,fd=ct({},Qu,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Nm,button:0,buttons:0,relatedTarget:function(t){return t.relatedTarget===void 0?t.fromElement===t.srcElement?t.toElement:t.fromElement:t.relatedTarget},movementX:function(t){return"movementX"in t?t.movementX:(t!==za&&(za&&t.type==="mousemove"?(_h=t.screenX-za.screenX,Ph=t.screenY-za.screenY):Ph=_h=0,za=t),_h)},movementY:function(t){return"movementY"in t?t.movementY:Ph}}),fv=Bn(fd),qE=ct({},fd,{dataTransfer:0}),YE=Bn(qE),QE=ct({},Qu,{relatedTarget:0}),Ah=Bn(QE),ZE=ct({},ua,{animationName:0,elapsedTime:0,pseudoElement:0}),JE=Bn(ZE),eR=ct({},ua,{clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),tR=Bn(eR),nR=ct({},ua,{data:0}),mv=Bn(nR),rR={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},sR={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},oR={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function iR(t){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(t):(t=oR[t])?!!e[t]:!1}function Nm(){return iR}var aR=ct({},Qu,{key:function(t){if(t.key){var e=rR[t.key]||t.key;if(e!=="Unidentified")return e}return t.type==="keypress"?(t=sc(t),t===13?"Enter":String.fromCharCode(t)):t.type==="keydown"||t.type==="keyup"?sR[t.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Nm,charCode:function(t){return t.type==="keypress"?sc(t):0},keyCode:function(t){return t.type==="keydown"||t.type==="keyup"?t.keyCode:0},which:function(t){return t.type==="keypress"?sc(t):t.type==="keydown"||t.type==="keyup"?t.keyCode:0}}),uR=Bn(aR),lR=ct({},fd,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),gv=Bn(lR),cR=ct({},Qu,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Nm}),dR=Bn(cR),hR=ct({},ua,{propertyName:0,elapsedTime:0,pseudoElement:0}),pR=Bn(hR),fR=ct({},fd,{deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:0,deltaMode:0}),mR=Bn(fR),gR=[9,13,27,32],Tm=rs&&"CompositionEvent"in window,ru=null;rs&&"documentMode"in document&&(ru=document.documentMode);var yR=rs&&"TextEvent"in window&&!ru,oC=rs&&(!Tm||ru&&8<ru&&11>=ru),yv=" ",xv=!1;function iC(t,e){switch(t){case"keyup":return gR.indexOf(e.keyCode)!==-1;case"keydown":return e.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function aC(t){return t=t.detail,typeof t=="object"&&"data"in t?t.data:null}var bi=!1;function xR(t,e){switch(t){case"compositionend":return aC(e);case"keypress":return e.which!==32?null:(xv=!0,yv);case"textInput":return t=e.data,t===yv&&xv?null:t;default:return null}}function vR(t,e){if(bi)return t==="compositionend"||!Tm&&iC(t,e)?(t=sC(),rc=km=Ts=null,bi=!1,t):null;switch(t){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return oC&&e.locale!=="ko"?null:e.data;default:return null}}var wR={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function vv(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e==="input"?!!wR[t.type]:e==="textarea"}function uC(t,e,n,r){Bb(r),e=$c(e,"onChange"),0<e.length&&(n=new Im("onChange","change",null,n,r),t.push({event:n,listeners:e}))}var su=null,wu=null;function bR(t){vC(t,0)}function md(t){var e=$i(t);if(Pb(e))return t}function CR(t,e){if(t==="change")return e}var lC=!1;if(rs){var Dh;if(rs){var Oh="oninput"in document;if(!Oh){var wv=document.createElement("div");wv.setAttribute("oninput","return;"),Oh=typeof wv.oninput=="function"}Dh=Oh}else Dh=!1;lC=Dh&&(!document.documentMode||9<document.documentMode)}function bv(){su&&(su.detachEvent("onpropertychange",cC),wu=su=null)}function cC(t){if(t.propertyName==="value"&&md(wu)){var e=[];uC(e,wu,t,wm(t)),Ub(bR,e)}}function SR(t,e,n){t==="focusin"?(bv(),su=e,wu=n,su.attachEvent("onpropertychange",cC)):t==="focusout"&&bv()}function $R(t){if(t==="selectionchange"||t==="keyup"||t==="keydown")return md(wu)}function kR(t,e){if(t==="click")return md(e)}function IR(t,e){if(t==="input"||t==="change")return md(e)}function NR(t,e){return t===e&&(t!==0||1/t===1/e)||t!==t&&e!==e}var br=typeof Object.is=="function"?Object.is:NR;function bu(t,e){if(br(t,e))return!0;if(typeof t!="object"||t===null||typeof e!="object"||e===null)return!1;var n=Object.keys(t),r=Object.keys(e);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var s=n[r];if(!$p.call(e,s)||!br(t[s],e[s]))return!1}return!0}function Cv(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function Sv(t,e){var n=Cv(t);t=0;for(var r;n;){if(n.nodeType===3){if(r=t+n.textContent.length,t<=e&&r>=e)return{node:n,offset:e-t};t=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=Cv(n)}}function dC(t,e){return t&&e?t===e?!0:t&&t.nodeType===3?!1:e&&e.nodeType===3?dC(t,e.parentNode):"contains"in t?t.contains(e):t.compareDocumentPosition?!!(t.compareDocumentPosition(e)&16):!1:!1}function hC(){for(var t=window,e=yc();e instanceof t.HTMLIFrameElement;){try{var n=typeof e.contentWindow.location.href=="string"}catch{n=!1}if(n)t=e.contentWindow;else break;e=yc(t.document)}return e}function Em(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&(e==="input"&&(t.type==="text"||t.type==="search"||t.type==="tel"||t.type==="url"||t.type==="password")||e==="textarea"||t.contentEditable==="true")}function TR(t){var e=hC(),n=t.focusedElem,r=t.selectionRange;if(e!==n&&n&&n.ownerDocument&&dC(n.ownerDocument.documentElement,n)){if(r!==null&&Em(n)){if(e=r.start,t=r.end,t===void 0&&(t=e),"selectionStart"in n)n.selectionStart=e,n.selectionEnd=Math.min(t,n.value.length);else if(t=(e=n.ownerDocument||document)&&e.defaultView||window,t.getSelection){t=t.getSelection();var s=n.textContent.length,o=Math.min(r.start,s);r=r.end===void 0?o:Math.min(r.end,s),!t.extend&&o>r&&(s=r,r=o,o=s),s=Sv(n,o);var i=Sv(n,r);s&&i&&(t.rangeCount!==1||t.anchorNode!==s.node||t.anchorOffset!==s.offset||t.focusNode!==i.node||t.focusOffset!==i.offset)&&(e=e.createRange(),e.setStart(s.node,s.offset),t.removeAllRanges(),o>r?(t.addRange(e),t.extend(i.node,i.offset)):(e.setEnd(i.node,i.offset),t.addRange(e)))}}for(e=[],t=n;t=t.parentNode;)t.nodeType===1&&e.push({element:t,left:t.scrollLeft,top:t.scrollTop});for(typeof n.focus=="function"&&n.focus(),n=0;n<e.length;n++)t=e[n],t.element.scrollLeft=t.left,t.element.scrollTop=t.top}}var ER=rs&&"documentMode"in document&&11>=document.documentMode,Ci=null,Up=null,ou=null,Gp=!1;function $v(t,e,n){var r=n.window===n?n.document:n.nodeType===9?n:n.ownerDocument;Gp||Ci==null||Ci!==yc(r)||(r=Ci,"selectionStart"in r&&Em(r)?r={start:r.selectionStart,end:r.selectionEnd}:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection(),r={anchorNode:r.anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset}),ou&&bu(ou,r)||(ou=r,r=$c(Up,"onSelect"),0<r.length&&(e=new Im("onSelect","select",null,e,n),t.push({event:e,listeners:r}),e.target=Ci)))}function Dl(t,e){var n={};return n[t.toLowerCase()]=e.toLowerCase(),n["Webkit"+t]="webkit"+e,n["Moz"+t]="moz"+e,n}var Si={animationend:Dl("Animation","AnimationEnd"),animationiteration:Dl("Animation","AnimationIteration"),animationstart:Dl("Animation","AnimationStart"),transitionend:Dl("Transition","TransitionEnd")},Fh={},pC={};rs&&(pC=document.createElement("div").style,"AnimationEvent"in window||(delete Si.animationend.animation,delete Si.animationiteration.animation,delete Si.animationstart.animation),"TransitionEvent"in window||delete Si.transitionend.transition);function gd(t){if(Fh[t])return Fh[t];if(!Si[t])return t;var e=Si[t],n;for(n in e)if(e.hasOwnProperty(n)&&n in pC)return Fh[t]=e[n];return t}var fC=gd("animationend"),mC=gd("animationiteration"),gC=gd("animationstart"),yC=gd("transitionend"),xC=new Map,kv="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Qs(t,e){xC.set(t,e),Xo(e,[t])}for(var Lh=0;Lh<kv.length;Lh++){var zh=kv[Lh],RR=zh.toLowerCase(),_R=zh[0].toUpperCase()+zh.slice(1);Qs(RR,"on"+_R)}Qs(fC,"onAnimationEnd");Qs(mC,"onAnimationIteration");Qs(gC,"onAnimationStart");Qs("dblclick","onDoubleClick");Qs("focusin","onFocus");Qs("focusout","onBlur");Qs(yC,"onTransitionEnd");Wi("onMouseEnter",["mouseout","mouseover"]);Wi("onMouseLeave",["mouseout","mouseover"]);Wi("onPointerEnter",["pointerout","pointerover"]);Wi("onPointerLeave",["pointerout","pointerover"]);Xo("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));Xo("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));Xo("onBeforeInput",["compositionend","keypress","textInput","paste"]);Xo("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));Xo("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));Xo("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var qa="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),PR=new Set("cancel close invalid load scroll toggle".split(" ").concat(qa));function Iv(t,e,n){var r=t.type||"unknown-event";t.currentTarget=n,RE(r,e,void 0,t),t.currentTarget=null}function vC(t,e){e=(e&4)!==0;for(var n=0;n<t.length;n++){var r=t[n],s=r.event;r=r.listeners;e:{var o=void 0;if(e)for(var i=r.length-1;0<=i;i--){var a=r[i],u=a.instance,l=a.currentTarget;if(a=a.listener,u!==o&&s.isPropagationStopped())break e;Iv(s,a,l),o=u}else for(i=0;i<r.length;i++){if(a=r[i],u=a.instance,l=a.currentTarget,a=a.listener,u!==o&&s.isPropagationStopped())break e;Iv(s,a,l),o=u}}}if(vc)throw t=Bp,vc=!1,Bp=null,t}function tt(t,e){var n=e[qp];n===void 0&&(n=e[qp]=new Set);var r=t+"__bubble";n.has(r)||(wC(e,t,2,!1),n.add(r))}function Bh(t,e,n){var r=0;e&&(r|=4),wC(n,t,r,e)}var Ol="_reactListening"+Math.random().toString(36).slice(2);function Cu(t){if(!t[Ol]){t[Ol]=!0,Nb.forEach(function(n){n!=="selectionchange"&&(PR.has(n)||Bh(n,!1,t),Bh(n,!0,t))});var e=t.nodeType===9?t:t.ownerDocument;e===null||e[Ol]||(e[Ol]=!0,Bh("selectionchange",!1,e))}}function wC(t,e,n,r){switch(rC(e)){case 1:var s=jE;break;case 4:s=KE;break;default:s=$m}n=s.bind(null,e,n,t),s=void 0,!zp||e!=="touchstart"&&e!=="touchmove"&&e!=="wheel"||(s=!0),r?s!==void 0?t.addEventListener(e,n,{capture:!0,passive:s}):t.addEventListener(e,n,!0):s!==void 0?t.addEventListener(e,n,{passive:s}):t.addEventListener(e,n,!1)}function Mh(t,e,n,r,s){var o=r;if(!(e&1)&&!(e&2)&&r!==null)e:for(;;){if(r===null)return;var i=r.tag;if(i===3||i===4){var a=r.stateNode.containerInfo;if(a===s||a.nodeType===8&&a.parentNode===s)break;if(i===4)for(i=r.return;i!==null;){var u=i.tag;if((u===3||u===4)&&(u=i.stateNode.containerInfo,u===s||u.nodeType===8&&u.parentNode===s))return;i=i.return}for(;a!==null;){if(i=Co(a),i===null)return;if(u=i.tag,u===5||u===6){r=o=i;continue e}a=a.parentNode}}r=r.return}Ub(function(){var l=o,c=wm(n),d=[];e:{var h=xC.get(t);if(h!==void 0){var p=Im,f=t;switch(t){case"keypress":if(sc(n)===0)break e;case"keydown":case"keyup":p=uR;break;case"focusin":f="focus",p=Ah;break;case"focusout":f="blur",p=Ah;break;case"beforeblur":case"afterblur":p=Ah;break;case"click":if(n.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":p=fv;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":p=YE;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":p=dR;break;case fC:case mC:case gC:p=JE;break;case yC:p=pR;break;case"scroll":p=XE;break;case"wheel":p=mR;break;case"copy":case"cut":case"paste":p=tR;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":p=gv}var y=(e&4)!==0,x=!y&&t==="scroll",g=y?h!==null?h+"Capture":null:h;y=[];for(var v=l,b;v!==null;){b=v;var S=b.stateNode;if(b.tag===5&&S!==null&&(b=S,g!==null&&(S=gu(v,g),S!=null&&y.push(Su(v,S,b)))),x)break;v=v.return}0<y.length&&(h=new p(h,f,null,n,c),d.push({event:h,listeners:y}))}}if(!(e&7)){e:{if(h=t==="mouseover"||t==="pointerover",p=t==="mouseout"||t==="pointerout",h&&n!==Fp&&(f=n.relatedTarget||n.fromElement)&&(Co(f)||f[ss]))break e;if((p||h)&&(h=c.window===c?c:(h=c.ownerDocument)?h.defaultView||h.parentWindow:window,p?(f=n.relatedTarget||n.toElement,p=l,f=f?Co(f):null,f!==null&&(x=qo(f),f!==x||f.tag!==5&&f.tag!==6)&&(f=null)):(p=null,f=l),p!==f)){if(y=fv,S="onMouseLeave",g="onMouseEnter",v="mouse",(t==="pointerout"||t==="pointerover")&&(y=gv,S="onPointerLeave",g="onPointerEnter",v="pointer"),x=p==null?h:$i(p),b=f==null?h:$i(f),h=new y(S,v+"leave",p,n,c),h.target=x,h.relatedTarget=b,S=null,Co(c)===l&&(y=new y(g,v+"enter",f,n,c),y.target=b,y.relatedTarget=x,S=y),x=S,p&&f)t:{for(y=p,g=f,v=0,b=y;b;b=di(b))v++;for(b=0,S=g;S;S=di(S))b++;for(;0<v-b;)y=di(y),v--;for(;0<b-v;)g=di(g),b--;for(;v--;){if(y===g||g!==null&&y===g.alternate)break t;y=di(y),g=di(g)}y=null}else y=null;p!==null&&Nv(d,h,p,y,!1),f!==null&&x!==null&&Nv(d,x,f,y,!0)}}e:{if(h=l?$i(l):window,p=h.nodeName&&h.nodeName.toLowerCase(),p==="select"||p==="input"&&h.type==="file")var I=CR;else if(vv(h))if(lC)I=IR;else{I=$R;var E=SR}else(p=h.nodeName)&&p.toLowerCase()==="input"&&(h.type==="checkbox"||h.type==="radio")&&(I=kR);if(I&&(I=I(t,l))){uC(d,I,n,c);break e}E&&E(t,h,l),t==="focusout"&&(E=h._wrapperState)&&E.controlled&&h.type==="number"&&_p(h,"number",h.value)}switch(E=l?$i(l):window,t){case"focusin":(vv(E)||E.contentEditable==="true")&&(Ci=E,Up=l,ou=null);break;case"focusout":ou=Up=Ci=null;break;case"mousedown":Gp=!0;break;case"contextmenu":case"mouseup":case"dragend":Gp=!1,$v(d,n,c);break;case"selectionchange":if(ER)break;case"keydown":case"keyup":$v(d,n,c)}var R;if(Tm)e:{switch(t){case"compositionstart":var _="onCompositionStart";break e;case"compositionend":_="onCompositionEnd";break e;case"compositionupdate":_="onCompositionUpdate";break e}_=void 0}else bi?iC(t,n)&&(_="onCompositionEnd"):t==="keydown"&&n.keyCode===229&&(_="onCompositionStart");_&&(oC&&n.locale!=="ko"&&(bi||_!=="onCompositionStart"?_==="onCompositionEnd"&&bi&&(R=sC()):(Ts=c,km="value"in Ts?Ts.value:Ts.textContent,bi=!0)),E=$c(l,_),0<E.length&&(_=new mv(_,t,null,n,c),d.push({event:_,listeners:E}),R?_.data=R:(R=aC(n),R!==null&&(_.data=R)))),(R=yR?xR(t,n):vR(t,n))&&(l=$c(l,"onBeforeInput"),0<l.length&&(c=new mv("onBeforeInput","beforeinput",null,n,c),d.push({event:c,listeners:l}),c.data=R))}vC(d,e)})}function Su(t,e,n){return{instance:t,listener:e,currentTarget:n}}function $c(t,e){for(var n=e+"Capture",r=[];t!==null;){var s=t,o=s.stateNode;s.tag===5&&o!==null&&(s=o,o=gu(t,n),o!=null&&r.unshift(Su(t,o,s)),o=gu(t,e),o!=null&&r.push(Su(t,o,s))),t=t.return}return r}function di(t){if(t===null)return null;do t=t.return;while(t&&t.tag!==5);return t||null}function Nv(t,e,n,r,s){for(var o=e._reactName,i=[];n!==null&&n!==r;){var a=n,u=a.alternate,l=a.stateNode;if(u!==null&&u===r)break;a.tag===5&&l!==null&&(a=l,s?(u=gu(n,o),u!=null&&i.unshift(Su(n,u,a))):s||(u=gu(n,o),u!=null&&i.push(Su(n,u,a)))),n=n.return}i.length!==0&&t.push({event:e,listeners:i})}var AR=/\r\n?/g,DR=/\u0000|\uFFFD/g;function Tv(t){return(typeof t=="string"?t:""+t).replace(AR,`
`).replace(DR,"")}function Fl(t,e,n){if(e=Tv(e),Tv(t)!==e&&n)throw Error(Q(425))}function kc(){}var Hp=null,jp=null;function Kp(t,e){return t==="textarea"||t==="noscript"||typeof e.children=="string"||typeof e.children=="number"||typeof e.dangerouslySetInnerHTML=="object"&&e.dangerouslySetInnerHTML!==null&&e.dangerouslySetInnerHTML.__html!=null}var Xp=typeof setTimeout=="function"?setTimeout:void 0,OR=typeof clearTimeout=="function"?clearTimeout:void 0,Ev=typeof Promise=="function"?Promise:void 0,FR=typeof queueMicrotask=="function"?queueMicrotask:typeof Ev<"u"?function(t){return Ev.resolve(null).then(t).catch(LR)}:Xp;function LR(t){setTimeout(function(){throw t})}function Vh(t,e){var n=e,r=0;do{var s=n.nextSibling;if(t.removeChild(n),s&&s.nodeType===8)if(n=s.data,n==="/$"){if(r===0){t.removeChild(s),vu(e);return}r--}else n!=="$"&&n!=="$?"&&n!=="$!"||r++;n=s}while(n);vu(e)}function Fs(t){for(;t!=null;t=t.nextSibling){var e=t.nodeType;if(e===1||e===3)break;if(e===8){if(e=t.data,e==="$"||e==="$!"||e==="$?")break;if(e==="/$")return null}}return t}function Rv(t){t=t.previousSibling;for(var e=0;t;){if(t.nodeType===8){var n=t.data;if(n==="$"||n==="$!"||n==="$?"){if(e===0)return t;e--}else n==="/$"&&e++}t=t.previousSibling}return null}var la=Math.random().toString(36).slice(2),Dr="__reactFiber$"+la,$u="__reactProps$"+la,ss="__reactContainer$"+la,qp="__reactEvents$"+la,zR="__reactListeners$"+la,BR="__reactHandles$"+la;function Co(t){var e=t[Dr];if(e)return e;for(var n=t.parentNode;n;){if(e=n[ss]||n[Dr]){if(n=e.alternate,e.child!==null||n!==null&&n.child!==null)for(t=Rv(t);t!==null;){if(n=t[Dr])return n;t=Rv(t)}return e}t=n,n=t.parentNode}return null}function Zu(t){return t=t[Dr]||t[ss],!t||t.tag!==5&&t.tag!==6&&t.tag!==13&&t.tag!==3?null:t}function $i(t){if(t.tag===5||t.tag===6)return t.stateNode;throw Error(Q(33))}function yd(t){return t[$u]||null}var Yp=[],ki=-1;function Zs(t){return{current:t}}function rt(t){0>ki||(t.current=Yp[ki],Yp[ki]=null,ki--)}function Ye(t,e){ki++,Yp[ki]=t.current,t.current=e}var js={},Kt=Zs(js),wn=Zs(!1),Do=js;function Ui(t,e){var n=t.type.contextTypes;if(!n)return js;var r=t.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===e)return r.__reactInternalMemoizedMaskedChildContext;var s={},o;for(o in n)s[o]=e[o];return r&&(t=t.stateNode,t.__reactInternalMemoizedUnmaskedChildContext=e,t.__reactInternalMemoizedMaskedChildContext=s),s}function bn(t){return t=t.childContextTypes,t!=null}function Ic(){rt(wn),rt(Kt)}function _v(t,e,n){if(Kt.current!==js)throw Error(Q(168));Ye(Kt,e),Ye(wn,n)}function bC(t,e,n){var r=t.stateNode;if(e=e.childContextTypes,typeof r.getChildContext!="function")return n;r=r.getChildContext();for(var s in r)if(!(s in e))throw Error(Q(108,SE(t)||"Unknown",s));return ct({},n,r)}function Nc(t){return t=(t=t.stateNode)&&t.__reactInternalMemoizedMergedChildContext||js,Do=Kt.current,Ye(Kt,t),Ye(wn,wn.current),!0}function Pv(t,e,n){var r=t.stateNode;if(!r)throw Error(Q(169));n?(t=bC(t,e,Do),r.__reactInternalMemoizedMergedChildContext=t,rt(wn),rt(Kt),Ye(Kt,t)):rt(wn),Ye(wn,n)}var Xr=null,xd=!1,Wh=!1;function CC(t){Xr===null?Xr=[t]:Xr.push(t)}function MR(t){xd=!0,CC(t)}function Js(){if(!Wh&&Xr!==null){Wh=!0;var t=0,e=Ue;try{var n=Xr;for(Ue=1;t<n.length;t++){var r=n[t];do r=r(!0);while(r!==null)}Xr=null,xd=!1}catch(s){throw Xr!==null&&(Xr=Xr.slice(t+1)),Kb(bm,Js),s}finally{Ue=e,Wh=!1}}return null}var Ii=[],Ni=0,Tc=null,Ec=0,jn=[],Kn=0,Oo=null,Zr=1,Jr="";function po(t,e){Ii[Ni++]=Ec,Ii[Ni++]=Tc,Tc=t,Ec=e}function SC(t,e,n){jn[Kn++]=Zr,jn[Kn++]=Jr,jn[Kn++]=Oo,Oo=t;var r=Zr;t=Jr;var s=32-vr(r)-1;r&=~(1<<s),n+=1;var o=32-vr(e)+s;if(30<o){var i=s-s%5;o=(r&(1<<i)-1).toString(32),r>>=i,s-=i,Zr=1<<32-vr(e)+s|n<<s|r,Jr=o+t}else Zr=1<<o|n<<s|r,Jr=t}function Rm(t){t.return!==null&&(po(t,1),SC(t,1,0))}function _m(t){for(;t===Tc;)Tc=Ii[--Ni],Ii[Ni]=null,Ec=Ii[--Ni],Ii[Ni]=null;for(;t===Oo;)Oo=jn[--Kn],jn[Kn]=null,Jr=jn[--Kn],jn[Kn]=null,Zr=jn[--Kn],jn[Kn]=null}var On=null,An=null,ot=!1,mr=null;function $C(t,e){var n=Xn(5,null,null,0);n.elementType="DELETED",n.stateNode=e,n.return=t,e=t.deletions,e===null?(t.deletions=[n],t.flags|=16):e.push(n)}function Av(t,e){switch(t.tag){case 5:var n=t.type;return e=e.nodeType!==1||n.toLowerCase()!==e.nodeName.toLowerCase()?null:e,e!==null?(t.stateNode=e,On=t,An=Fs(e.firstChild),!0):!1;case 6:return e=t.pendingProps===""||e.nodeType!==3?null:e,e!==null?(t.stateNode=e,On=t,An=null,!0):!1;case 13:return e=e.nodeType!==8?null:e,e!==null?(n=Oo!==null?{id:Zr,overflow:Jr}:null,t.memoizedState={dehydrated:e,treeContext:n,retryLane:1073741824},n=Xn(18,null,null,0),n.stateNode=e,n.return=t,t.child=n,On=t,An=null,!0):!1;default:return!1}}function Qp(t){return(t.mode&1)!==0&&(t.flags&128)===0}function Zp(t){if(ot){var e=An;if(e){var n=e;if(!Av(t,e)){if(Qp(t))throw Error(Q(418));e=Fs(n.nextSibling);var r=On;e&&Av(t,e)?$C(r,n):(t.flags=t.flags&-4097|2,ot=!1,On=t)}}else{if(Qp(t))throw Error(Q(418));t.flags=t.flags&-4097|2,ot=!1,On=t}}}function Dv(t){for(t=t.return;t!==null&&t.tag!==5&&t.tag!==3&&t.tag!==13;)t=t.return;On=t}function Ll(t){if(t!==On)return!1;if(!ot)return Dv(t),ot=!0,!1;var e;if((e=t.tag!==3)&&!(e=t.tag!==5)&&(e=t.type,e=e!=="head"&&e!=="body"&&!Kp(t.type,t.memoizedProps)),e&&(e=An)){if(Qp(t))throw kC(),Error(Q(418));for(;e;)$C(t,e),e=Fs(e.nextSibling)}if(Dv(t),t.tag===13){if(t=t.memoizedState,t=t!==null?t.dehydrated:null,!t)throw Error(Q(317));e:{for(t=t.nextSibling,e=0;t;){if(t.nodeType===8){var n=t.data;if(n==="/$"){if(e===0){An=Fs(t.nextSibling);break e}e--}else n!=="$"&&n!=="$!"&&n!=="$?"||e++}t=t.nextSibling}An=null}}else An=On?Fs(t.stateNode.nextSibling):null;return!0}function kC(){for(var t=An;t;)t=Fs(t.nextSibling)}function Gi(){An=On=null,ot=!1}function Pm(t){mr===null?mr=[t]:mr.push(t)}var VR=ms.ReactCurrentBatchConfig;function Ba(t,e,n){if(t=n.ref,t!==null&&typeof t!="function"&&typeof t!="object"){if(n._owner){if(n=n._owner,n){if(n.tag!==1)throw Error(Q(309));var r=n.stateNode}if(!r)throw Error(Q(147,t));var s=r,o=""+t;return e!==null&&e.ref!==null&&typeof e.ref=="function"&&e.ref._stringRef===o?e.ref:(e=function(i){var a=s.refs;i===null?delete a[o]:a[o]=i},e._stringRef=o,e)}if(typeof t!="string")throw Error(Q(284));if(!n._owner)throw Error(Q(290,t))}return t}function zl(t,e){throw t=Object.prototype.toString.call(e),Error(Q(31,t==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":t))}function Ov(t){var e=t._init;return e(t._payload)}function IC(t){function e(g,v){if(t){var b=g.deletions;b===null?(g.deletions=[v],g.flags|=16):b.push(v)}}function n(g,v){if(!t)return null;for(;v!==null;)e(g,v),v=v.sibling;return null}function r(g,v){for(g=new Map;v!==null;)v.key!==null?g.set(v.key,v):g.set(v.index,v),v=v.sibling;return g}function s(g,v){return g=Ms(g,v),g.index=0,g.sibling=null,g}function o(g,v,b){return g.index=b,t?(b=g.alternate,b!==null?(b=b.index,b<v?(g.flags|=2,v):b):(g.flags|=2,v)):(g.flags|=1048576,v)}function i(g){return t&&g.alternate===null&&(g.flags|=2),g}function a(g,v,b,S){return v===null||v.tag!==6?(v=qh(b,g.mode,S),v.return=g,v):(v=s(v,b),v.return=g,v)}function u(g,v,b,S){var I=b.type;return I===wi?c(g,v,b.props.children,S,b.key):v!==null&&(v.elementType===I||typeof I=="object"&&I!==null&&I.$$typeof===Ss&&Ov(I)===v.type)?(S=s(v,b.props),S.ref=Ba(g,v,b),S.return=g,S):(S=dc(b.type,b.key,b.props,null,g.mode,S),S.ref=Ba(g,v,b),S.return=g,S)}function l(g,v,b,S){return v===null||v.tag!==4||v.stateNode.containerInfo!==b.containerInfo||v.stateNode.implementation!==b.implementation?(v=Yh(b,g.mode,S),v.return=g,v):(v=s(v,b.children||[]),v.return=g,v)}function c(g,v,b,S,I){return v===null||v.tag!==7?(v=Ro(b,g.mode,S,I),v.return=g,v):(v=s(v,b),v.return=g,v)}function d(g,v,b){if(typeof v=="string"&&v!==""||typeof v=="number")return v=qh(""+v,g.mode,b),v.return=g,v;if(typeof v=="object"&&v!==null){switch(v.$$typeof){case Nl:return b=dc(v.type,v.key,v.props,null,g.mode,b),b.ref=Ba(g,null,v),b.return=g,b;case vi:return v=Yh(v,g.mode,b),v.return=g,v;case Ss:var S=v._init;return d(g,S(v._payload),b)}if(Ka(v)||Da(v))return v=Ro(v,g.mode,b,null),v.return=g,v;zl(g,v)}return null}function h(g,v,b,S){var I=v!==null?v.key:null;if(typeof b=="string"&&b!==""||typeof b=="number")return I!==null?null:a(g,v,""+b,S);if(typeof b=="object"&&b!==null){switch(b.$$typeof){case Nl:return b.key===I?u(g,v,b,S):null;case vi:return b.key===I?l(g,v,b,S):null;case Ss:return I=b._init,h(g,v,I(b._payload),S)}if(Ka(b)||Da(b))return I!==null?null:c(g,v,b,S,null);zl(g,b)}return null}function p(g,v,b,S,I){if(typeof S=="string"&&S!==""||typeof S=="number")return g=g.get(b)||null,a(v,g,""+S,I);if(typeof S=="object"&&S!==null){switch(S.$$typeof){case Nl:return g=g.get(S.key===null?b:S.key)||null,u(v,g,S,I);case vi:return g=g.get(S.key===null?b:S.key)||null,l(v,g,S,I);case Ss:var E=S._init;return p(g,v,b,E(S._payload),I)}if(Ka(S)||Da(S))return g=g.get(b)||null,c(v,g,S,I,null);zl(v,S)}return null}function f(g,v,b,S){for(var I=null,E=null,R=v,_=v=0,L=null;R!==null&&_<b.length;_++){R.index>_?(L=R,R=null):L=R.sibling;var F=h(g,R,b[_],S);if(F===null){R===null&&(R=L);break}t&&R&&F.alternate===null&&e(g,R),v=o(F,v,_),E===null?I=F:E.sibling=F,E=F,R=L}if(_===b.length)return n(g,R),ot&&po(g,_),I;if(R===null){for(;_<b.length;_++)R=d(g,b[_],S),R!==null&&(v=o(R,v,_),E===null?I=R:E.sibling=R,E=R);return ot&&po(g,_),I}for(R=r(g,R);_<b.length;_++)L=p(R,g,_,b[_],S),L!==null&&(t&&L.alternate!==null&&R.delete(L.key===null?_:L.key),v=o(L,v,_),E===null?I=L:E.sibling=L,E=L);return t&&R.forEach(function(V){return e(g,V)}),ot&&po(g,_),I}function y(g,v,b,S){var I=Da(b);if(typeof I!="function")throw Error(Q(150));if(b=I.call(b),b==null)throw Error(Q(151));for(var E=I=null,R=v,_=v=0,L=null,F=b.next();R!==null&&!F.done;_++,F=b.next()){R.index>_?(L=R,R=null):L=R.sibling;var V=h(g,R,F.value,S);if(V===null){R===null&&(R=L);break}t&&R&&V.alternate===null&&e(g,R),v=o(V,v,_),E===null?I=V:E.sibling=V,E=V,R=L}if(F.done)return n(g,R),ot&&po(g,_),I;if(R===null){for(;!F.done;_++,F=b.next())F=d(g,F.value,S),F!==null&&(v=o(F,v,_),E===null?I=F:E.sibling=F,E=F);return ot&&po(g,_),I}for(R=r(g,R);!F.done;_++,F=b.next())F=p(R,g,_,F.value,S),F!==null&&(t&&F.alternate!==null&&R.delete(F.key===null?_:F.key),v=o(F,v,_),E===null?I=F:E.sibling=F,E=F);return t&&R.forEach(function(j){return e(g,j)}),ot&&po(g,_),I}function x(g,v,b,S){if(typeof b=="object"&&b!==null&&b.type===wi&&b.key===null&&(b=b.props.children),typeof b=="object"&&b!==null){switch(b.$$typeof){case Nl:e:{for(var I=b.key,E=v;E!==null;){if(E.key===I){if(I=b.type,I===wi){if(E.tag===7){n(g,E.sibling),v=s(E,b.props.children),v.return=g,g=v;break e}}else if(E.elementType===I||typeof I=="object"&&I!==null&&I.$$typeof===Ss&&Ov(I)===E.type){n(g,E.sibling),v=s(E,b.props),v.ref=Ba(g,E,b),v.return=g,g=v;break e}n(g,E);break}else e(g,E);E=E.sibling}b.type===wi?(v=Ro(b.props.children,g.mode,S,b.key),v.return=g,g=v):(S=dc(b.type,b.key,b.props,null,g.mode,S),S.ref=Ba(g,v,b),S.return=g,g=S)}return i(g);case vi:e:{for(E=b.key;v!==null;){if(v.key===E)if(v.tag===4&&v.stateNode.containerInfo===b.containerInfo&&v.stateNode.implementation===b.implementation){n(g,v.sibling),v=s(v,b.children||[]),v.return=g,g=v;break e}else{n(g,v);break}else e(g,v);v=v.sibling}v=Yh(b,g.mode,S),v.return=g,g=v}return i(g);case Ss:return E=b._init,x(g,v,E(b._payload),S)}if(Ka(b))return f(g,v,b,S);if(Da(b))return y(g,v,b,S);zl(g,b)}return typeof b=="string"&&b!==""||typeof b=="number"?(b=""+b,v!==null&&v.tag===6?(n(g,v.sibling),v=s(v,b),v.return=g,g=v):(n(g,v),v=qh(b,g.mode,S),v.return=g,g=v),i(g)):n(g,v)}return x}var Hi=IC(!0),NC=IC(!1),Rc=Zs(null),_c=null,Ti=null,Am=null;function Dm(){Am=Ti=_c=null}function Om(t){var e=Rc.current;rt(Rc),t._currentValue=e}function Jp(t,e,n){for(;t!==null;){var r=t.alternate;if((t.childLanes&e)!==e?(t.childLanes|=e,r!==null&&(r.childLanes|=e)):r!==null&&(r.childLanes&e)!==e&&(r.childLanes|=e),t===n)break;t=t.return}}function Fi(t,e){_c=t,Am=Ti=null,t=t.dependencies,t!==null&&t.firstContext!==null&&(t.lanes&e&&(yn=!0),t.firstContext=null)}function nr(t){var e=t._currentValue;if(Am!==t)if(t={context:t,memoizedValue:e,next:null},Ti===null){if(_c===null)throw Error(Q(308));Ti=t,_c.dependencies={lanes:0,firstContext:t}}else Ti=Ti.next=t;return e}var So=null;function Fm(t){So===null?So=[t]:So.push(t)}function TC(t,e,n,r){var s=e.interleaved;return s===null?(n.next=n,Fm(e)):(n.next=s.next,s.next=n),e.interleaved=n,os(t,r)}function os(t,e){t.lanes|=e;var n=t.alternate;for(n!==null&&(n.lanes|=e),n=t,t=t.return;t!==null;)t.childLanes|=e,n=t.alternate,n!==null&&(n.childLanes|=e),n=t,t=t.return;return n.tag===3?n.stateNode:null}var $s=!1;function Lm(t){t.updateQueue={baseState:t.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function EC(t,e){t=t.updateQueue,e.updateQueue===t&&(e.updateQueue={baseState:t.baseState,firstBaseUpdate:t.firstBaseUpdate,lastBaseUpdate:t.lastBaseUpdate,shared:t.shared,effects:t.effects})}function es(t,e){return{eventTime:t,lane:e,tag:0,payload:null,callback:null,next:null}}function Ls(t,e,n){var r=t.updateQueue;if(r===null)return null;if(r=r.shared,Oe&2){var s=r.pending;return s===null?e.next=e:(e.next=s.next,s.next=e),r.pending=e,os(t,n)}return s=r.interleaved,s===null?(e.next=e,Fm(r)):(e.next=s.next,s.next=e),r.interleaved=e,os(t,n)}function oc(t,e,n){if(e=e.updateQueue,e!==null&&(e=e.shared,(n&4194240)!==0)){var r=e.lanes;r&=t.pendingLanes,n|=r,e.lanes=n,Cm(t,n)}}function Fv(t,e){var n=t.updateQueue,r=t.alternate;if(r!==null&&(r=r.updateQueue,n===r)){var s=null,o=null;if(n=n.firstBaseUpdate,n!==null){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};o===null?s=o=i:o=o.next=i,n=n.next}while(n!==null);o===null?s=o=e:o=o.next=e}else s=o=e;n={baseState:r.baseState,firstBaseUpdate:s,lastBaseUpdate:o,shared:r.shared,effects:r.effects},t.updateQueue=n;return}t=n.lastBaseUpdate,t===null?n.firstBaseUpdate=e:t.next=e,n.lastBaseUpdate=e}function Pc(t,e,n,r){var s=t.updateQueue;$s=!1;var o=s.firstBaseUpdate,i=s.lastBaseUpdate,a=s.shared.pending;if(a!==null){s.shared.pending=null;var u=a,l=u.next;u.next=null,i===null?o=l:i.next=l,i=u;var c=t.alternate;c!==null&&(c=c.updateQueue,a=c.lastBaseUpdate,a!==i&&(a===null?c.firstBaseUpdate=l:a.next=l,c.lastBaseUpdate=u))}if(o!==null){var d=s.baseState;i=0,c=l=u=null,a=o;do{var h=a.lane,p=a.eventTime;if((r&h)===h){c!==null&&(c=c.next={eventTime:p,lane:0,tag:a.tag,payload:a.payload,callback:a.callback,next:null});e:{var f=t,y=a;switch(h=e,p=n,y.tag){case 1:if(f=y.payload,typeof f=="function"){d=f.call(p,d,h);break e}d=f;break e;case 3:f.flags=f.flags&-65537|128;case 0:if(f=y.payload,h=typeof f=="function"?f.call(p,d,h):f,h==null)break e;d=ct({},d,h);break e;case 2:$s=!0}}a.callback!==null&&a.lane!==0&&(t.flags|=64,h=s.effects,h===null?s.effects=[a]:h.push(a))}else p={eventTime:p,lane:h,tag:a.tag,payload:a.payload,callback:a.callback,next:null},c===null?(l=c=p,u=d):c=c.next=p,i|=h;if(a=a.next,a===null){if(a=s.shared.pending,a===null)break;h=a,a=h.next,h.next=null,s.lastBaseUpdate=h,s.shared.pending=null}}while(!0);if(c===null&&(u=d),s.baseState=u,s.firstBaseUpdate=l,s.lastBaseUpdate=c,e=s.shared.interleaved,e!==null){s=e;do i|=s.lane,s=s.next;while(s!==e)}else o===null&&(s.shared.lanes=0);Lo|=i,t.lanes=i,t.memoizedState=d}}function Lv(t,e,n){if(t=e.effects,e.effects=null,t!==null)for(e=0;e<t.length;e++){var r=t[e],s=r.callback;if(s!==null){if(r.callback=null,r=n,typeof s!="function")throw Error(Q(191,s));s.call(r)}}}var Ju={},Br=Zs(Ju),ku=Zs(Ju),Iu=Zs(Ju);function $o(t){if(t===Ju)throw Error(Q(174));return t}function zm(t,e){switch(Ye(Iu,e),Ye(ku,t),Ye(Br,Ju),t=e.nodeType,t){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:Ap(null,"");break;default:t=t===8?e.parentNode:e,e=t.namespaceURI||null,t=t.tagName,e=Ap(e,t)}rt(Br),Ye(Br,e)}function ji(){rt(Br),rt(ku),rt(Iu)}function RC(t){$o(Iu.current);var e=$o(Br.current),n=Ap(e,t.type);e!==n&&(Ye(ku,t),Ye(Br,n))}function Bm(t){ku.current===t&&(rt(Br),rt(ku))}var it=Zs(0);function Ac(t){for(var e=t;e!==null;){if(e.tag===13){var n=e.memoizedState;if(n!==null&&(n=n.dehydrated,n===null||n.data==="$?"||n.data==="$!"))return e}else if(e.tag===19&&e.memoizedProps.revealOrder!==void 0){if(e.flags&128)return e}else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break;for(;e.sibling===null;){if(e.return===null||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}var Uh=[];function Mm(){for(var t=0;t<Uh.length;t++)Uh[t]._workInProgressVersionPrimary=null;Uh.length=0}var ic=ms.ReactCurrentDispatcher,Gh=ms.ReactCurrentBatchConfig,Fo=0,ut=null,wt=null,kt=null,Dc=!1,iu=!1,Nu=0,WR=0;function Mt(){throw Error(Q(321))}function Vm(t,e){if(e===null)return!1;for(var n=0;n<e.length&&n<t.length;n++)if(!br(t[n],e[n]))return!1;return!0}function Wm(t,e,n,r,s,o){if(Fo=o,ut=e,e.memoizedState=null,e.updateQueue=null,e.lanes=0,ic.current=t===null||t.memoizedState===null?jR:KR,t=n(r,s),iu){o=0;do{if(iu=!1,Nu=0,25<=o)throw Error(Q(301));o+=1,kt=wt=null,e.updateQueue=null,ic.current=XR,t=n(r,s)}while(iu)}if(ic.current=Oc,e=wt!==null&&wt.next!==null,Fo=0,kt=wt=ut=null,Dc=!1,e)throw Error(Q(300));return t}function Um(){var t=Nu!==0;return Nu=0,t}function Pr(){var t={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return kt===null?ut.memoizedState=kt=t:kt=kt.next=t,kt}function rr(){if(wt===null){var t=ut.alternate;t=t!==null?t.memoizedState:null}else t=wt.next;var e=kt===null?ut.memoizedState:kt.next;if(e!==null)kt=e,wt=t;else{if(t===null)throw Error(Q(310));wt=t,t={memoizedState:wt.memoizedState,baseState:wt.baseState,baseQueue:wt.baseQueue,queue:wt.queue,next:null},kt===null?ut.memoizedState=kt=t:kt=kt.next=t}return kt}function Tu(t,e){return typeof e=="function"?e(t):e}function Hh(t){var e=rr(),n=e.queue;if(n===null)throw Error(Q(311));n.lastRenderedReducer=t;var r=wt,s=r.baseQueue,o=n.pending;if(o!==null){if(s!==null){var i=s.next;s.next=o.next,o.next=i}r.baseQueue=s=o,n.pending=null}if(s!==null){o=s.next,r=r.baseState;var a=i=null,u=null,l=o;do{var c=l.lane;if((Fo&c)===c)u!==null&&(u=u.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),r=l.hasEagerState?l.eagerState:t(r,l.action);else{var d={lane:c,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null};u===null?(a=u=d,i=r):u=u.next=d,ut.lanes|=c,Lo|=c}l=l.next}while(l!==null&&l!==o);u===null?i=r:u.next=a,br(r,e.memoizedState)||(yn=!0),e.memoizedState=r,e.baseState=i,e.baseQueue=u,n.lastRenderedState=r}if(t=n.interleaved,t!==null){s=t;do o=s.lane,ut.lanes|=o,Lo|=o,s=s.next;while(s!==t)}else s===null&&(n.lanes=0);return[e.memoizedState,n.dispatch]}function jh(t){var e=rr(),n=e.queue;if(n===null)throw Error(Q(311));n.lastRenderedReducer=t;var r=n.dispatch,s=n.pending,o=e.memoizedState;if(s!==null){n.pending=null;var i=s=s.next;do o=t(o,i.action),i=i.next;while(i!==s);br(o,e.memoizedState)||(yn=!0),e.memoizedState=o,e.baseQueue===null&&(e.baseState=o),n.lastRenderedState=o}return[o,r]}function _C(){}function PC(t,e){var n=ut,r=rr(),s=e(),o=!br(r.memoizedState,s);if(o&&(r.memoizedState=s,yn=!0),r=r.queue,Gm(OC.bind(null,n,r,t),[t]),r.getSnapshot!==e||o||kt!==null&&kt.memoizedState.tag&1){if(n.flags|=2048,Eu(9,DC.bind(null,n,r,s,e),void 0,null),Tt===null)throw Error(Q(349));Fo&30||AC(n,e,s)}return s}function AC(t,e,n){t.flags|=16384,t={getSnapshot:e,value:n},e=ut.updateQueue,e===null?(e={lastEffect:null,stores:null},ut.updateQueue=e,e.stores=[t]):(n=e.stores,n===null?e.stores=[t]:n.push(t))}function DC(t,e,n,r){e.value=n,e.getSnapshot=r,FC(e)&&LC(t)}function OC(t,e,n){return n(function(){FC(e)&&LC(t)})}function FC(t){var e=t.getSnapshot;t=t.value;try{var n=e();return!br(t,n)}catch{return!0}}function LC(t){var e=os(t,1);e!==null&&wr(e,t,1,-1)}function zv(t){var e=Pr();return typeof t=="function"&&(t=t()),e.memoizedState=e.baseState=t,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Tu,lastRenderedState:t},e.queue=t,t=t.dispatch=HR.bind(null,ut,t),[e.memoizedState,t]}function Eu(t,e,n,r){return t={tag:t,create:e,destroy:n,deps:r,next:null},e=ut.updateQueue,e===null?(e={lastEffect:null,stores:null},ut.updateQueue=e,e.lastEffect=t.next=t):(n=e.lastEffect,n===null?e.lastEffect=t.next=t:(r=n.next,n.next=t,t.next=r,e.lastEffect=t)),t}function zC(){return rr().memoizedState}function ac(t,e,n,r){var s=Pr();ut.flags|=t,s.memoizedState=Eu(1|e,n,void 0,r===void 0?null:r)}function vd(t,e,n,r){var s=rr();r=r===void 0?null:r;var o=void 0;if(wt!==null){var i=wt.memoizedState;if(o=i.destroy,r!==null&&Vm(r,i.deps)){s.memoizedState=Eu(e,n,o,r);return}}ut.flags|=t,s.memoizedState=Eu(1|e,n,o,r)}function Bv(t,e){return ac(8390656,8,t,e)}function Gm(t,e){return vd(2048,8,t,e)}function BC(t,e){return vd(4,2,t,e)}function MC(t,e){return vd(4,4,t,e)}function VC(t,e){if(typeof e=="function")return t=t(),e(t),function(){e(null)};if(e!=null)return t=t(),e.current=t,function(){e.current=null}}function WC(t,e,n){return n=n!=null?n.concat([t]):null,vd(4,4,VC.bind(null,e,t),n)}function Hm(){}function UC(t,e){var n=rr();e=e===void 0?null:e;var r=n.memoizedState;return r!==null&&e!==null&&Vm(e,r[1])?r[0]:(n.memoizedState=[t,e],t)}function GC(t,e){var n=rr();e=e===void 0?null:e;var r=n.memoizedState;return r!==null&&e!==null&&Vm(e,r[1])?r[0]:(t=t(),n.memoizedState=[t,e],t)}function HC(t,e,n){return Fo&21?(br(n,e)||(n=Yb(),ut.lanes|=n,Lo|=n,t.baseState=!0),e):(t.baseState&&(t.baseState=!1,yn=!0),t.memoizedState=n)}function UR(t,e){var n=Ue;Ue=n!==0&&4>n?n:4,t(!0);var r=Gh.transition;Gh.transition={};try{t(!1),e()}finally{Ue=n,Gh.transition=r}}function jC(){return rr().memoizedState}function GR(t,e,n){var r=Bs(t);if(n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},KC(t))XC(e,n);else if(n=TC(t,e,n,r),n!==null){var s=en();wr(n,t,r,s),qC(n,e,r)}}function HR(t,e,n){var r=Bs(t),s={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(KC(t))XC(e,s);else{var o=t.alternate;if(t.lanes===0&&(o===null||o.lanes===0)&&(o=e.lastRenderedReducer,o!==null))try{var i=e.lastRenderedState,a=o(i,n);if(s.hasEagerState=!0,s.eagerState=a,br(a,i)){var u=e.interleaved;u===null?(s.next=s,Fm(e)):(s.next=u.next,u.next=s),e.interleaved=s;return}}catch{}finally{}n=TC(t,e,s,r),n!==null&&(s=en(),wr(n,t,r,s),qC(n,e,r))}}function KC(t){var e=t.alternate;return t===ut||e!==null&&e===ut}function XC(t,e){iu=Dc=!0;var n=t.pending;n===null?e.next=e:(e.next=n.next,n.next=e),t.pending=e}function qC(t,e,n){if(n&4194240){var r=e.lanes;r&=t.pendingLanes,n|=r,e.lanes=n,Cm(t,n)}}var Oc={readContext:nr,useCallback:Mt,useContext:Mt,useEffect:Mt,useImperativeHandle:Mt,useInsertionEffect:Mt,useLayoutEffect:Mt,useMemo:Mt,useReducer:Mt,useRef:Mt,useState:Mt,useDebugValue:Mt,useDeferredValue:Mt,useTransition:Mt,useMutableSource:Mt,useSyncExternalStore:Mt,useId:Mt,unstable_isNewReconciler:!1},jR={readContext:nr,useCallback:function(t,e){return Pr().memoizedState=[t,e===void 0?null:e],t},useContext:nr,useEffect:Bv,useImperativeHandle:function(t,e,n){return n=n!=null?n.concat([t]):null,ac(4194308,4,VC.bind(null,e,t),n)},useLayoutEffect:function(t,e){return ac(4194308,4,t,e)},useInsertionEffect:function(t,e){return ac(4,2,t,e)},useMemo:function(t,e){var n=Pr();return e=e===void 0?null:e,t=t(),n.memoizedState=[t,e],t},useReducer:function(t,e,n){var r=Pr();return e=n!==void 0?n(e):e,r.memoizedState=r.baseState=e,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:t,lastRenderedState:e},r.queue=t,t=t.dispatch=GR.bind(null,ut,t),[r.memoizedState,t]},useRef:function(t){var e=Pr();return t={current:t},e.memoizedState=t},useState:zv,useDebugValue:Hm,useDeferredValue:function(t){return Pr().memoizedState=t},useTransition:function(){var t=zv(!1),e=t[0];return t=UR.bind(null,t[1]),Pr().memoizedState=t,[e,t]},useMutableSource:function(){},useSyncExternalStore:function(t,e,n){var r=ut,s=Pr();if(ot){if(n===void 0)throw Error(Q(407));n=n()}else{if(n=e(),Tt===null)throw Error(Q(349));Fo&30||AC(r,e,n)}s.memoizedState=n;var o={value:n,getSnapshot:e};return s.queue=o,Bv(OC.bind(null,r,o,t),[t]),r.flags|=2048,Eu(9,DC.bind(null,r,o,n,e),void 0,null),n},useId:function(){var t=Pr(),e=Tt.identifierPrefix;if(ot){var n=Jr,r=Zr;n=(r&~(1<<32-vr(r)-1)).toString(32)+n,e=":"+e+"R"+n,n=Nu++,0<n&&(e+="H"+n.toString(32)),e+=":"}else n=WR++,e=":"+e+"r"+n.toString(32)+":";return t.memoizedState=e},unstable_isNewReconciler:!1},KR={readContext:nr,useCallback:UC,useContext:nr,useEffect:Gm,useImperativeHandle:WC,useInsertionEffect:BC,useLayoutEffect:MC,useMemo:GC,useReducer:Hh,useRef:zC,useState:function(){return Hh(Tu)},useDebugValue:Hm,useDeferredValue:function(t){var e=rr();return HC(e,wt.memoizedState,t)},useTransition:function(){var t=Hh(Tu)[0],e=rr().memoizedState;return[t,e]},useMutableSource:_C,useSyncExternalStore:PC,useId:jC,unstable_isNewReconciler:!1},XR={readContext:nr,useCallback:UC,useContext:nr,useEffect:Gm,useImperativeHandle:WC,useInsertionEffect:BC,useLayoutEffect:MC,useMemo:GC,useReducer:jh,useRef:zC,useState:function(){return jh(Tu)},useDebugValue:Hm,useDeferredValue:function(t){var e=rr();return wt===null?e.memoizedState=t:HC(e,wt.memoizedState,t)},useTransition:function(){var t=jh(Tu)[0],e=rr().memoizedState;return[t,e]},useMutableSource:_C,useSyncExternalStore:PC,useId:jC,unstable_isNewReconciler:!1};function hr(t,e){if(t&&t.defaultProps){e=ct({},e),t=t.defaultProps;for(var n in t)e[n]===void 0&&(e[n]=t[n]);return e}return e}function ef(t,e,n,r){e=t.memoizedState,n=n(r,e),n=n==null?e:ct({},e,n),t.memoizedState=n,t.lanes===0&&(t.updateQueue.baseState=n)}var wd={isMounted:function(t){return(t=t._reactInternals)?qo(t)===t:!1},enqueueSetState:function(t,e,n){t=t._reactInternals;var r=en(),s=Bs(t),o=es(r,s);o.payload=e,n!=null&&(o.callback=n),e=Ls(t,o,s),e!==null&&(wr(e,t,s,r),oc(e,t,s))},enqueueReplaceState:function(t,e,n){t=t._reactInternals;var r=en(),s=Bs(t),o=es(r,s);o.tag=1,o.payload=e,n!=null&&(o.callback=n),e=Ls(t,o,s),e!==null&&(wr(e,t,s,r),oc(e,t,s))},enqueueForceUpdate:function(t,e){t=t._reactInternals;var n=en(),r=Bs(t),s=es(n,r);s.tag=2,e!=null&&(s.callback=e),e=Ls(t,s,r),e!==null&&(wr(e,t,r,n),oc(e,t,r))}};function Mv(t,e,n,r,s,o,i){return t=t.stateNode,typeof t.shouldComponentUpdate=="function"?t.shouldComponentUpdate(r,o,i):e.prototype&&e.prototype.isPureReactComponent?!bu(n,r)||!bu(s,o):!0}function YC(t,e,n){var r=!1,s=js,o=e.contextType;return typeof o=="object"&&o!==null?o=nr(o):(s=bn(e)?Do:Kt.current,r=e.contextTypes,o=(r=r!=null)?Ui(t,s):js),e=new e(n,o),t.memoizedState=e.state!==null&&e.state!==void 0?e.state:null,e.updater=wd,t.stateNode=e,e._reactInternals=t,r&&(t=t.stateNode,t.__reactInternalMemoizedUnmaskedChildContext=s,t.__reactInternalMemoizedMaskedChildContext=o),e}function Vv(t,e,n,r){t=e.state,typeof e.componentWillReceiveProps=="function"&&e.componentWillReceiveProps(n,r),typeof e.UNSAFE_componentWillReceiveProps=="function"&&e.UNSAFE_componentWillReceiveProps(n,r),e.state!==t&&wd.enqueueReplaceState(e,e.state,null)}function tf(t,e,n,r){var s=t.stateNode;s.props=n,s.state=t.memoizedState,s.refs={},Lm(t);var o=e.contextType;typeof o=="object"&&o!==null?s.context=nr(o):(o=bn(e)?Do:Kt.current,s.context=Ui(t,o)),s.state=t.memoizedState,o=e.getDerivedStateFromProps,typeof o=="function"&&(ef(t,e,o,n),s.state=t.memoizedState),typeof e.getDerivedStateFromProps=="function"||typeof s.getSnapshotBeforeUpdate=="function"||typeof s.UNSAFE_componentWillMount!="function"&&typeof s.componentWillMount!="function"||(e=s.state,typeof s.componentWillMount=="function"&&s.componentWillMount(),typeof s.UNSAFE_componentWillMount=="function"&&s.UNSAFE_componentWillMount(),e!==s.state&&wd.enqueueReplaceState(s,s.state,null),Pc(t,n,s,r),s.state=t.memoizedState),typeof s.componentDidMount=="function"&&(t.flags|=4194308)}function Ki(t,e){try{var n="",r=e;do n+=CE(r),r=r.return;while(r);var s=n}catch(o){s=`
Error generating stack: `+o.message+`
`+o.stack}return{value:t,source:e,stack:s,digest:null}}function Kh(t,e,n){return{value:t,source:null,stack:n??null,digest:e??null}}function nf(t,e){try{console.error(e.value)}catch(n){setTimeout(function(){throw n})}}var qR=typeof WeakMap=="function"?WeakMap:Map;function QC(t,e,n){n=es(-1,n),n.tag=3,n.payload={element:null};var r=e.value;return n.callback=function(){Lc||(Lc=!0,pf=r),nf(t,e)},n}function ZC(t,e,n){n=es(-1,n),n.tag=3;var r=t.type.getDerivedStateFromError;if(typeof r=="function"){var s=e.value;n.payload=function(){return r(s)},n.callback=function(){nf(t,e)}}var o=t.stateNode;return o!==null&&typeof o.componentDidCatch=="function"&&(n.callback=function(){nf(t,e),typeof r!="function"&&(zs===null?zs=new Set([this]):zs.add(this));var i=e.stack;this.componentDidCatch(e.value,{componentStack:i!==null?i:""})}),n}function Wv(t,e,n){var r=t.pingCache;if(r===null){r=t.pingCache=new qR;var s=new Set;r.set(e,s)}else s=r.get(e),s===void 0&&(s=new Set,r.set(e,s));s.has(n)||(s.add(n),t=l3.bind(null,t,e,n),e.then(t,t))}function Uv(t){do{var e;if((e=t.tag===13)&&(e=t.memoizedState,e=e!==null?e.dehydrated!==null:!0),e)return t;t=t.return}while(t!==null);return null}function Gv(t,e,n,r,s){return t.mode&1?(t.flags|=65536,t.lanes=s,t):(t===e?t.flags|=65536:(t.flags|=128,n.flags|=131072,n.flags&=-52805,n.tag===1&&(n.alternate===null?n.tag=17:(e=es(-1,1),e.tag=2,Ls(n,e,1))),n.lanes|=1),t)}var YR=ms.ReactCurrentOwner,yn=!1;function Zt(t,e,n,r){e.child=t===null?NC(e,null,n,r):Hi(e,t.child,n,r)}function Hv(t,e,n,r,s){n=n.render;var o=e.ref;return Fi(e,s),r=Wm(t,e,n,r,o,s),n=Um(),t!==null&&!yn?(e.updateQueue=t.updateQueue,e.flags&=-2053,t.lanes&=~s,is(t,e,s)):(ot&&n&&Rm(e),e.flags|=1,Zt(t,e,r,s),e.child)}function jv(t,e,n,r,s){if(t===null){var o=n.type;return typeof o=="function"&&!Jm(o)&&o.defaultProps===void 0&&n.compare===null&&n.defaultProps===void 0?(e.tag=15,e.type=o,JC(t,e,o,r,s)):(t=dc(n.type,null,r,e,e.mode,s),t.ref=e.ref,t.return=e,e.child=t)}if(o=t.child,!(t.lanes&s)){var i=o.memoizedProps;if(n=n.compare,n=n!==null?n:bu,n(i,r)&&t.ref===e.ref)return is(t,e,s)}return e.flags|=1,t=Ms(o,r),t.ref=e.ref,t.return=e,e.child=t}function JC(t,e,n,r,s){if(t!==null){var o=t.memoizedProps;if(bu(o,r)&&t.ref===e.ref)if(yn=!1,e.pendingProps=r=o,(t.lanes&s)!==0)t.flags&131072&&(yn=!0);else return e.lanes=t.lanes,is(t,e,s)}return rf(t,e,n,r,s)}function eS(t,e,n){var r=e.pendingProps,s=r.children,o=t!==null?t.memoizedState:null;if(r.mode==="hidden")if(!(e.mode&1))e.memoizedState={baseLanes:0,cachePool:null,transitions:null},Ye(Ri,Rn),Rn|=n;else{if(!(n&1073741824))return t=o!==null?o.baseLanes|n:n,e.lanes=e.childLanes=1073741824,e.memoizedState={baseLanes:t,cachePool:null,transitions:null},e.updateQueue=null,Ye(Ri,Rn),Rn|=t,null;e.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=o!==null?o.baseLanes:n,Ye(Ri,Rn),Rn|=r}else o!==null?(r=o.baseLanes|n,e.memoizedState=null):r=n,Ye(Ri,Rn),Rn|=r;return Zt(t,e,s,n),e.child}function tS(t,e){var n=e.ref;(t===null&&n!==null||t!==null&&t.ref!==n)&&(e.flags|=512,e.flags|=2097152)}function rf(t,e,n,r,s){var o=bn(n)?Do:Kt.current;return o=Ui(e,o),Fi(e,s),n=Wm(t,e,n,r,o,s),r=Um(),t!==null&&!yn?(e.updateQueue=t.updateQueue,e.flags&=-2053,t.lanes&=~s,is(t,e,s)):(ot&&r&&Rm(e),e.flags|=1,Zt(t,e,n,s),e.child)}function Kv(t,e,n,r,s){if(bn(n)){var o=!0;Nc(e)}else o=!1;if(Fi(e,s),e.stateNode===null)uc(t,e),YC(e,n,r),tf(e,n,r,s),r=!0;else if(t===null){var i=e.stateNode,a=e.memoizedProps;i.props=a;var u=i.context,l=n.contextType;typeof l=="object"&&l!==null?l=nr(l):(l=bn(n)?Do:Kt.current,l=Ui(e,l));var c=n.getDerivedStateFromProps,d=typeof c=="function"||typeof i.getSnapshotBeforeUpdate=="function";d||typeof i.UNSAFE_componentWillReceiveProps!="function"&&typeof i.componentWillReceiveProps!="function"||(a!==r||u!==l)&&Vv(e,i,r,l),$s=!1;var h=e.memoizedState;i.state=h,Pc(e,r,i,s),u=e.memoizedState,a!==r||h!==u||wn.current||$s?(typeof c=="function"&&(ef(e,n,c,r),u=e.memoizedState),(a=$s||Mv(e,n,a,r,h,u,l))?(d||typeof i.UNSAFE_componentWillMount!="function"&&typeof i.componentWillMount!="function"||(typeof i.componentWillMount=="function"&&i.componentWillMount(),typeof i.UNSAFE_componentWillMount=="function"&&i.UNSAFE_componentWillMount()),typeof i.componentDidMount=="function"&&(e.flags|=4194308)):(typeof i.componentDidMount=="function"&&(e.flags|=4194308),e.memoizedProps=r,e.memoizedState=u),i.props=r,i.state=u,i.context=l,r=a):(typeof i.componentDidMount=="function"&&(e.flags|=4194308),r=!1)}else{i=e.stateNode,EC(t,e),a=e.memoizedProps,l=e.type===e.elementType?a:hr(e.type,a),i.props=l,d=e.pendingProps,h=i.context,u=n.contextType,typeof u=="object"&&u!==null?u=nr(u):(u=bn(n)?Do:Kt.current,u=Ui(e,u));var p=n.getDerivedStateFromProps;(c=typeof p=="function"||typeof i.getSnapshotBeforeUpdate=="function")||typeof i.UNSAFE_componentWillReceiveProps!="function"&&typeof i.componentWillReceiveProps!="function"||(a!==d||h!==u)&&Vv(e,i,r,u),$s=!1,h=e.memoizedState,i.state=h,Pc(e,r,i,s);var f=e.memoizedState;a!==d||h!==f||wn.current||$s?(typeof p=="function"&&(ef(e,n,p,r),f=e.memoizedState),(l=$s||Mv(e,n,l,r,h,f,u)||!1)?(c||typeof i.UNSAFE_componentWillUpdate!="function"&&typeof i.componentWillUpdate!="function"||(typeof i.componentWillUpdate=="function"&&i.componentWillUpdate(r,f,u),typeof i.UNSAFE_componentWillUpdate=="function"&&i.UNSAFE_componentWillUpdate(r,f,u)),typeof i.componentDidUpdate=="function"&&(e.flags|=4),typeof i.getSnapshotBeforeUpdate=="function"&&(e.flags|=1024)):(typeof i.componentDidUpdate!="function"||a===t.memoizedProps&&h===t.memoizedState||(e.flags|=4),typeof i.getSnapshotBeforeUpdate!="function"||a===t.memoizedProps&&h===t.memoizedState||(e.flags|=1024),e.memoizedProps=r,e.memoizedState=f),i.props=r,i.state=f,i.context=u,r=l):(typeof i.componentDidUpdate!="function"||a===t.memoizedProps&&h===t.memoizedState||(e.flags|=4),typeof i.getSnapshotBeforeUpdate!="function"||a===t.memoizedProps&&h===t.memoizedState||(e.flags|=1024),r=!1)}return sf(t,e,n,r,o,s)}function sf(t,e,n,r,s,o){tS(t,e);var i=(e.flags&128)!==0;if(!r&&!i)return s&&Pv(e,n,!1),is(t,e,o);r=e.stateNode,YR.current=e;var a=i&&typeof n.getDerivedStateFromError!="function"?null:r.render();return e.flags|=1,t!==null&&i?(e.child=Hi(e,t.child,null,o),e.child=Hi(e,null,a,o)):Zt(t,e,a,o),e.memoizedState=r.state,s&&Pv(e,n,!0),e.child}function nS(t){var e=t.stateNode;e.pendingContext?_v(t,e.pendingContext,e.pendingContext!==e.context):e.context&&_v(t,e.context,!1),zm(t,e.containerInfo)}function Xv(t,e,n,r,s){return Gi(),Pm(s),e.flags|=256,Zt(t,e,n,r),e.child}var of={dehydrated:null,treeContext:null,retryLane:0};function af(t){return{baseLanes:t,cachePool:null,transitions:null}}function rS(t,e,n){var r=e.pendingProps,s=it.current,o=!1,i=(e.flags&128)!==0,a;if((a=i)||(a=t!==null&&t.memoizedState===null?!1:(s&2)!==0),a?(o=!0,e.flags&=-129):(t===null||t.memoizedState!==null)&&(s|=1),Ye(it,s&1),t===null)return Zp(e),t=e.memoizedState,t!==null&&(t=t.dehydrated,t!==null)?(e.mode&1?t.data==="$!"?e.lanes=8:e.lanes=1073741824:e.lanes=1,null):(i=r.children,t=r.fallback,o?(r=e.mode,o=e.child,i={mode:"hidden",children:i},!(r&1)&&o!==null?(o.childLanes=0,o.pendingProps=i):o=Sd(i,r,0,null),t=Ro(t,r,n,null),o.return=e,t.return=e,o.sibling=t,e.child=o,e.child.memoizedState=af(n),e.memoizedState=of,t):jm(e,i));if(s=t.memoizedState,s!==null&&(a=s.dehydrated,a!==null))return QR(t,e,i,r,a,s,n);if(o){o=r.fallback,i=e.mode,s=t.child,a=s.sibling;var u={mode:"hidden",children:r.children};return!(i&1)&&e.child!==s?(r=e.child,r.childLanes=0,r.pendingProps=u,e.deletions=null):(r=Ms(s,u),r.subtreeFlags=s.subtreeFlags&14680064),a!==null?o=Ms(a,o):(o=Ro(o,i,n,null),o.flags|=2),o.return=e,r.return=e,r.sibling=o,e.child=r,r=o,o=e.child,i=t.child.memoizedState,i=i===null?af(n):{baseLanes:i.baseLanes|n,cachePool:null,transitions:i.transitions},o.memoizedState=i,o.childLanes=t.childLanes&~n,e.memoizedState=of,r}return o=t.child,t=o.sibling,r=Ms(o,{mode:"visible",children:r.children}),!(e.mode&1)&&(r.lanes=n),r.return=e,r.sibling=null,t!==null&&(n=e.deletions,n===null?(e.deletions=[t],e.flags|=16):n.push(t)),e.child=r,e.memoizedState=null,r}function jm(t,e){return e=Sd({mode:"visible",children:e},t.mode,0,null),e.return=t,t.child=e}function Bl(t,e,n,r){return r!==null&&Pm(r),Hi(e,t.child,null,n),t=jm(e,e.pendingProps.children),t.flags|=2,e.memoizedState=null,t}function QR(t,e,n,r,s,o,i){if(n)return e.flags&256?(e.flags&=-257,r=Kh(Error(Q(422))),Bl(t,e,i,r)):e.memoizedState!==null?(e.child=t.child,e.flags|=128,null):(o=r.fallback,s=e.mode,r=Sd({mode:"visible",children:r.children},s,0,null),o=Ro(o,s,i,null),o.flags|=2,r.return=e,o.return=e,r.sibling=o,e.child=r,e.mode&1&&Hi(e,t.child,null,i),e.child.memoizedState=af(i),e.memoizedState=of,o);if(!(e.mode&1))return Bl(t,e,i,null);if(s.data==="$!"){if(r=s.nextSibling&&s.nextSibling.dataset,r)var a=r.dgst;return r=a,o=Error(Q(419)),r=Kh(o,r,void 0),Bl(t,e,i,r)}if(a=(i&t.childLanes)!==0,yn||a){if(r=Tt,r!==null){switch(i&-i){case 4:s=2;break;case 16:s=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:s=32;break;case 536870912:s=268435456;break;default:s=0}s=s&(r.suspendedLanes|i)?0:s,s!==0&&s!==o.retryLane&&(o.retryLane=s,os(t,s),wr(r,t,s,-1))}return Zm(),r=Kh(Error(Q(421))),Bl(t,e,i,r)}return s.data==="$?"?(e.flags|=128,e.child=t.child,e=c3.bind(null,t),s._reactRetry=e,null):(t=o.treeContext,An=Fs(s.nextSibling),On=e,ot=!0,mr=null,t!==null&&(jn[Kn++]=Zr,jn[Kn++]=Jr,jn[Kn++]=Oo,Zr=t.id,Jr=t.overflow,Oo=e),e=jm(e,r.children),e.flags|=4096,e)}function qv(t,e,n){t.lanes|=e;var r=t.alternate;r!==null&&(r.lanes|=e),Jp(t.return,e,n)}function Xh(t,e,n,r,s){var o=t.memoizedState;o===null?t.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:s}:(o.isBackwards=e,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailMode=s)}function sS(t,e,n){var r=e.pendingProps,s=r.revealOrder,o=r.tail;if(Zt(t,e,r.children,n),r=it.current,r&2)r=r&1|2,e.flags|=128;else{if(t!==null&&t.flags&128)e:for(t=e.child;t!==null;){if(t.tag===13)t.memoizedState!==null&&qv(t,n,e);else if(t.tag===19)qv(t,n,e);else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break e;for(;t.sibling===null;){if(t.return===null||t.return===e)break e;t=t.return}t.sibling.return=t.return,t=t.sibling}r&=1}if(Ye(it,r),!(e.mode&1))e.memoizedState=null;else switch(s){case"forwards":for(n=e.child,s=null;n!==null;)t=n.alternate,t!==null&&Ac(t)===null&&(s=n),n=n.sibling;n=s,n===null?(s=e.child,e.child=null):(s=n.sibling,n.sibling=null),Xh(e,!1,s,n,o);break;case"backwards":for(n=null,s=e.child,e.child=null;s!==null;){if(t=s.alternate,t!==null&&Ac(t)===null){e.child=s;break}t=s.sibling,s.sibling=n,n=s,s=t}Xh(e,!0,n,null,o);break;case"together":Xh(e,!1,null,null,void 0);break;default:e.memoizedState=null}return e.child}function uc(t,e){!(e.mode&1)&&t!==null&&(t.alternate=null,e.alternate=null,e.flags|=2)}function is(t,e,n){if(t!==null&&(e.dependencies=t.dependencies),Lo|=e.lanes,!(n&e.childLanes))return null;if(t!==null&&e.child!==t.child)throw Error(Q(153));if(e.child!==null){for(t=e.child,n=Ms(t,t.pendingProps),e.child=n,n.return=e;t.sibling!==null;)t=t.sibling,n=n.sibling=Ms(t,t.pendingProps),n.return=e;n.sibling=null}return e.child}function ZR(t,e,n){switch(e.tag){case 3:nS(e),Gi();break;case 5:RC(e);break;case 1:bn(e.type)&&Nc(e);break;case 4:zm(e,e.stateNode.containerInfo);break;case 10:var r=e.type._context,s=e.memoizedProps.value;Ye(Rc,r._currentValue),r._currentValue=s;break;case 13:if(r=e.memoizedState,r!==null)return r.dehydrated!==null?(Ye(it,it.current&1),e.flags|=128,null):n&e.child.childLanes?rS(t,e,n):(Ye(it,it.current&1),t=is(t,e,n),t!==null?t.sibling:null);Ye(it,it.current&1);break;case 19:if(r=(n&e.childLanes)!==0,t.flags&128){if(r)return sS(t,e,n);e.flags|=128}if(s=e.memoizedState,s!==null&&(s.rendering=null,s.tail=null,s.lastEffect=null),Ye(it,it.current),r)break;return null;case 22:case 23:return e.lanes=0,eS(t,e,n)}return is(t,e,n)}var oS,uf,iS,aS;oS=function(t,e){for(var n=e.child;n!==null;){if(n.tag===5||n.tag===6)t.appendChild(n.stateNode);else if(n.tag!==4&&n.child!==null){n.child.return=n,n=n.child;continue}if(n===e)break;for(;n.sibling===null;){if(n.return===null||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}};uf=function(){};iS=function(t,e,n,r){var s=t.memoizedProps;if(s!==r){t=e.stateNode,$o(Br.current);var o=null;switch(n){case"input":s=Ep(t,s),r=Ep(t,r),o=[];break;case"select":s=ct({},s,{value:void 0}),r=ct({},r,{value:void 0}),o=[];break;case"textarea":s=Pp(t,s),r=Pp(t,r),o=[];break;default:typeof s.onClick!="function"&&typeof r.onClick=="function"&&(t.onclick=kc)}Dp(n,r);var i;n=null;for(l in s)if(!r.hasOwnProperty(l)&&s.hasOwnProperty(l)&&s[l]!=null)if(l==="style"){var a=s[l];for(i in a)a.hasOwnProperty(i)&&(n||(n={}),n[i]="")}else l!=="dangerouslySetInnerHTML"&&l!=="children"&&l!=="suppressContentEditableWarning"&&l!=="suppressHydrationWarning"&&l!=="autoFocus"&&(fu.hasOwnProperty(l)?o||(o=[]):(o=o||[]).push(l,null));for(l in r){var u=r[l];if(a=s!=null?s[l]:void 0,r.hasOwnProperty(l)&&u!==a&&(u!=null||a!=null))if(l==="style")if(a){for(i in a)!a.hasOwnProperty(i)||u&&u.hasOwnProperty(i)||(n||(n={}),n[i]="");for(i in u)u.hasOwnProperty(i)&&a[i]!==u[i]&&(n||(n={}),n[i]=u[i])}else n||(o||(o=[]),o.push(l,n)),n=u;else l==="dangerouslySetInnerHTML"?(u=u?u.__html:void 0,a=a?a.__html:void 0,u!=null&&a!==u&&(o=o||[]).push(l,u)):l==="children"?typeof u!="string"&&typeof u!="number"||(o=o||[]).push(l,""+u):l!=="suppressContentEditableWarning"&&l!=="suppressHydrationWarning"&&(fu.hasOwnProperty(l)?(u!=null&&l==="onScroll"&&tt("scroll",t),o||a===u||(o=[])):(o=o||[]).push(l,u))}n&&(o=o||[]).push("style",n);var l=o;(e.updateQueue=l)&&(e.flags|=4)}};aS=function(t,e,n,r){n!==r&&(e.flags|=4)};function Ma(t,e){if(!ot)switch(t.tailMode){case"hidden":e=t.tail;for(var n=null;e!==null;)e.alternate!==null&&(n=e),e=e.sibling;n===null?t.tail=null:n.sibling=null;break;case"collapsed":n=t.tail;for(var r=null;n!==null;)n.alternate!==null&&(r=n),n=n.sibling;r===null?e||t.tail===null?t.tail=null:t.tail.sibling=null:r.sibling=null}}function Vt(t){var e=t.alternate!==null&&t.alternate.child===t.child,n=0,r=0;if(e)for(var s=t.child;s!==null;)n|=s.lanes|s.childLanes,r|=s.subtreeFlags&14680064,r|=s.flags&14680064,s.return=t,s=s.sibling;else for(s=t.child;s!==null;)n|=s.lanes|s.childLanes,r|=s.subtreeFlags,r|=s.flags,s.return=t,s=s.sibling;return t.subtreeFlags|=r,t.childLanes=n,e}function JR(t,e,n){var r=e.pendingProps;switch(_m(e),e.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Vt(e),null;case 1:return bn(e.type)&&Ic(),Vt(e),null;case 3:return r=e.stateNode,ji(),rt(wn),rt(Kt),Mm(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),(t===null||t.child===null)&&(Ll(e)?e.flags|=4:t===null||t.memoizedState.isDehydrated&&!(e.flags&256)||(e.flags|=1024,mr!==null&&(gf(mr),mr=null))),uf(t,e),Vt(e),null;case 5:Bm(e);var s=$o(Iu.current);if(n=e.type,t!==null&&e.stateNode!=null)iS(t,e,n,r,s),t.ref!==e.ref&&(e.flags|=512,e.flags|=2097152);else{if(!r){if(e.stateNode===null)throw Error(Q(166));return Vt(e),null}if(t=$o(Br.current),Ll(e)){r=e.stateNode,n=e.type;var o=e.memoizedProps;switch(r[Dr]=e,r[$u]=o,t=(e.mode&1)!==0,n){case"dialog":tt("cancel",r),tt("close",r);break;case"iframe":case"object":case"embed":tt("load",r);break;case"video":case"audio":for(s=0;s<qa.length;s++)tt(qa[s],r);break;case"source":tt("error",r);break;case"img":case"image":case"link":tt("error",r),tt("load",r);break;case"details":tt("toggle",r);break;case"input":sv(r,o),tt("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!o.multiple},tt("invalid",r);break;case"textarea":iv(r,o),tt("invalid",r)}Dp(n,o),s=null;for(var i in o)if(o.hasOwnProperty(i)){var a=o[i];i==="children"?typeof a=="string"?r.textContent!==a&&(o.suppressHydrationWarning!==!0&&Fl(r.textContent,a,t),s=["children",a]):typeof a=="number"&&r.textContent!==""+a&&(o.suppressHydrationWarning!==!0&&Fl(r.textContent,a,t),s=["children",""+a]):fu.hasOwnProperty(i)&&a!=null&&i==="onScroll"&&tt("scroll",r)}switch(n){case"input":Tl(r),ov(r,o,!0);break;case"textarea":Tl(r),av(r);break;case"select":case"option":break;default:typeof o.onClick=="function"&&(r.onclick=kc)}r=s,e.updateQueue=r,r!==null&&(e.flags|=4)}else{i=s.nodeType===9?s:s.ownerDocument,t==="http://www.w3.org/1999/xhtml"&&(t=Ob(n)),t==="http://www.w3.org/1999/xhtml"?n==="script"?(t=i.createElement("div"),t.innerHTML="<script><\/script>",t=t.removeChild(t.firstChild)):typeof r.is=="string"?t=i.createElement(n,{is:r.is}):(t=i.createElement(n),n==="select"&&(i=t,r.multiple?i.multiple=!0:r.size&&(i.size=r.size))):t=i.createElementNS(t,n),t[Dr]=e,t[$u]=r,oS(t,e,!1,!1),e.stateNode=t;e:{switch(i=Op(n,r),n){case"dialog":tt("cancel",t),tt("close",t),s=r;break;case"iframe":case"object":case"embed":tt("load",t),s=r;break;case"video":case"audio":for(s=0;s<qa.length;s++)tt(qa[s],t);s=r;break;case"source":tt("error",t),s=r;break;case"img":case"image":case"link":tt("error",t),tt("load",t),s=r;break;case"details":tt("toggle",t),s=r;break;case"input":sv(t,r),s=Ep(t,r),tt("invalid",t);break;case"option":s=r;break;case"select":t._wrapperState={wasMultiple:!!r.multiple},s=ct({},r,{value:void 0}),tt("invalid",t);break;case"textarea":iv(t,r),s=Pp(t,r),tt("invalid",t);break;default:s=r}Dp(n,s),a=s;for(o in a)if(a.hasOwnProperty(o)){var u=a[o];o==="style"?zb(t,u):o==="dangerouslySetInnerHTML"?(u=u?u.__html:void 0,u!=null&&Fb(t,u)):o==="children"?typeof u=="string"?(n!=="textarea"||u!=="")&&mu(t,u):typeof u=="number"&&mu(t,""+u):o!=="suppressContentEditableWarning"&&o!=="suppressHydrationWarning"&&o!=="autoFocus"&&(fu.hasOwnProperty(o)?u!=null&&o==="onScroll"&&tt("scroll",t):u!=null&&gm(t,o,u,i))}switch(n){case"input":Tl(t),ov(t,r,!1);break;case"textarea":Tl(t),av(t);break;case"option":r.value!=null&&t.setAttribute("value",""+Hs(r.value));break;case"select":t.multiple=!!r.multiple,o=r.value,o!=null?Pi(t,!!r.multiple,o,!1):r.defaultValue!=null&&Pi(t,!!r.multiple,r.defaultValue,!0);break;default:typeof s.onClick=="function"&&(t.onclick=kc)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(e.flags|=4)}e.ref!==null&&(e.flags|=512,e.flags|=2097152)}return Vt(e),null;case 6:if(t&&e.stateNode!=null)aS(t,e,t.memoizedProps,r);else{if(typeof r!="string"&&e.stateNode===null)throw Error(Q(166));if(n=$o(Iu.current),$o(Br.current),Ll(e)){if(r=e.stateNode,n=e.memoizedProps,r[Dr]=e,(o=r.nodeValue!==n)&&(t=On,t!==null))switch(t.tag){case 3:Fl(r.nodeValue,n,(t.mode&1)!==0);break;case 5:t.memoizedProps.suppressHydrationWarning!==!0&&Fl(r.nodeValue,n,(t.mode&1)!==0)}o&&(e.flags|=4)}else r=(n.nodeType===9?n:n.ownerDocument).createTextNode(r),r[Dr]=e,e.stateNode=r}return Vt(e),null;case 13:if(rt(it),r=e.memoizedState,t===null||t.memoizedState!==null&&t.memoizedState.dehydrated!==null){if(ot&&An!==null&&e.mode&1&&!(e.flags&128))kC(),Gi(),e.flags|=98560,o=!1;else if(o=Ll(e),r!==null&&r.dehydrated!==null){if(t===null){if(!o)throw Error(Q(318));if(o=e.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(Q(317));o[Dr]=e}else Gi(),!(e.flags&128)&&(e.memoizedState=null),e.flags|=4;Vt(e),o=!1}else mr!==null&&(gf(mr),mr=null),o=!0;if(!o)return e.flags&65536?e:null}return e.flags&128?(e.lanes=n,e):(r=r!==null,r!==(t!==null&&t.memoizedState!==null)&&r&&(e.child.flags|=8192,e.mode&1&&(t===null||it.current&1?Ct===0&&(Ct=3):Zm())),e.updateQueue!==null&&(e.flags|=4),Vt(e),null);case 4:return ji(),uf(t,e),t===null&&Cu(e.stateNode.containerInfo),Vt(e),null;case 10:return Om(e.type._context),Vt(e),null;case 17:return bn(e.type)&&Ic(),Vt(e),null;case 19:if(rt(it),o=e.memoizedState,o===null)return Vt(e),null;if(r=(e.flags&128)!==0,i=o.rendering,i===null)if(r)Ma(o,!1);else{if(Ct!==0||t!==null&&t.flags&128)for(t=e.child;t!==null;){if(i=Ac(t),i!==null){for(e.flags|=128,Ma(o,!1),r=i.updateQueue,r!==null&&(e.updateQueue=r,e.flags|=4),e.subtreeFlags=0,r=n,n=e.child;n!==null;)o=n,t=r,o.flags&=14680066,i=o.alternate,i===null?(o.childLanes=0,o.lanes=t,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=i.childLanes,o.lanes=i.lanes,o.child=i.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=i.memoizedProps,o.memoizedState=i.memoizedState,o.updateQueue=i.updateQueue,o.type=i.type,t=i.dependencies,o.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext}),n=n.sibling;return Ye(it,it.current&1|2),e.child}t=t.sibling}o.tail!==null&&mt()>Xi&&(e.flags|=128,r=!0,Ma(o,!1),e.lanes=4194304)}else{if(!r)if(t=Ac(i),t!==null){if(e.flags|=128,r=!0,n=t.updateQueue,n!==null&&(e.updateQueue=n,e.flags|=4),Ma(o,!0),o.tail===null&&o.tailMode==="hidden"&&!i.alternate&&!ot)return Vt(e),null}else 2*mt()-o.renderingStartTime>Xi&&n!==1073741824&&(e.flags|=128,r=!0,Ma(o,!1),e.lanes=4194304);o.isBackwards?(i.sibling=e.child,e.child=i):(n=o.last,n!==null?n.sibling=i:e.child=i,o.last=i)}return o.tail!==null?(e=o.tail,o.rendering=e,o.tail=e.sibling,o.renderingStartTime=mt(),e.sibling=null,n=it.current,Ye(it,r?n&1|2:n&1),e):(Vt(e),null);case 22:case 23:return Qm(),r=e.memoizedState!==null,t!==null&&t.memoizedState!==null!==r&&(e.flags|=8192),r&&e.mode&1?Rn&1073741824&&(Vt(e),e.subtreeFlags&6&&(e.flags|=8192)):Vt(e),null;case 24:return null;case 25:return null}throw Error(Q(156,e.tag))}function e3(t,e){switch(_m(e),e.tag){case 1:return bn(e.type)&&Ic(),t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 3:return ji(),rt(wn),rt(Kt),Mm(),t=e.flags,t&65536&&!(t&128)?(e.flags=t&-65537|128,e):null;case 5:return Bm(e),null;case 13:if(rt(it),t=e.memoizedState,t!==null&&t.dehydrated!==null){if(e.alternate===null)throw Error(Q(340));Gi()}return t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 19:return rt(it),null;case 4:return ji(),null;case 10:return Om(e.type._context),null;case 22:case 23:return Qm(),null;case 24:return null;default:return null}}var Ml=!1,Gt=!1,t3=typeof WeakSet=="function"?WeakSet:Set,de=null;function Ei(t,e){var n=t.ref;if(n!==null)if(typeof n=="function")try{n(null)}catch(r){ht(t,e,r)}else n.current=null}function lf(t,e,n){try{n()}catch(r){ht(t,e,r)}}var Yv=!1;function n3(t,e){if(Hp=Cc,t=hC(),Em(t)){if("selectionStart"in t)var n={start:t.selectionStart,end:t.selectionEnd};else e:{n=(n=t.ownerDocument)&&n.defaultView||window;var r=n.getSelection&&n.getSelection();if(r&&r.rangeCount!==0){n=r.anchorNode;var s=r.anchorOffset,o=r.focusNode;r=r.focusOffset;try{n.nodeType,o.nodeType}catch{n=null;break e}var i=0,a=-1,u=-1,l=0,c=0,d=t,h=null;t:for(;;){for(var p;d!==n||s!==0&&d.nodeType!==3||(a=i+s),d!==o||r!==0&&d.nodeType!==3||(u=i+r),d.nodeType===3&&(i+=d.nodeValue.length),(p=d.firstChild)!==null;)h=d,d=p;for(;;){if(d===t)break t;if(h===n&&++l===s&&(a=i),h===o&&++c===r&&(u=i),(p=d.nextSibling)!==null)break;d=h,h=d.parentNode}d=p}n=a===-1||u===-1?null:{start:a,end:u}}else n=null}n=n||{start:0,end:0}}else n=null;for(jp={focusedElem:t,selectionRange:n},Cc=!1,de=e;de!==null;)if(e=de,t=e.child,(e.subtreeFlags&1028)!==0&&t!==null)t.return=e,de=t;else for(;de!==null;){e=de;try{var f=e.alternate;if(e.flags&1024)switch(e.tag){case 0:case 11:case 15:break;case 1:if(f!==null){var y=f.memoizedProps,x=f.memoizedState,g=e.stateNode,v=g.getSnapshotBeforeUpdate(e.elementType===e.type?y:hr(e.type,y),x);g.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var b=e.stateNode.containerInfo;b.nodeType===1?b.textContent="":b.nodeType===9&&b.documentElement&&b.removeChild(b.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(Q(163))}}catch(S){ht(e,e.return,S)}if(t=e.sibling,t!==null){t.return=e.return,de=t;break}de=e.return}return f=Yv,Yv=!1,f}function au(t,e,n){var r=e.updateQueue;if(r=r!==null?r.lastEffect:null,r!==null){var s=r=r.next;do{if((s.tag&t)===t){var o=s.destroy;s.destroy=void 0,o!==void 0&&lf(e,n,o)}s=s.next}while(s!==r)}}function bd(t,e){if(e=e.updateQueue,e=e!==null?e.lastEffect:null,e!==null){var n=e=e.next;do{if((n.tag&t)===t){var r=n.create;n.destroy=r()}n=n.next}while(n!==e)}}function cf(t){var e=t.ref;if(e!==null){var n=t.stateNode;switch(t.tag){case 5:t=n;break;default:t=n}typeof e=="function"?e(t):e.current=t}}function uS(t){var e=t.alternate;e!==null&&(t.alternate=null,uS(e)),t.child=null,t.deletions=null,t.sibling=null,t.tag===5&&(e=t.stateNode,e!==null&&(delete e[Dr],delete e[$u],delete e[qp],delete e[zR],delete e[BR])),t.stateNode=null,t.return=null,t.dependencies=null,t.memoizedProps=null,t.memoizedState=null,t.pendingProps=null,t.stateNode=null,t.updateQueue=null}function lS(t){return t.tag===5||t.tag===3||t.tag===4}function Qv(t){e:for(;;){for(;t.sibling===null;){if(t.return===null||lS(t.return))return null;t=t.return}for(t.sibling.return=t.return,t=t.sibling;t.tag!==5&&t.tag!==6&&t.tag!==18;){if(t.flags&2||t.child===null||t.tag===4)continue e;t.child.return=t,t=t.child}if(!(t.flags&2))return t.stateNode}}function df(t,e,n){var r=t.tag;if(r===5||r===6)t=t.stateNode,e?n.nodeType===8?n.parentNode.insertBefore(t,e):n.insertBefore(t,e):(n.nodeType===8?(e=n.parentNode,e.insertBefore(t,n)):(e=n,e.appendChild(t)),n=n._reactRootContainer,n!=null||e.onclick!==null||(e.onclick=kc));else if(r!==4&&(t=t.child,t!==null))for(df(t,e,n),t=t.sibling;t!==null;)df(t,e,n),t=t.sibling}function hf(t,e,n){var r=t.tag;if(r===5||r===6)t=t.stateNode,e?n.insertBefore(t,e):n.appendChild(t);else if(r!==4&&(t=t.child,t!==null))for(hf(t,e,n),t=t.sibling;t!==null;)hf(t,e,n),t=t.sibling}var At=null,pr=!1;function Cs(t,e,n){for(n=n.child;n!==null;)cS(t,e,n),n=n.sibling}function cS(t,e,n){if(zr&&typeof zr.onCommitFiberUnmount=="function")try{zr.onCommitFiberUnmount(pd,n)}catch{}switch(n.tag){case 5:Gt||Ei(n,e);case 6:var r=At,s=pr;At=null,Cs(t,e,n),At=r,pr=s,At!==null&&(pr?(t=At,n=n.stateNode,t.nodeType===8?t.parentNode.removeChild(n):t.removeChild(n)):At.removeChild(n.stateNode));break;case 18:At!==null&&(pr?(t=At,n=n.stateNode,t.nodeType===8?Vh(t.parentNode,n):t.nodeType===1&&Vh(t,n),vu(t)):Vh(At,n.stateNode));break;case 4:r=At,s=pr,At=n.stateNode.containerInfo,pr=!0,Cs(t,e,n),At=r,pr=s;break;case 0:case 11:case 14:case 15:if(!Gt&&(r=n.updateQueue,r!==null&&(r=r.lastEffect,r!==null))){s=r=r.next;do{var o=s,i=o.destroy;o=o.tag,i!==void 0&&(o&2||o&4)&&lf(n,e,i),s=s.next}while(s!==r)}Cs(t,e,n);break;case 1:if(!Gt&&(Ei(n,e),r=n.stateNode,typeof r.componentWillUnmount=="function"))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(a){ht(n,e,a)}Cs(t,e,n);break;case 21:Cs(t,e,n);break;case 22:n.mode&1?(Gt=(r=Gt)||n.memoizedState!==null,Cs(t,e,n),Gt=r):Cs(t,e,n);break;default:Cs(t,e,n)}}function Zv(t){var e=t.updateQueue;if(e!==null){t.updateQueue=null;var n=t.stateNode;n===null&&(n=t.stateNode=new t3),e.forEach(function(r){var s=d3.bind(null,t,r);n.has(r)||(n.add(r),r.then(s,s))})}}function dr(t,e){var n=e.deletions;if(n!==null)for(var r=0;r<n.length;r++){var s=n[r];try{var o=t,i=e,a=i;e:for(;a!==null;){switch(a.tag){case 5:At=a.stateNode,pr=!1;break e;case 3:At=a.stateNode.containerInfo,pr=!0;break e;case 4:At=a.stateNode.containerInfo,pr=!0;break e}a=a.return}if(At===null)throw Error(Q(160));cS(o,i,s),At=null,pr=!1;var u=s.alternate;u!==null&&(u.return=null),s.return=null}catch(l){ht(s,e,l)}}if(e.subtreeFlags&12854)for(e=e.child;e!==null;)dS(e,t),e=e.sibling}function dS(t,e){var n=t.alternate,r=t.flags;switch(t.tag){case 0:case 11:case 14:case 15:if(dr(e,t),_r(t),r&4){try{au(3,t,t.return),bd(3,t)}catch(y){ht(t,t.return,y)}try{au(5,t,t.return)}catch(y){ht(t,t.return,y)}}break;case 1:dr(e,t),_r(t),r&512&&n!==null&&Ei(n,n.return);break;case 5:if(dr(e,t),_r(t),r&512&&n!==null&&Ei(n,n.return),t.flags&32){var s=t.stateNode;try{mu(s,"")}catch(y){ht(t,t.return,y)}}if(r&4&&(s=t.stateNode,s!=null)){var o=t.memoizedProps,i=n!==null?n.memoizedProps:o,a=t.type,u=t.updateQueue;if(t.updateQueue=null,u!==null)try{a==="input"&&o.type==="radio"&&o.name!=null&&Ab(s,o),Op(a,i);var l=Op(a,o);for(i=0;i<u.length;i+=2){var c=u[i],d=u[i+1];c==="style"?zb(s,d):c==="dangerouslySetInnerHTML"?Fb(s,d):c==="children"?mu(s,d):gm(s,c,d,l)}switch(a){case"input":Rp(s,o);break;case"textarea":Db(s,o);break;case"select":var h=s._wrapperState.wasMultiple;s._wrapperState.wasMultiple=!!o.multiple;var p=o.value;p!=null?Pi(s,!!o.multiple,p,!1):h!==!!o.multiple&&(o.defaultValue!=null?Pi(s,!!o.multiple,o.defaultValue,!0):Pi(s,!!o.multiple,o.multiple?[]:"",!1))}s[$u]=o}catch(y){ht(t,t.return,y)}}break;case 6:if(dr(e,t),_r(t),r&4){if(t.stateNode===null)throw Error(Q(162));s=t.stateNode,o=t.memoizedProps;try{s.nodeValue=o}catch(y){ht(t,t.return,y)}}break;case 3:if(dr(e,t),_r(t),r&4&&n!==null&&n.memoizedState.isDehydrated)try{vu(e.containerInfo)}catch(y){ht(t,t.return,y)}break;case 4:dr(e,t),_r(t);break;case 13:dr(e,t),_r(t),s=t.child,s.flags&8192&&(o=s.memoizedState!==null,s.stateNode.isHidden=o,!o||s.alternate!==null&&s.alternate.memoizedState!==null||(qm=mt())),r&4&&Zv(t);break;case 22:if(c=n!==null&&n.memoizedState!==null,t.mode&1?(Gt=(l=Gt)||c,dr(e,t),Gt=l):dr(e,t),_r(t),r&8192){if(l=t.memoizedState!==null,(t.stateNode.isHidden=l)&&!c&&t.mode&1)for(de=t,c=t.child;c!==null;){for(d=de=c;de!==null;){switch(h=de,p=h.child,h.tag){case 0:case 11:case 14:case 15:au(4,h,h.return);break;case 1:Ei(h,h.return);var f=h.stateNode;if(typeof f.componentWillUnmount=="function"){r=h,n=h.return;try{e=r,f.props=e.memoizedProps,f.state=e.memoizedState,f.componentWillUnmount()}catch(y){ht(r,n,y)}}break;case 5:Ei(h,h.return);break;case 22:if(h.memoizedState!==null){ew(d);continue}}p!==null?(p.return=h,de=p):ew(d)}c=c.sibling}e:for(c=null,d=t;;){if(d.tag===5){if(c===null){c=d;try{s=d.stateNode,l?(o=s.style,typeof o.setProperty=="function"?o.setProperty("display","none","important"):o.display="none"):(a=d.stateNode,u=d.memoizedProps.style,i=u!=null&&u.hasOwnProperty("display")?u.display:null,a.style.display=Lb("display",i))}catch(y){ht(t,t.return,y)}}}else if(d.tag===6){if(c===null)try{d.stateNode.nodeValue=l?"":d.memoizedProps}catch(y){ht(t,t.return,y)}}else if((d.tag!==22&&d.tag!==23||d.memoizedState===null||d===t)&&d.child!==null){d.child.return=d,d=d.child;continue}if(d===t)break e;for(;d.sibling===null;){if(d.return===null||d.return===t)break e;c===d&&(c=null),d=d.return}c===d&&(c=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:dr(e,t),_r(t),r&4&&Zv(t);break;case 21:break;default:dr(e,t),_r(t)}}function _r(t){var e=t.flags;if(e&2){try{e:{for(var n=t.return;n!==null;){if(lS(n)){var r=n;break e}n=n.return}throw Error(Q(160))}switch(r.tag){case 5:var s=r.stateNode;r.flags&32&&(mu(s,""),r.flags&=-33);var o=Qv(t);hf(t,o,s);break;case 3:case 4:var i=r.stateNode.containerInfo,a=Qv(t);df(t,a,i);break;default:throw Error(Q(161))}}catch(u){ht(t,t.return,u)}t.flags&=-3}e&4096&&(t.flags&=-4097)}function r3(t,e,n){de=t,hS(t)}function hS(t,e,n){for(var r=(t.mode&1)!==0;de!==null;){var s=de,o=s.child;if(s.tag===22&&r){var i=s.memoizedState!==null||Ml;if(!i){var a=s.alternate,u=a!==null&&a.memoizedState!==null||Gt;a=Ml;var l=Gt;if(Ml=i,(Gt=u)&&!l)for(de=s;de!==null;)i=de,u=i.child,i.tag===22&&i.memoizedState!==null?tw(s):u!==null?(u.return=i,de=u):tw(s);for(;o!==null;)de=o,hS(o),o=o.sibling;de=s,Ml=a,Gt=l}Jv(t)}else s.subtreeFlags&8772&&o!==null?(o.return=s,de=o):Jv(t)}}function Jv(t){for(;de!==null;){var e=de;if(e.flags&8772){var n=e.alternate;try{if(e.flags&8772)switch(e.tag){case 0:case 11:case 15:Gt||bd(5,e);break;case 1:var r=e.stateNode;if(e.flags&4&&!Gt)if(n===null)r.componentDidMount();else{var s=e.elementType===e.type?n.memoizedProps:hr(e.type,n.memoizedProps);r.componentDidUpdate(s,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var o=e.updateQueue;o!==null&&Lv(e,o,r);break;case 3:var i=e.updateQueue;if(i!==null){if(n=null,e.child!==null)switch(e.child.tag){case 5:n=e.child.stateNode;break;case 1:n=e.child.stateNode}Lv(e,i,n)}break;case 5:var a=e.stateNode;if(n===null&&e.flags&4){n=a;var u=e.memoizedProps;switch(e.type){case"button":case"input":case"select":case"textarea":u.autoFocus&&n.focus();break;case"img":u.src&&(n.src=u.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(e.memoizedState===null){var l=e.alternate;if(l!==null){var c=l.memoizedState;if(c!==null){var d=c.dehydrated;d!==null&&vu(d)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(Q(163))}Gt||e.flags&512&&cf(e)}catch(h){ht(e,e.return,h)}}if(e===t){de=null;break}if(n=e.sibling,n!==null){n.return=e.return,de=n;break}de=e.return}}function ew(t){for(;de!==null;){var e=de;if(e===t){de=null;break}var n=e.sibling;if(n!==null){n.return=e.return,de=n;break}de=e.return}}function tw(t){for(;de!==null;){var e=de;try{switch(e.tag){case 0:case 11:case 15:var n=e.return;try{bd(4,e)}catch(u){ht(e,n,u)}break;case 1:var r=e.stateNode;if(typeof r.componentDidMount=="function"){var s=e.return;try{r.componentDidMount()}catch(u){ht(e,s,u)}}var o=e.return;try{cf(e)}catch(u){ht(e,o,u)}break;case 5:var i=e.return;try{cf(e)}catch(u){ht(e,i,u)}}}catch(u){ht(e,e.return,u)}if(e===t){de=null;break}var a=e.sibling;if(a!==null){a.return=e.return,de=a;break}de=e.return}}var s3=Math.ceil,Fc=ms.ReactCurrentDispatcher,Km=ms.ReactCurrentOwner,Jn=ms.ReactCurrentBatchConfig,Oe=0,Tt=null,yt=null,Ot=0,Rn=0,Ri=Zs(0),Ct=0,Ru=null,Lo=0,Cd=0,Xm=0,uu=null,gn=null,qm=0,Xi=1/0,Kr=null,Lc=!1,pf=null,zs=null,Vl=!1,Es=null,zc=0,lu=0,ff=null,lc=-1,cc=0;function en(){return Oe&6?mt():lc!==-1?lc:lc=mt()}function Bs(t){return t.mode&1?Oe&2&&Ot!==0?Ot&-Ot:VR.transition!==null?(cc===0&&(cc=Yb()),cc):(t=Ue,t!==0||(t=window.event,t=t===void 0?16:rC(t.type)),t):1}function wr(t,e,n,r){if(50<lu)throw lu=0,ff=null,Error(Q(185));Yu(t,n,r),(!(Oe&2)||t!==Tt)&&(t===Tt&&(!(Oe&2)&&(Cd|=n),Ct===4&&Ns(t,Ot)),Cn(t,r),n===1&&Oe===0&&!(e.mode&1)&&(Xi=mt()+500,xd&&Js()))}function Cn(t,e){var n=t.callbackNode;VE(t,e);var r=bc(t,t===Tt?Ot:0);if(r===0)n!==null&&cv(n),t.callbackNode=null,t.callbackPriority=0;else if(e=r&-r,t.callbackPriority!==e){if(n!=null&&cv(n),e===1)t.tag===0?MR(nw.bind(null,t)):CC(nw.bind(null,t)),FR(function(){!(Oe&6)&&Js()}),n=null;else{switch(Qb(r)){case 1:n=bm;break;case 4:n=Xb;break;case 16:n=wc;break;case 536870912:n=qb;break;default:n=wc}n=wS(n,pS.bind(null,t))}t.callbackPriority=e,t.callbackNode=n}}function pS(t,e){if(lc=-1,cc=0,Oe&6)throw Error(Q(327));var n=t.callbackNode;if(Li()&&t.callbackNode!==n)return null;var r=bc(t,t===Tt?Ot:0);if(r===0)return null;if(r&30||r&t.expiredLanes||e)e=Bc(t,r);else{e=r;var s=Oe;Oe|=2;var o=mS();(Tt!==t||Ot!==e)&&(Kr=null,Xi=mt()+500,Eo(t,e));do try{a3();break}catch(a){fS(t,a)}while(!0);Dm(),Fc.current=o,Oe=s,yt!==null?e=0:(Tt=null,Ot=0,e=Ct)}if(e!==0){if(e===2&&(s=Mp(t),s!==0&&(r=s,e=mf(t,s))),e===1)throw n=Ru,Eo(t,0),Ns(t,r),Cn(t,mt()),n;if(e===6)Ns(t,r);else{if(s=t.current.alternate,!(r&30)&&!o3(s)&&(e=Bc(t,r),e===2&&(o=Mp(t),o!==0&&(r=o,e=mf(t,o))),e===1))throw n=Ru,Eo(t,0),Ns(t,r),Cn(t,mt()),n;switch(t.finishedWork=s,t.finishedLanes=r,e){case 0:case 1:throw Error(Q(345));case 2:fo(t,gn,Kr);break;case 3:if(Ns(t,r),(r&130023424)===r&&(e=qm+500-mt(),10<e)){if(bc(t,0)!==0)break;if(s=t.suspendedLanes,(s&r)!==r){en(),t.pingedLanes|=t.suspendedLanes&s;break}t.timeoutHandle=Xp(fo.bind(null,t,gn,Kr),e);break}fo(t,gn,Kr);break;case 4:if(Ns(t,r),(r&4194240)===r)break;for(e=t.eventTimes,s=-1;0<r;){var i=31-vr(r);o=1<<i,i=e[i],i>s&&(s=i),r&=~o}if(r=s,r=mt()-r,r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*s3(r/1960))-r,10<r){t.timeoutHandle=Xp(fo.bind(null,t,gn,Kr),r);break}fo(t,gn,Kr);break;case 5:fo(t,gn,Kr);break;default:throw Error(Q(329))}}}return Cn(t,mt()),t.callbackNode===n?pS.bind(null,t):null}function mf(t,e){var n=uu;return t.current.memoizedState.isDehydrated&&(Eo(t,e).flags|=256),t=Bc(t,e),t!==2&&(e=gn,gn=n,e!==null&&gf(e)),t}function gf(t){gn===null?gn=t:gn.push.apply(gn,t)}function o3(t){for(var e=t;;){if(e.flags&16384){var n=e.updateQueue;if(n!==null&&(n=n.stores,n!==null))for(var r=0;r<n.length;r++){var s=n[r],o=s.getSnapshot;s=s.value;try{if(!br(o(),s))return!1}catch{return!1}}}if(n=e.child,e.subtreeFlags&16384&&n!==null)n.return=e,e=n;else{if(e===t)break;for(;e.sibling===null;){if(e.return===null||e.return===t)return!0;e=e.return}e.sibling.return=e.return,e=e.sibling}}return!0}function Ns(t,e){for(e&=~Xm,e&=~Cd,t.suspendedLanes|=e,t.pingedLanes&=~e,t=t.expirationTimes;0<e;){var n=31-vr(e),r=1<<n;t[n]=-1,e&=~r}}function nw(t){if(Oe&6)throw Error(Q(327));Li();var e=bc(t,0);if(!(e&1))return Cn(t,mt()),null;var n=Bc(t,e);if(t.tag!==0&&n===2){var r=Mp(t);r!==0&&(e=r,n=mf(t,r))}if(n===1)throw n=Ru,Eo(t,0),Ns(t,e),Cn(t,mt()),n;if(n===6)throw Error(Q(345));return t.finishedWork=t.current.alternate,t.finishedLanes=e,fo(t,gn,Kr),Cn(t,mt()),null}function Ym(t,e){var n=Oe;Oe|=1;try{return t(e)}finally{Oe=n,Oe===0&&(Xi=mt()+500,xd&&Js())}}function zo(t){Es!==null&&Es.tag===0&&!(Oe&6)&&Li();var e=Oe;Oe|=1;var n=Jn.transition,r=Ue;try{if(Jn.transition=null,Ue=1,t)return t()}finally{Ue=r,Jn.transition=n,Oe=e,!(Oe&6)&&Js()}}function Qm(){Rn=Ri.current,rt(Ri)}function Eo(t,e){t.finishedWork=null,t.finishedLanes=0;var n=t.timeoutHandle;if(n!==-1&&(t.timeoutHandle=-1,OR(n)),yt!==null)for(n=yt.return;n!==null;){var r=n;switch(_m(r),r.tag){case 1:r=r.type.childContextTypes,r!=null&&Ic();break;case 3:ji(),rt(wn),rt(Kt),Mm();break;case 5:Bm(r);break;case 4:ji();break;case 13:rt(it);break;case 19:rt(it);break;case 10:Om(r.type._context);break;case 22:case 23:Qm()}n=n.return}if(Tt=t,yt=t=Ms(t.current,null),Ot=Rn=e,Ct=0,Ru=null,Xm=Cd=Lo=0,gn=uu=null,So!==null){for(e=0;e<So.length;e++)if(n=So[e],r=n.interleaved,r!==null){n.interleaved=null;var s=r.next,o=n.pending;if(o!==null){var i=o.next;o.next=s,r.next=i}n.pending=r}So=null}return t}function fS(t,e){do{var n=yt;try{if(Dm(),ic.current=Oc,Dc){for(var r=ut.memoizedState;r!==null;){var s=r.queue;s!==null&&(s.pending=null),r=r.next}Dc=!1}if(Fo=0,kt=wt=ut=null,iu=!1,Nu=0,Km.current=null,n===null||n.return===null){Ct=1,Ru=e,yt=null;break}e:{var o=t,i=n.return,a=n,u=e;if(e=Ot,a.flags|=32768,u!==null&&typeof u=="object"&&typeof u.then=="function"){var l=u,c=a,d=c.tag;if(!(c.mode&1)&&(d===0||d===11||d===15)){var h=c.alternate;h?(c.updateQueue=h.updateQueue,c.memoizedState=h.memoizedState,c.lanes=h.lanes):(c.updateQueue=null,c.memoizedState=null)}var p=Uv(i);if(p!==null){p.flags&=-257,Gv(p,i,a,o,e),p.mode&1&&Wv(o,l,e),e=p,u=l;var f=e.updateQueue;if(f===null){var y=new Set;y.add(u),e.updateQueue=y}else f.add(u);break e}else{if(!(e&1)){Wv(o,l,e),Zm();break e}u=Error(Q(426))}}else if(ot&&a.mode&1){var x=Uv(i);if(x!==null){!(x.flags&65536)&&(x.flags|=256),Gv(x,i,a,o,e),Pm(Ki(u,a));break e}}o=u=Ki(u,a),Ct!==4&&(Ct=2),uu===null?uu=[o]:uu.push(o),o=i;do{switch(o.tag){case 3:o.flags|=65536,e&=-e,o.lanes|=e;var g=QC(o,u,e);Fv(o,g);break e;case 1:a=u;var v=o.type,b=o.stateNode;if(!(o.flags&128)&&(typeof v.getDerivedStateFromError=="function"||b!==null&&typeof b.componentDidCatch=="function"&&(zs===null||!zs.has(b)))){o.flags|=65536,e&=-e,o.lanes|=e;var S=ZC(o,a,e);Fv(o,S);break e}}o=o.return}while(o!==null)}yS(n)}catch(I){e=I,yt===n&&n!==null&&(yt=n=n.return);continue}break}while(!0)}function mS(){var t=Fc.current;return Fc.current=Oc,t===null?Oc:t}function Zm(){(Ct===0||Ct===3||Ct===2)&&(Ct=4),Tt===null||!(Lo&268435455)&&!(Cd&268435455)||Ns(Tt,Ot)}function Bc(t,e){var n=Oe;Oe|=2;var r=mS();(Tt!==t||Ot!==e)&&(Kr=null,Eo(t,e));do try{i3();break}catch(s){fS(t,s)}while(!0);if(Dm(),Oe=n,Fc.current=r,yt!==null)throw Error(Q(261));return Tt=null,Ot=0,Ct}function i3(){for(;yt!==null;)gS(yt)}function a3(){for(;yt!==null&&!PE();)gS(yt)}function gS(t){var e=vS(t.alternate,t,Rn);t.memoizedProps=t.pendingProps,e===null?yS(t):yt=e,Km.current=null}function yS(t){var e=t;do{var n=e.alternate;if(t=e.return,e.flags&32768){if(n=e3(n,e),n!==null){n.flags&=32767,yt=n;return}if(t!==null)t.flags|=32768,t.subtreeFlags=0,t.deletions=null;else{Ct=6,yt=null;return}}else if(n=JR(n,e,Rn),n!==null){yt=n;return}if(e=e.sibling,e!==null){yt=e;return}yt=e=t}while(e!==null);Ct===0&&(Ct=5)}function fo(t,e,n){var r=Ue,s=Jn.transition;try{Jn.transition=null,Ue=1,u3(t,e,n,r)}finally{Jn.transition=s,Ue=r}return null}function u3(t,e,n,r){do Li();while(Es!==null);if(Oe&6)throw Error(Q(327));n=t.finishedWork;var s=t.finishedLanes;if(n===null)return null;if(t.finishedWork=null,t.finishedLanes=0,n===t.current)throw Error(Q(177));t.callbackNode=null,t.callbackPriority=0;var o=n.lanes|n.childLanes;if(WE(t,o),t===Tt&&(yt=Tt=null,Ot=0),!(n.subtreeFlags&2064)&&!(n.flags&2064)||Vl||(Vl=!0,wS(wc,function(){return Li(),null})),o=(n.flags&15990)!==0,n.subtreeFlags&15990||o){o=Jn.transition,Jn.transition=null;var i=Ue;Ue=1;var a=Oe;Oe|=4,Km.current=null,n3(t,n),dS(n,t),TR(jp),Cc=!!Hp,jp=Hp=null,t.current=n,r3(n),AE(),Oe=a,Ue=i,Jn.transition=o}else t.current=n;if(Vl&&(Vl=!1,Es=t,zc=s),o=t.pendingLanes,o===0&&(zs=null),FE(n.stateNode),Cn(t,mt()),e!==null)for(r=t.onRecoverableError,n=0;n<e.length;n++)s=e[n],r(s.value,{componentStack:s.stack,digest:s.digest});if(Lc)throw Lc=!1,t=pf,pf=null,t;return zc&1&&t.tag!==0&&Li(),o=t.pendingLanes,o&1?t===ff?lu++:(lu=0,ff=t):lu=0,Js(),null}function Li(){if(Es!==null){var t=Qb(zc),e=Jn.transition,n=Ue;try{if(Jn.transition=null,Ue=16>t?16:t,Es===null)var r=!1;else{if(t=Es,Es=null,zc=0,Oe&6)throw Error(Q(331));var s=Oe;for(Oe|=4,de=t.current;de!==null;){var o=de,i=o.child;if(de.flags&16){var a=o.deletions;if(a!==null){for(var u=0;u<a.length;u++){var l=a[u];for(de=l;de!==null;){var c=de;switch(c.tag){case 0:case 11:case 15:au(8,c,o)}var d=c.child;if(d!==null)d.return=c,de=d;else for(;de!==null;){c=de;var h=c.sibling,p=c.return;if(uS(c),c===l){de=null;break}if(h!==null){h.return=p,de=h;break}de=p}}}var f=o.alternate;if(f!==null){var y=f.child;if(y!==null){f.child=null;do{var x=y.sibling;y.sibling=null,y=x}while(y!==null)}}de=o}}if(o.subtreeFlags&2064&&i!==null)i.return=o,de=i;else e:for(;de!==null;){if(o=de,o.flags&2048)switch(o.tag){case 0:case 11:case 15:au(9,o,o.return)}var g=o.sibling;if(g!==null){g.return=o.return,de=g;break e}de=o.return}}var v=t.current;for(de=v;de!==null;){i=de;var b=i.child;if(i.subtreeFlags&2064&&b!==null)b.return=i,de=b;else e:for(i=v;de!==null;){if(a=de,a.flags&2048)try{switch(a.tag){case 0:case 11:case 15:bd(9,a)}}catch(I){ht(a,a.return,I)}if(a===i){de=null;break e}var S=a.sibling;if(S!==null){S.return=a.return,de=S;break e}de=a.return}}if(Oe=s,Js(),zr&&typeof zr.onPostCommitFiberRoot=="function")try{zr.onPostCommitFiberRoot(pd,t)}catch{}r=!0}return r}finally{Ue=n,Jn.transition=e}}return!1}function rw(t,e,n){e=Ki(n,e),e=QC(t,e,1),t=Ls(t,e,1),e=en(),t!==null&&(Yu(t,1,e),Cn(t,e))}function ht(t,e,n){if(t.tag===3)rw(t,t,n);else for(;e!==null;){if(e.tag===3){rw(e,t,n);break}else if(e.tag===1){var r=e.stateNode;if(typeof e.type.getDerivedStateFromError=="function"||typeof r.componentDidCatch=="function"&&(zs===null||!zs.has(r))){t=Ki(n,t),t=ZC(e,t,1),e=Ls(e,t,1),t=en(),e!==null&&(Yu(e,1,t),Cn(e,t));break}}e=e.return}}function l3(t,e,n){var r=t.pingCache;r!==null&&r.delete(e),e=en(),t.pingedLanes|=t.suspendedLanes&n,Tt===t&&(Ot&n)===n&&(Ct===4||Ct===3&&(Ot&130023424)===Ot&&500>mt()-qm?Eo(t,0):Xm|=n),Cn(t,e)}function xS(t,e){e===0&&(t.mode&1?(e=_l,_l<<=1,!(_l&130023424)&&(_l=4194304)):e=1);var n=en();t=os(t,e),t!==null&&(Yu(t,e,n),Cn(t,n))}function c3(t){var e=t.memoizedState,n=0;e!==null&&(n=e.retryLane),xS(t,n)}function d3(t,e){var n=0;switch(t.tag){case 13:var r=t.stateNode,s=t.memoizedState;s!==null&&(n=s.retryLane);break;case 19:r=t.stateNode;break;default:throw Error(Q(314))}r!==null&&r.delete(e),xS(t,n)}var vS;vS=function(t,e,n){if(t!==null)if(t.memoizedProps!==e.pendingProps||wn.current)yn=!0;else{if(!(t.lanes&n)&&!(e.flags&128))return yn=!1,ZR(t,e,n);yn=!!(t.flags&131072)}else yn=!1,ot&&e.flags&1048576&&SC(e,Ec,e.index);switch(e.lanes=0,e.tag){case 2:var r=e.type;uc(t,e),t=e.pendingProps;var s=Ui(e,Kt.current);Fi(e,n),s=Wm(null,e,r,t,s,n);var o=Um();return e.flags|=1,typeof s=="object"&&s!==null&&typeof s.render=="function"&&s.$$typeof===void 0?(e.tag=1,e.memoizedState=null,e.updateQueue=null,bn(r)?(o=!0,Nc(e)):o=!1,e.memoizedState=s.state!==null&&s.state!==void 0?s.state:null,Lm(e),s.updater=wd,e.stateNode=s,s._reactInternals=e,tf(e,r,t,n),e=sf(null,e,r,!0,o,n)):(e.tag=0,ot&&o&&Rm(e),Zt(null,e,s,n),e=e.child),e;case 16:r=e.elementType;e:{switch(uc(t,e),t=e.pendingProps,s=r._init,r=s(r._payload),e.type=r,s=e.tag=p3(r),t=hr(r,t),s){case 0:e=rf(null,e,r,t,n);break e;case 1:e=Kv(null,e,r,t,n);break e;case 11:e=Hv(null,e,r,t,n);break e;case 14:e=jv(null,e,r,hr(r.type,t),n);break e}throw Error(Q(306,r,""))}return e;case 0:return r=e.type,s=e.pendingProps,s=e.elementType===r?s:hr(r,s),rf(t,e,r,s,n);case 1:return r=e.type,s=e.pendingProps,s=e.elementType===r?s:hr(r,s),Kv(t,e,r,s,n);case 3:e:{if(nS(e),t===null)throw Error(Q(387));r=e.pendingProps,o=e.memoizedState,s=o.element,EC(t,e),Pc(e,r,null,n);var i=e.memoizedState;if(r=i.element,o.isDehydrated)if(o={element:r,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},e.updateQueue.baseState=o,e.memoizedState=o,e.flags&256){s=Ki(Error(Q(423)),e),e=Xv(t,e,r,n,s);break e}else if(r!==s){s=Ki(Error(Q(424)),e),e=Xv(t,e,r,n,s);break e}else for(An=Fs(e.stateNode.containerInfo.firstChild),On=e,ot=!0,mr=null,n=NC(e,null,r,n),e.child=n;n;)n.flags=n.flags&-3|4096,n=n.sibling;else{if(Gi(),r===s){e=is(t,e,n);break e}Zt(t,e,r,n)}e=e.child}return e;case 5:return RC(e),t===null&&Zp(e),r=e.type,s=e.pendingProps,o=t!==null?t.memoizedProps:null,i=s.children,Kp(r,s)?i=null:o!==null&&Kp(r,o)&&(e.flags|=32),tS(t,e),Zt(t,e,i,n),e.child;case 6:return t===null&&Zp(e),null;case 13:return rS(t,e,n);case 4:return zm(e,e.stateNode.containerInfo),r=e.pendingProps,t===null?e.child=Hi(e,null,r,n):Zt(t,e,r,n),e.child;case 11:return r=e.type,s=e.pendingProps,s=e.elementType===r?s:hr(r,s),Hv(t,e,r,s,n);case 7:return Zt(t,e,e.pendingProps,n),e.child;case 8:return Zt(t,e,e.pendingProps.children,n),e.child;case 12:return Zt(t,e,e.pendingProps.children,n),e.child;case 10:e:{if(r=e.type._context,s=e.pendingProps,o=e.memoizedProps,i=s.value,Ye(Rc,r._currentValue),r._currentValue=i,o!==null)if(br(o.value,i)){if(o.children===s.children&&!wn.current){e=is(t,e,n);break e}}else for(o=e.child,o!==null&&(o.return=e);o!==null;){var a=o.dependencies;if(a!==null){i=o.child;for(var u=a.firstContext;u!==null;){if(u.context===r){if(o.tag===1){u=es(-1,n&-n),u.tag=2;var l=o.updateQueue;if(l!==null){l=l.shared;var c=l.pending;c===null?u.next=u:(u.next=c.next,c.next=u),l.pending=u}}o.lanes|=n,u=o.alternate,u!==null&&(u.lanes|=n),Jp(o.return,n,e),a.lanes|=n;break}u=u.next}}else if(o.tag===10)i=o.type===e.type?null:o.child;else if(o.tag===18){if(i=o.return,i===null)throw Error(Q(341));i.lanes|=n,a=i.alternate,a!==null&&(a.lanes|=n),Jp(i,n,e),i=o.sibling}else i=o.child;if(i!==null)i.return=o;else for(i=o;i!==null;){if(i===e){i=null;break}if(o=i.sibling,o!==null){o.return=i.return,i=o;break}i=i.return}o=i}Zt(t,e,s.children,n),e=e.child}return e;case 9:return s=e.type,r=e.pendingProps.children,Fi(e,n),s=nr(s),r=r(s),e.flags|=1,Zt(t,e,r,n),e.child;case 14:return r=e.type,s=hr(r,e.pendingProps),s=hr(r.type,s),jv(t,e,r,s,n);case 15:return JC(t,e,e.type,e.pendingProps,n);case 17:return r=e.type,s=e.pendingProps,s=e.elementType===r?s:hr(r,s),uc(t,e),e.tag=1,bn(r)?(t=!0,Nc(e)):t=!1,Fi(e,n),YC(e,r,s),tf(e,r,s,n),sf(null,e,r,!0,t,n);case 19:return sS(t,e,n);case 22:return eS(t,e,n)}throw Error(Q(156,e.tag))};function wS(t,e){return Kb(t,e)}function h3(t,e,n,r){this.tag=t,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Xn(t,e,n,r){return new h3(t,e,n,r)}function Jm(t){return t=t.prototype,!(!t||!t.isReactComponent)}function p3(t){if(typeof t=="function")return Jm(t)?1:0;if(t!=null){if(t=t.$$typeof,t===xm)return 11;if(t===vm)return 14}return 2}function Ms(t,e){var n=t.alternate;return n===null?(n=Xn(t.tag,e,t.key,t.mode),n.elementType=t.elementType,n.type=t.type,n.stateNode=t.stateNode,n.alternate=t,t.alternate=n):(n.pendingProps=e,n.type=t.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=t.flags&14680064,n.childLanes=t.childLanes,n.lanes=t.lanes,n.child=t.child,n.memoizedProps=t.memoizedProps,n.memoizedState=t.memoizedState,n.updateQueue=t.updateQueue,e=t.dependencies,n.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext},n.sibling=t.sibling,n.index=t.index,n.ref=t.ref,n}function dc(t,e,n,r,s,o){var i=2;if(r=t,typeof t=="function")Jm(t)&&(i=1);else if(typeof t=="string")i=5;else e:switch(t){case wi:return Ro(n.children,s,o,e);case ym:i=8,s|=8;break;case kp:return t=Xn(12,n,e,s|2),t.elementType=kp,t.lanes=o,t;case Ip:return t=Xn(13,n,e,s),t.elementType=Ip,t.lanes=o,t;case Np:return t=Xn(19,n,e,s),t.elementType=Np,t.lanes=o,t;case Rb:return Sd(n,s,o,e);default:if(typeof t=="object"&&t!==null)switch(t.$$typeof){case Tb:i=10;break e;case Eb:i=9;break e;case xm:i=11;break e;case vm:i=14;break e;case Ss:i=16,r=null;break e}throw Error(Q(130,t==null?t:typeof t,""))}return e=Xn(i,n,e,s),e.elementType=t,e.type=r,e.lanes=o,e}function Ro(t,e,n,r){return t=Xn(7,t,r,e),t.lanes=n,t}function Sd(t,e,n,r){return t=Xn(22,t,r,e),t.elementType=Rb,t.lanes=n,t.stateNode={isHidden:!1},t}function qh(t,e,n){return t=Xn(6,t,null,e),t.lanes=n,t}function Yh(t,e,n){return e=Xn(4,t.children!==null?t.children:[],t.key,e),e.lanes=n,e.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},e}function f3(t,e,n,r,s){this.tag=e,this.containerInfo=t,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Rh(0),this.expirationTimes=Rh(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Rh(0),this.identifierPrefix=r,this.onRecoverableError=s,this.mutableSourceEagerHydrationData=null}function eg(t,e,n,r,s,o,i,a,u){return t=new f3(t,e,n,a,u),e===1?(e=1,o===!0&&(e|=8)):e=0,o=Xn(3,null,null,e),t.current=o,o.stateNode=t,o.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Lm(o),t}function m3(t,e,n){var r=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:vi,key:r==null?null:""+r,children:t,containerInfo:e,implementation:n}}function bS(t){if(!t)return js;t=t._reactInternals;e:{if(qo(t)!==t||t.tag!==1)throw Error(Q(170));var e=t;do{switch(e.tag){case 3:e=e.stateNode.context;break e;case 1:if(bn(e.type)){e=e.stateNode.__reactInternalMemoizedMergedChildContext;break e}}e=e.return}while(e!==null);throw Error(Q(171))}if(t.tag===1){var n=t.type;if(bn(n))return bC(t,n,e)}return e}function CS(t,e,n,r,s,o,i,a,u){return t=eg(n,r,!0,t,s,o,i,a,u),t.context=bS(null),n=t.current,r=en(),s=Bs(n),o=es(r,s),o.callback=e??null,Ls(n,o,s),t.current.lanes=s,Yu(t,s,r),Cn(t,r),t}function $d(t,e,n,r){var s=e.current,o=en(),i=Bs(s);return n=bS(n),e.context===null?e.context=n:e.pendingContext=n,e=es(o,i),e.payload={element:t},r=r===void 0?null:r,r!==null&&(e.callback=r),t=Ls(s,e,i),t!==null&&(wr(t,s,i,o),oc(t,s,i)),i}function Mc(t){if(t=t.current,!t.child)return null;switch(t.child.tag){case 5:return t.child.stateNode;default:return t.child.stateNode}}function sw(t,e){if(t=t.memoizedState,t!==null&&t.dehydrated!==null){var n=t.retryLane;t.retryLane=n!==0&&n<e?n:e}}function tg(t,e){sw(t,e),(t=t.alternate)&&sw(t,e)}function g3(){return null}var SS=typeof reportError=="function"?reportError:function(t){console.error(t)};function ng(t){this._internalRoot=t}kd.prototype.render=ng.prototype.render=function(t){var e=this._internalRoot;if(e===null)throw Error(Q(409));$d(t,e,null,null)};kd.prototype.unmount=ng.prototype.unmount=function(){var t=this._internalRoot;if(t!==null){this._internalRoot=null;var e=t.containerInfo;zo(function(){$d(null,t,null,null)}),e[ss]=null}};function kd(t){this._internalRoot=t}kd.prototype.unstable_scheduleHydration=function(t){if(t){var e=eC();t={blockedOn:null,target:t,priority:e};for(var n=0;n<Is.length&&e!==0&&e<Is[n].priority;n++);Is.splice(n,0,t),n===0&&nC(t)}};function rg(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11)}function Id(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11&&(t.nodeType!==8||t.nodeValue!==" react-mount-point-unstable "))}function ow(){}function y3(t,e,n,r,s){if(s){if(typeof r=="function"){var o=r;r=function(){var l=Mc(i);o.call(l)}}var i=CS(e,r,t,0,null,!1,!1,"",ow);return t._reactRootContainer=i,t[ss]=i.current,Cu(t.nodeType===8?t.parentNode:t),zo(),i}for(;s=t.lastChild;)t.removeChild(s);if(typeof r=="function"){var a=r;r=function(){var l=Mc(u);a.call(l)}}var u=eg(t,0,!1,null,null,!1,!1,"",ow);return t._reactRootContainer=u,t[ss]=u.current,Cu(t.nodeType===8?t.parentNode:t),zo(function(){$d(e,u,n,r)}),u}function Nd(t,e,n,r,s){var o=n._reactRootContainer;if(o){var i=o;if(typeof s=="function"){var a=s;s=function(){var u=Mc(i);a.call(u)}}$d(e,i,t,s)}else i=y3(n,e,t,s,r);return Mc(i)}Zb=function(t){switch(t.tag){case 3:var e=t.stateNode;if(e.current.memoizedState.isDehydrated){var n=Xa(e.pendingLanes);n!==0&&(Cm(e,n|1),Cn(e,mt()),!(Oe&6)&&(Xi=mt()+500,Js()))}break;case 13:zo(function(){var r=os(t,1);if(r!==null){var s=en();wr(r,t,1,s)}}),tg(t,1)}};Sm=function(t){if(t.tag===13){var e=os(t,134217728);if(e!==null){var n=en();wr(e,t,134217728,n)}tg(t,134217728)}};Jb=function(t){if(t.tag===13){var e=Bs(t),n=os(t,e);if(n!==null){var r=en();wr(n,t,e,r)}tg(t,e)}};eC=function(){return Ue};tC=function(t,e){var n=Ue;try{return Ue=t,e()}finally{Ue=n}};Lp=function(t,e,n){switch(e){case"input":if(Rp(t,n),e=n.name,n.type==="radio"&&e!=null){for(n=t;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<n.length;e++){var r=n[e];if(r!==t&&r.form===t.form){var s=yd(r);if(!s)throw Error(Q(90));Pb(r),Rp(r,s)}}}break;case"textarea":Db(t,n);break;case"select":e=n.value,e!=null&&Pi(t,!!n.multiple,e,!1)}};Vb=Ym;Wb=zo;var x3={usingClientEntryPoint:!1,Events:[Zu,$i,yd,Bb,Mb,Ym]},Va={findFiberByHostInstance:Co,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},v3={bundleType:Va.bundleType,version:Va.version,rendererPackageName:Va.rendererPackageName,rendererConfig:Va.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ms.ReactCurrentDispatcher,findHostInstanceByFiber:function(t){return t=Hb(t),t===null?null:t.stateNode},findFiberByHostInstance:Va.findFiberByHostInstance||g3,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var Wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Wl.isDisabled&&Wl.supportsFiber)try{pd=Wl.inject(v3),zr=Wl}catch{}}zn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=x3;zn.createPortal=function(t,e){var n=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!rg(e))throw Error(Q(200));return m3(t,e,null,n)};zn.createRoot=function(t,e){if(!rg(t))throw Error(Q(299));var n=!1,r="",s=SS;return e!=null&&(e.unstable_strictMode===!0&&(n=!0),e.identifierPrefix!==void 0&&(r=e.identifierPrefix),e.onRecoverableError!==void 0&&(s=e.onRecoverableError)),e=eg(t,1,!1,null,null,n,!1,r,s),t[ss]=e.current,Cu(t.nodeType===8?t.parentNode:t),new ng(e)};zn.findDOMNode=function(t){if(t==null)return null;if(t.nodeType===1)return t;var e=t._reactInternals;if(e===void 0)throw typeof t.render=="function"?Error(Q(188)):(t=Object.keys(t).join(","),Error(Q(268,t)));return t=Hb(e),t=t===null?null:t.stateNode,t};zn.flushSync=function(t){return zo(t)};zn.hydrate=function(t,e,n){if(!Id(e))throw Error(Q(200));return Nd(null,t,e,!0,n)};zn.hydrateRoot=function(t,e,n){if(!rg(t))throw Error(Q(405));var r=n!=null&&n.hydratedSources||null,s=!1,o="",i=SS;if(n!=null&&(n.unstable_strictMode===!0&&(s=!0),n.identifierPrefix!==void 0&&(o=n.identifierPrefix),n.onRecoverableError!==void 0&&(i=n.onRecoverableError)),e=CS(e,null,t,1,n??null,s,!1,o,i),t[ss]=e.current,Cu(t),r)for(t=0;t<r.length;t++)n=r[t],s=n._getVersion,s=s(n._source),e.mutableSourceEagerHydrationData==null?e.mutableSourceEagerHydrationData=[n,s]:e.mutableSourceEagerHydrationData.push(n,s);return new kd(e)};zn.render=function(t,e,n){if(!Id(e))throw Error(Q(200));return Nd(null,t,e,!1,n)};zn.unmountComponentAtNode=function(t){if(!Id(t))throw Error(Q(40));return t._reactRootContainer?(zo(function(){Nd(null,null,t,!1,function(){t._reactRootContainer=null,t[ss]=null})}),!0):!1};zn.unstable_batchedUpdates=Ym;zn.unstable_renderSubtreeIntoContainer=function(t,e,n,r){if(!Id(n))throw Error(Q(200));if(t==null||t._reactInternals===void 0)throw Error(Q(38));return Nd(t,e,n,!1,r)};zn.version="18.3.1-next-f1338f8080-20240426";function $S(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE($S)}catch(t){console.error(t)}}$S(),$b.exports=zn;var w3=$b.exports,iw=w3;Sp.createRoot=iw.createRoot,Sp.hydrateRoot=iw.hydrateRoot;const b3=pm.memo(({onVideoElement:t})=>{const e=nt.useRef(null);return nt.useEffect(()=>{const n=e.current;if(!n)return;let r=null;return(async()=>{try{r=await navigator.mediaDevices.getUserMedia({video:{facingMode:"user"},audio:!1}),n.srcObject=r,n.onloadedmetadata=()=>{n.play(),t(n)}}catch(o){console.error("Error accessing camera:",o)}})(),()=>{r&&r.getTracks().forEach(o=>o.stop())}},[t]),G.jsx("video",{ref:e,autoPlay:!0,playsInline:!0,muted:!0,className:"w-full h-auto transform scale-x-[-1]"})}),C3=({landmarks:t,videoWidth:e,videoHeight:n,containerWidth:r,containerHeight:s,isMirrored:o=!1})=>{if(!t||t.length===0||e===0||n===0)return null;const i=r||e,a=s||n;console.log("🎯 PoseOverlay size calculation:",{videoSize:{width:e,height:n},displaySize:{width:i,height:a},containerProvided:!!r});const u=x=>{let g=x.x*i,v=x.y*a;return o&&(g=i-g),{x:g,y:v,visibility:x.visibility}},l=[0,11,12,13,14,15,16,23,24,25,26,27,28,29,30,31,32],c=[[11,12],[11,23],[12,24],[23,24],[11,13],[13,15],[12,14],[14,16],[23,25],[25,27],[27,29],[29,31],[24,26],[26,28],[28,30],[30,32],[0,11],[0,12]],d=t.filter((x,g)=>x&&typeof x.visibility=="number"&&x.visibility>.3&&l.includes(g)),h=i<768,p=h?3:5,f=h?2:3,y=h?10:12;return G.jsxs("svg",{className:"absolute inset-0 w-full h-full pointer-events-none",style:{position:"absolute",top:0,left:0,width:"100%",height:"100%",zIndex:10,pointerEvents:"none"},viewBox:`0 0 ${i} ${a}`,preserveAspectRatio:"xMidYMid meet",children:[c.map(([x,g],v)=>{const b=t[x],S=t[g];if(!b||!S||b.visibility<.3||S.visibility<.3)return null;const I=u(b),E=u(S);return G.jsx("line",{x1:I.x,y1:I.y,x2:E.x,y2:E.y,stroke:"#00ff00",strokeWidth:f,opacity:"0.8"},`connection-${v}`)}),d.map(x=>{const g=l.find(S=>t[S]===x);if(g===void 0)return null;const v=u(x);let b="#ff0000";return[11,12].includes(g)&&(b="#ff6600"),[13,14].includes(g)&&(b="#ffaa00"),[15,16].includes(g)&&(b="#ffdd00"),[23,24].includes(g)&&(b="#0066ff"),[25,26].includes(g)&&(b="#ff00ff"),[27,28].includes(g)&&(b="#00ffff"),[29,30].includes(g)&&(b="#aa00ff"),[31,32].includes(g)&&(b="#00ff88"),g===0&&(b="#ffff00"),G.jsx("circle",{cx:v.x,cy:v.y,r:p,fill:b,opacity:"0.9",stroke:"#ffffff",strokeWidth:"1"},`landmark-${g}`)}),G.jsxs("text",{x:10,y:20,fill:"#ffffff",fontSize:y,opacity:"0.7",stroke:"#000000",strokeWidth:"0.5",children:[d.length,"pts ",Math.round(i),"x",Math.round(a)]})]})};var xn=(t=>(t.STANDING_HIP_FLEXION="standing_hip_flexion",t.ROCK_BACK="rock_back",t.SITTING_KNEE_EXTENSION="sitting_knee_extension",t))(xn||{}),S3={};(function(){var t;function e(m){var w=0;return function(){return w<m.length?{done:!1,value:m[w++]}:{done:!0}}}var n=typeof Object.defineProperties=="function"?Object.defineProperty:function(m,w,$){return m==Array.prototype||m==Object.prototype||(m[w]=$.value),m};function r(m){m=[typeof globalThis=="object"&&globalThis,m,typeof window=="object"&&window,typeof self=="object"&&self,typeof Lr=="object"&&Lr];for(var w=0;w<m.length;++w){var $=m[w];if($&&$.Math==Math)return $}throw Error("Cannot find global object")}var s=r(this);function o(m,w){if(w)e:{var $=s;m=m.split(".");for(var k=0;k<m.length-1;k++){var P=m[k];if(!(P in $))break e;$=$[P]}m=m[m.length-1],k=$[m],w=w(k),w!=k&&w!=null&&n($,m,{configurable:!0,writable:!0,value:w})}}o("Symbol",function(m){function w(D){if(this instanceof w)throw new TypeError("Symbol is not a constructor");return new $(k+(D||"")+"_"+P++,D)}function $(D,A){this.h=D,n(this,"description",{configurable:!0,writable:!0,value:A})}if(m)return m;$.prototype.toString=function(){return this.h};var k="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",P=0;return w}),o("Symbol.iterator",function(m){if(m)return m;m=Symbol("Symbol.iterator");for(var w="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),$=0;$<w.length;$++){var k=s[w[$]];typeof k=="function"&&typeof k.prototype[m]!="function"&&n(k.prototype,m,{configurable:!0,writable:!0,value:function(){return i(e(this))}})}return m});function i(m){return m={next:m},m[Symbol.iterator]=function(){return this},m}function a(m){var w=typeof Symbol<"u"&&Symbol.iterator&&m[Symbol.iterator];return w?w.call(m):{next:e(m)}}function u(m){if(!(m instanceof Array)){m=a(m);for(var w,$=[];!(w=m.next()).done;)$.push(w.value);m=$}return m}var l=typeof Object.assign=="function"?Object.assign:function(m,w){for(var $=1;$<arguments.length;$++){var k=arguments[$];if(k)for(var P in k)Object.prototype.hasOwnProperty.call(k,P)&&(m[P]=k[P])}return m};o("Object.assign",function(m){return m||l});var c=typeof Object.create=="function"?Object.create:function(m){function w(){}return w.prototype=m,new w},d;if(typeof Object.setPrototypeOf=="function")d=Object.setPrototypeOf;else{var h;e:{var p={a:!0},f={};try{f.__proto__=p,h=f.a;break e}catch{}h=!1}d=h?function(m,w){if(m.__proto__=w,m.__proto__!==w)throw new TypeError(m+" is not extensible");return m}:null}var y=d;function x(m,w){if(m.prototype=c(w.prototype),m.prototype.constructor=m,y)y(m,w);else for(var $ in w)if($!="prototype")if(Object.defineProperties){var k=Object.getOwnPropertyDescriptor(w,$);k&&Object.defineProperty(m,$,k)}else m[$]=w[$];m.za=w.prototype}function g(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function v(m){if(m.m)throw new TypeError("Generator is already running");m.m=!0}g.prototype.u=function(m){this.i=m};function b(m,w){m.l={ma:w,na:!0},m.h=m.s||m.v}g.prototype.return=function(m){this.l={return:m},this.h=this.v};function S(m,w,$){return m.h=$,{value:w}}function I(m){this.h=new g,this.i=m}function E(m,w){v(m.h);var $=m.h.j;return $?R(m,"return"in $?$.return:function(k){return{value:k,done:!0}},w,m.h.return):(m.h.return(w),_(m))}function R(m,w,$,k){try{var P=w.call(m.h.j,$);if(!(P instanceof Object))throw new TypeError("Iterator result "+P+" is not an object");if(!P.done)return m.h.m=!1,P;var D=P.value}catch(A){return m.h.j=null,b(m.h,A),_(m)}return m.h.j=null,k.call(m.h,D),_(m)}function _(m){for(;m.h.h;)try{var w=m.i(m.h);if(w)return m.h.m=!1,{value:w.value,done:!1}}catch($){m.h.i=void 0,b(m.h,$)}if(m.h.m=!1,m.h.l){if(w=m.h.l,m.h.l=null,w.na)throw w.ma;return{value:w.return,done:!0}}return{value:void 0,done:!0}}function L(m){this.next=function(w){return v(m.h),m.h.j?w=R(m,m.h.j.next,w,m.h.u):(m.h.u(w),w=_(m)),w},this.throw=function(w){return v(m.h),m.h.j?w=R(m,m.h.j.throw,w,m.h.u):(b(m.h,w),w=_(m)),w},this.return=function(w){return E(m,w)},this[Symbol.iterator]=function(){return this}}function F(m){function w(k){return m.next(k)}function $(k){return m.throw(k)}return new Promise(function(k,P){function D(A){A.done?k(A.value):Promise.resolve(A.value).then(w,$).then(D,P)}D(m.next())})}function V(m){return F(new L(new I(m)))}o("Promise",function(m){function w(A){this.i=0,this.j=void 0,this.h=[],this.u=!1;var B=this.l();try{A(B.resolve,B.reject)}catch(W){B.reject(W)}}function $(){this.h=null}function k(A){return A instanceof w?A:new w(function(B){B(A)})}if(m)return m;$.prototype.i=function(A){if(this.h==null){this.h=[];var B=this;this.j(function(){B.m()})}this.h.push(A)};var P=s.setTimeout;$.prototype.j=function(A){P(A,0)},$.prototype.m=function(){for(;this.h&&this.h.length;){var A=this.h;this.h=[];for(var B=0;B<A.length;++B){var W=A[B];A[B]=null;try{W()}catch(q){this.l(q)}}}this.h=null},$.prototype.l=function(A){this.j(function(){throw A})},w.prototype.l=function(){function A(q){return function(se){W||(W=!0,q.call(B,se))}}var B=this,W=!1;return{resolve:A(this.I),reject:A(this.m)}},w.prototype.I=function(A){if(A===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(A instanceof w)this.L(A);else{e:switch(typeof A){case"object":var B=A!=null;break e;case"function":B=!0;break e;default:B=!1}B?this.F(A):this.s(A)}},w.prototype.F=function(A){var B=void 0;try{B=A.then}catch(W){this.m(W);return}typeof B=="function"?this.M(B,A):this.s(A)},w.prototype.m=function(A){this.v(2,A)},w.prototype.s=function(A){this.v(1,A)},w.prototype.v=function(A,B){if(this.i!=0)throw Error("Cannot settle("+A+", "+B+"): Promise already settled in state"+this.i);this.i=A,this.j=B,this.i===2&&this.K(),this.H()},w.prototype.K=function(){var A=this;P(function(){if(A.D()){var B=s.console;typeof B<"u"&&B.error(A.j)}},1)},w.prototype.D=function(){if(this.u)return!1;var A=s.CustomEvent,B=s.Event,W=s.dispatchEvent;return typeof W>"u"?!0:(typeof A=="function"?A=new A("unhandledrejection",{cancelable:!0}):typeof B=="function"?A=new B("unhandledrejection",{cancelable:!0}):(A=s.document.createEvent("CustomEvent"),A.initCustomEvent("unhandledrejection",!1,!0,A)),A.promise=this,A.reason=this.j,W(A))},w.prototype.H=function(){if(this.h!=null){for(var A=0;A<this.h.length;++A)D.i(this.h[A]);this.h=null}};var D=new $;return w.prototype.L=function(A){var B=this.l();A.T(B.resolve,B.reject)},w.prototype.M=function(A,B){var W=this.l();try{A.call(B,W.resolve,W.reject)}catch(q){W.reject(q)}},w.prototype.then=function(A,B){function W(ge,le){return typeof ge=="function"?function(we){try{q(ge(we))}catch(Ee){se(Ee)}}:le}var q,se,ve=new w(function(ge,le){q=ge,se=le});return this.T(W(A,q),W(B,se)),ve},w.prototype.catch=function(A){return this.then(void 0,A)},w.prototype.T=function(A,B){function W(){switch(q.i){case 1:A(q.j);break;case 2:B(q.j);break;default:throw Error("Unexpected state: "+q.i)}}var q=this;this.h==null?D.i(W):this.h.push(W),this.u=!0},w.resolve=k,w.reject=function(A){return new w(function(B,W){W(A)})},w.race=function(A){return new w(function(B,W){for(var q=a(A),se=q.next();!se.done;se=q.next())k(se.value).T(B,W)})},w.all=function(A){var B=a(A),W=B.next();return W.done?k([]):new w(function(q,se){function ve(we){return function(Ee){ge[we]=Ee,le--,le==0&&q(ge)}}var ge=[],le=0;do ge.push(void 0),le++,k(W.value).T(ve(ge.length-1),se),W=B.next();while(!W.done)})},w});function j(m,w){m instanceof String&&(m+="");var $=0,k=!1,P={next:function(){if(!k&&$<m.length){var D=$++;return{value:w(D,m[D]),done:!1}}return k=!0,{done:!0,value:void 0}}};return P[Symbol.iterator]=function(){return P},P}o("Array.prototype.keys",function(m){return m||function(){return j(this,function(w){return w})}}),o("Array.prototype.fill",function(m){return m||function(w,$,k){var P=this.length||0;for(0>$&&($=Math.max(0,P+$)),(k==null||k>P)&&(k=P),k=Number(k),0>k&&(k=Math.max(0,P+k)),$=Number($||0);$<k;$++)this[$]=w;return this}});function K(m){return m||Array.prototype.fill}o("Int8Array.prototype.fill",K),o("Uint8Array.prototype.fill",K),o("Uint8ClampedArray.prototype.fill",K),o("Int16Array.prototype.fill",K),o("Uint16Array.prototype.fill",K),o("Int32Array.prototype.fill",K),o("Uint32Array.prototype.fill",K),o("Float32Array.prototype.fill",K),o("Float64Array.prototype.fill",K),o("Object.is",function(m){return m||function(w,$){return w===$?w!==0||1/w===1/$:w!==w&&$!==$}}),o("Array.prototype.includes",function(m){return m||function(w,$){var k=this;k instanceof String&&(k=String(k));var P=k.length;for($=$||0,0>$&&($=Math.max($+P,0));$<P;$++){var D=k[$];if(D===w||Object.is(D,w))return!0}return!1}}),o("String.prototype.includes",function(m){return m||function(w,$){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(w instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(w,$||0)!==-1}});var Z=this||self;function ne(m,w){m=m.split(".");var $=Z;m[0]in $||typeof $.execScript>"u"||$.execScript("var "+m[0]);for(var k;m.length&&(k=m.shift());)m.length||w===void 0?$[k]&&$[k]!==Object.prototype[k]?$=$[k]:$=$[k]={}:$[k]=w}function ce(m){var w;e:{if((w=Z.navigator)&&(w=w.userAgent))break e;w=""}return w.indexOf(m)!=-1}var Ce=Array.prototype.map?function(m,w){return Array.prototype.map.call(m,w,void 0)}:function(m,w){for(var $=m.length,k=Array($),P=typeof m=="string"?m.split(""):m,D=0;D<$;D++)D in P&&(k[D]=w.call(void 0,P[D],D,m));return k},X={},ie=null;function me(m){var w=m.length,$=3*w/4;$%3?$=Math.floor($):"=.".indexOf(m[w-1])!=-1&&($="=.".indexOf(m[w-2])!=-1?$-2:$-1);var k=new Uint8Array($),P=0;return Ne(m,function(D){k[P++]=D}),P!==$?k.subarray(0,P):k}function Ne(m,w){function $(W){for(;k<m.length;){var q=m.charAt(k++),se=ie[q];if(se!=null)return se;if(!/^[\s\xa0]*$/.test(q))throw Error("Unknown base64 encoding at char: "+q)}return W}Me();for(var k=0;;){var P=$(-1),D=$(0),A=$(64),B=$(64);if(B===64&&P===-1)break;w(P<<2|D>>4),A!=64&&(w(D<<4&240|A>>2),B!=64&&w(A<<6&192|B))}}function Me(){if(!ie){ie={};for(var m="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),w=["+/=","+/","-_=","-_.","-_"],$=0;5>$;$++){var k=m.concat(w[$].split(""));X[$]=k;for(var P=0;P<k.length;P++){var D=k[P];ie[D]===void 0&&(ie[D]=P)}}}}var un=typeof Uint8Array<"u",ln=!(ce("Trident")||ce("MSIE"))&&typeof Z.btoa=="function";function Ir(m){if(!ln){var w;w===void 0&&(w=0),Me(),w=X[w];for(var $=Array(Math.floor(m.length/3)),k=w[64]||"",P=0,D=0;P<m.length-2;P+=3){var A=m[P],B=m[P+1],W=m[P+2],q=w[A>>2];A=w[(A&3)<<4|B>>4],B=w[(B&15)<<2|W>>6],W=w[W&63],$[D++]=q+A+B+W}switch(q=0,W=k,m.length-P){case 2:q=m[P+1],W=w[(q&15)<<2]||k;case 1:m=m[P],$[D]=w[m>>2]+w[(m&3)<<4|q>>4]+W+k}return $.join("")}for(w="";10240<m.length;)w+=String.fromCharCode.apply(null,m.subarray(0,10240)),m=m.subarray(10240);return w+=String.fromCharCode.apply(null,m),btoa(w)}var En=RegExp("[-_.]","g");function ui(m){switch(m){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function n1(m){if(!ln)return me(m);En.test(m)&&(m=m.replace(En,ui)),m=atob(m);for(var w=new Uint8Array(m.length),$=0;$<m.length;$++)w[$]=m.charCodeAt($);return w}var r1;function nh(){return r1||(r1=new Uint8Array(0))}var ka={},eT=typeof Uint8Array.prototype.slice=="function",vt=0,Qt=0;function s1(m){var w=0>m;m=Math.abs(m);var $=m>>>0;m=Math.floor((m-$)/4294967296),w&&($=a(o1($,m)),w=$.next().value,m=$.next().value,$=w),vt=$>>>0,Qt=m>>>0}var tT=typeof BigInt=="function";function o1(m,w){return w=~w,m?m=~m+1:w+=1,[m,w]}function i1(m,w){this.i=m>>>0,this.h=w>>>0}function a1(m){if(!m)return u1||(u1=new i1(0,0));if(!/^-?\d+$/.test(m))return null;if(16>m.length)s1(Number(m));else if(tT)m=BigInt(m),vt=Number(m&BigInt(4294967295))>>>0,Qt=Number(m>>BigInt(32)&BigInt(4294967295));else{var w=+(m[0]==="-");Qt=vt=0;for(var $=m.length,k=w,P=($-w)%6+w;P<=$;k=P,P+=6)k=Number(m.slice(k,P)),Qt*=1e6,vt=1e6*vt+k,4294967296<=vt&&(Qt+=vt/4294967296|0,vt%=4294967296);w&&(w=a(o1(vt,Qt)),m=w.next().value,w=w.next().value,vt=m,Qt=w)}return new i1(vt,Qt)}var u1;function l1(m,w){return Error("Invalid wire type: "+m+" (at position "+w+")")}function rh(){return Error("Failed to read varint, encoding is invalid.")}function c1(m,w){return Error("Tried to read past the end of the data "+w+" > "+m)}function io(){throw Error("Invalid UTF8")}function d1(m,w){return w=String.fromCharCode.apply(null,w),m==null?w:m+w}var fl=void 0,sh,nT=typeof TextDecoder<"u",h1,rT=typeof TextEncoder<"u",p1;function f1(m){if(m!==ka)throw Error("illegal external caller")}function Ia(m,w){if(f1(w),this.V=m,m!=null&&m.length===0)throw Error("ByteString should be constructed with non-empty values")}function oh(){return p1||(p1=new Ia(null,ka))}function m1(m){f1(ka);var w=m.V;return w=w==null||un&&w!=null&&w instanceof Uint8Array?w:typeof w=="string"?n1(w):null,w==null?w:m.V=w}function sT(m){if(typeof m=="string")return{buffer:n1(m),C:!1};if(Array.isArray(m))return{buffer:new Uint8Array(m),C:!1};if(m.constructor===Uint8Array)return{buffer:m,C:!1};if(m.constructor===ArrayBuffer)return{buffer:new Uint8Array(m),C:!1};if(m.constructor===Ia)return{buffer:m1(m)||nh(),C:!0};if(m instanceof Uint8Array)return{buffer:new Uint8Array(m.buffer,m.byteOffset,m.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function g1(m,w){this.i=null,this.m=!1,this.h=this.j=this.l=0,ih(this,m,w)}function ih(m,w,$){$=$===void 0?{}:$,m.S=$.S===void 0?!1:$.S,w&&(w=sT(w),m.i=w.buffer,m.m=w.C,m.l=0,m.j=m.i.length,m.h=m.l)}g1.prototype.reset=function(){this.h=this.l};function ao(m,w){if(m.h=w,w>m.j)throw c1(m.j,w)}function Na(m){var w=m.i,$=m.h,k=w[$++],P=k&127;if(k&128&&(k=w[$++],P|=(k&127)<<7,k&128&&(k=w[$++],P|=(k&127)<<14,k&128&&(k=w[$++],P|=(k&127)<<21,k&128&&(k=w[$++],P|=k<<28,k&128&&w[$++]&128&&w[$++]&128&&w[$++]&128&&w[$++]&128&&w[$++]&128)))))throw rh();return ao(m,$),P}function y1(m,w){if(0>w)throw Error("Tried to read a negative byte length: "+w);var $=m.h,k=$+w;if(k>m.j)throw c1(w,m.j-$);return m.h=k,$}var x1=[];function ah(){this.h=[]}ah.prototype.length=function(){return this.h.length},ah.prototype.end=function(){var m=this.h;return this.h=[],m};function v1(m,w,$){for(;0<$||127<w;)m.h.push(w&127|128),w=(w>>>7|$<<25)>>>0,$>>>=7;m.h.push(w)}function uo(m,w){for(;127<w;)m.h.push(w&127|128),w>>>=7;m.h.push(w)}function uh(m,w){if(x1.length){var $=x1.pop();ih($,m,w),m=$}else m=new g1(m,w);this.h=m,this.j=this.h.h,this.i=this.l=-1,this.setOptions(w)}uh.prototype.setOptions=function(m){m=m===void 0?{}:m,this.ca=m.ca===void 0?!1:m.ca},uh.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};function w1(m){var w=m.h;if(w.h==w.j)return!1;m.j=m.h.h;var $=Na(m.h)>>>0;if(w=$>>>3,$&=7,!(0<=$&&5>=$))throw l1($,m.j);if(1>w)throw Error("Invalid field number: "+w+" (at position "+m.j+")");return m.l=w,m.i=$,!0}function ml(m){switch(m.i){case 0:if(m.i!=0)ml(m);else e:{m=m.h;for(var w=m.h,$=w+10,k=m.i;w<$;)if(!(k[w++]&128)){ao(m,w);break e}throw rh()}break;case 1:m=m.h,ao(m,m.h+8);break;case 2:m.i!=2?ml(m):(w=Na(m.h)>>>0,m=m.h,ao(m,m.h+w));break;case 5:m=m.h,ao(m,m.h+4);break;case 3:w=m.l;do{if(!w1(m))throw Error("Unmatched start-group tag: stream EOF");if(m.i==4){if(m.l!=w)throw Error("Unmatched end-group tag");break}ml(m)}while(!0);break;default:throw l1(m.i,m.j)}}var gl=[];function oT(){this.j=[],this.i=0,this.h=new ah}function li(m,w){w.length!==0&&(m.j.push(w),m.i+=w.length)}function iT(m,w){if(w=w.R){li(m,m.h.end());for(var $=0;$<w.length;$++)li(m,m1(w[$])||nh())}}var jr=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol():void 0;function lo(m,w){return jr?m[jr]|=w:m.A!==void 0?m.A|=w:(Object.defineProperties(m,{A:{value:w,configurable:!0,writable:!0,enumerable:!1}}),w)}function b1(m,w){jr?m[jr]&&(m[jr]&=~w):m.A!==void 0&&(m.A&=~w)}function ft(m){var w;return jr?w=m[jr]:w=m.A,w??0}function Nr(m,w){jr?m[jr]=w:m.A!==void 0?m.A=w:Object.defineProperties(m,{A:{value:w,configurable:!0,writable:!0,enumerable:!1}})}function lh(m){return lo(m,1),m}function aT(m,w){Nr(w,(m|0)&-51)}function yl(m,w){Nr(w,(m|18)&-41)}var ch={};function xl(m){return m!==null&&typeof m=="object"&&!Array.isArray(m)&&m.constructor===Object}var Ta,C1=[];Nr(C1,23),Ta=Object.freeze(C1);function dh(m){if(ft(m.o)&2)throw Error("Cannot mutate an immutable Message")}function hh(m){var w=m.length;(w=w?m[w-1]:void 0)&&xl(w)?w.g=1:(w={},m.push((w.g=1,w)))}function S1(m){var w=m.i+m.G;return m.B||(m.B=m.o[w]={})}function lr(m,w){return w===-1?null:w>=m.i?m.B?m.B[w]:void 0:m.o[w+m.G]}function Tr(m,w,$,k){dh(m),Ea(m,w,$,k)}function Ea(m,w,$,k){m.j&&(m.j=void 0),w>=m.i||k?S1(m)[w]=$:(m.o[w+m.G]=$,(m=m.B)&&w in m&&delete m[w])}function ph(m,w,$,k){var P=lr(m,w);Array.isArray(P)||(P=Ta);var D=ft(P);if(D&1||lh(P),k)D&2||lo(P,2),$&1||Object.freeze(P);else{k=!($&2);var A=D&2;$&1||!A?k&&D&16&&!A&&b1(P,16):(P=lh(Array.prototype.slice.call(P)),Ea(m,w,P))}return P}function fh(m,w){var $=lr(m,w),k=$==null?$:typeof $=="number"||$==="NaN"||$==="Infinity"||$==="-Infinity"?Number($):void 0;return k!=null&&k!==$&&Ea(m,w,k),k}function $1(m,w,$,k,P){m.h||(m.h={});var D=m.h[$],A=ph(m,$,3,P);if(!D){var B=A;D=[];var W=!!(ft(m.o)&16);A=!!(ft(B)&2);var q=B;!P&&A&&(B=Array.prototype.slice.call(B));for(var se=A,ve=0;ve<B.length;ve++){var ge=B[ve],le=w,we=!1;if(we=we===void 0?!1:we,ge=Array.isArray(ge)?new le(ge):we?new le:void 0,ge!==void 0){le=ge.o;var Ee=we=ft(le);A&&(Ee|=2),W&&(Ee|=16),Ee!=we&&Nr(le,Ee),le=Ee,se=se||!!(2&le),D.push(ge)}}return m.h[$]=D,W=ft(B),w=W|33,w=se?w&-9:w|8,W!=w&&(se=B,Object.isFrozen(se)&&(se=Array.prototype.slice.call(se)),Nr(se,w),B=se),q!==B&&Ea(m,$,B),(P||k&&A)&&lo(D,2),k&&Object.freeze(D),D}return P||(P=Object.isFrozen(D),k&&!P?Object.freeze(D):!k&&P&&(D=Array.prototype.slice.call(D),m.h[$]=D)),D}function mh(m,w,$){var k=!!(ft(m.o)&2);if(w=$1(m,w,$,k,k),m=ph(m,$,3,k),!(k||ft(m)&8)){for(k=0;k<w.length;k++){if($=w[k],ft($.o)&2){var P=R1($,!1);P.j=$}else P=$;$!==P&&(w[k]=P,m[k]=P.o)}lo(m,8)}return w}function Er(m,w,$){if($!=null&&typeof $!="number")throw Error("Value of float/double field must be a number|null|undefined, found "+typeof $+": "+$);Tr(m,w,$)}function k1(m,w,$,k,P){dh(m);var D=$1(m,$,w,!1,!1);return $=k??new $,m=ph(m,w,2,!1),P!=null?(D.splice(P,0,$),m.splice(P,0,$.o)):(D.push($),m.push($.o)),$.C()&&b1(m,8),$}function vl(m,w){return m??w}function Rr(m,w,$){return $=$===void 0?0:$,vl(fh(m,w),$)}var wl;function uT(m){switch(typeof m){case"number":return isFinite(m)?m:String(m);case"object":if(m)if(Array.isArray(m)){if(ft(m)&128)return m=Array.prototype.slice.call(m),hh(m),m}else{if(un&&m!=null&&m instanceof Uint8Array)return Ir(m);if(m instanceof Ia){var w=m.V;return w==null?"":typeof w=="string"?w:m.V=Ir(w)}}}return m}function I1(m,w,$,k){if(m!=null){if(Array.isArray(m))m=gh(m,w,$,k!==void 0);else if(xl(m)){var P={},D;for(D in m)P[D]=I1(m[D],w,$,k);m=P}else m=w(m,k);return m}}function gh(m,w,$,k){var P=ft(m);k=k?!!(P&16):void 0,m=Array.prototype.slice.call(m);for(var D=0;D<m.length;D++)m[D]=I1(m[D],w,$,k);return $(P,m),m}function lT(m){return m.ja===ch?m.toJSON():uT(m)}function cT(m,w){m&128&&hh(w)}function N1(m,w,$){if($=$===void 0?yl:$,m!=null){if(un&&m instanceof Uint8Array)return m.length?new Ia(new Uint8Array(m),ka):oh();if(Array.isArray(m)){var k=ft(m);return k&2?m:w&&!(k&32)&&(k&16||k===0)?(Nr(m,k|2),m):(m=gh(m,N1,k&4?yl:$,!0),w=ft(m),w&4&&w&2&&Object.freeze(m),m)}return m.ja===ch?E1(m):m}}function T1(m,w,$,k,P,D,A){if(m=m.h&&m.h[$]){if(k=ft(m),k&2?k=m:(D=Ce(m,E1),yl(k,D),Object.freeze(D),k=D),dh(w),A=k==null?Ta:lh([]),k!=null){for(D=!!k.length,m=0;m<k.length;m++){var B=k[m];D=D&&!(ft(B.o)&2),A[m]=B.o}D=(D?8:0)|1,m=ft(A),(m&D)!==D&&(Object.isFrozen(A)&&(A=Array.prototype.slice.call(A)),Nr(A,m|D)),w.h||(w.h={}),w.h[$]=k}else w.h&&(w.h[$]=void 0);Ea(w,$,A,P)}else Tr(w,$,N1(k,D,A),P)}function E1(m){return ft(m.o)&2||(m=R1(m,!0),lo(m.o,2)),m}function R1(m,w){var $=m.o,k=[];lo(k,16);var P=m.constructor.h;if(P&&k.push(P),P=m.B,P){k.length=$.length,k.fill(void 0,k.length,$.length);var D={};k[k.length-1]=D}ft($)&128&&hh(k),w=w||m.C()?yl:aT,D=m.constructor,wl=k,k=new D(k),wl=void 0,m.R&&(k.R=m.R.slice()),D=!!(ft($)&16);for(var A=P?$.length-1:$.length,B=0;B<A;B++)T1(m,k,B-m.G,$[B],!1,D,w);if(P)for(var W in P)T1(m,k,+W,P[W],!0,D,w);return k}function cn(m,w,$){m==null&&(m=wl),wl=void 0;var k=this.constructor.i||0,P=0<k,D=this.constructor.h,A=!1;if(m==null){m=D?[D]:[];var B=48,W=!0;P&&(k=0,B|=128),Nr(m,B)}else{if(!Array.isArray(m)||D&&D!==m[0])throw Error();var q=B=lo(m,0);if((W=(16&q)!==0)&&((A=(32&q)!==0)||(q|=32)),P){if(128&q)k=0;else if(0<m.length){var se=m[m.length-1];if(xl(se)&&"g"in se){k=0,q|=128,delete se.g;var ve=!0,ge;for(ge in se){ve=!1;break}ve&&m.pop()}}}else if(128&q)throw Error();B!==q&&Nr(m,q)}this.G=(D?0:-1)-k,this.h=void 0,this.o=m;e:{if(D=this.o.length,k=D-1,D&&(D=this.o[k],xl(D))){this.B=D,this.i=k-this.G;break e}w!==void 0&&-1<w?(this.i=Math.max(w,k+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!P&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if($){w=W&&!A&&!0,P=this.i;var le;for(W=0;W<$.length;W++)A=$[W],A<P?(A+=this.G,(k=m[A])?_1(k,w):m[A]=Ta):(le||(le=S1(this)),(k=le[A])?_1(k,w):le[A]=Ta)}}cn.prototype.toJSON=function(){return gh(this.o,lT,cT)},cn.prototype.C=function(){return!!(ft(this.o)&2)};function _1(m,w){if(Array.isArray(m)){var $=ft(m),k=1;!w||$&2||(k|=16),($&k)!==k&&Nr(m,$|k)}}cn.prototype.ja=ch,cn.prototype.toString=function(){return this.o.toString()};function P1(m,w,$){if($){var k={},P;for(P in $){var D=$[P],A=D.ra;A||(k.J=D.xa||D.oa.W,D.ia?(k.aa=L1(D.ia),A=function(B){return function(W,q,se){return B.J(W,q,se,B.aa)}}(k)):D.ka?(k.Z=z1(D.da.P,D.ka),A=function(B){return function(W,q,se){return B.J(W,q,se,B.Z)}}(k)):A=k.J,D.ra=A),A(w,m,D.da),k={J:k.J,aa:k.aa,Z:k.Z}}}iT(w,m)}var bl=Symbol();function A1(m,w,$){return m[bl]||(m[bl]=function(k,P){return w(k,P,$)})}function D1(m){var w=m[bl];if(!w){var $=xh(m);w=function(k,P){return B1(k,P,$)},m[bl]=w}return w}function dT(m){var w=m.ia;if(w)return D1(w);if(w=m.wa)return A1(m.da.P,w,m.ka)}function hT(m){var w=dT(m),$=m.da,k=m.oa.U;return w?function(P,D){return k(P,D,$,w)}:function(P,D){return k(P,D,$)}}function O1(m,w){var $=m[w];return typeof $=="function"&&$.length===0&&($=$(),m[w]=$),Array.isArray($)&&(_a in $||Ra in $||0<$.length&&typeof $[0]=="function")?$:void 0}function F1(m,w,$,k,P,D){w.P=m[0];var A=1;if(m.length>A&&typeof m[A]!="number"){var B=m[A++];$(w,B)}for(;A<m.length;){$=m[A++];for(var W=A+1;W<m.length&&typeof m[W]!="number";)W++;switch(B=m[A++],W-=A,W){case 0:k(w,$,B);break;case 1:(W=O1(m,A))?(A++,P(w,$,B,W)):k(w,$,B,m[A++]);break;case 2:W=A++,W=O1(m,W),P(w,$,B,W,m[A++]);break;case 3:D(w,$,B,m[A++],m[A++],m[A++]);break;case 4:D(w,$,B,m[A++],m[A++],m[A++],m[A++]);break;default:throw Error("unexpected number of binary field arguments: "+W)}}return w}var Cl=Symbol();function L1(m){var w=m[Cl];if(!w){var $=yh(m);w=function(k,P){return M1(k,P,$)},m[Cl]=w}return w}function z1(m,w){var $=m[Cl];return $||($=function(k,P){return P1(k,P,w)},m[Cl]=$),$}var Ra=Symbol();function pT(m,w){m.push(w)}function fT(m,w,$){m.push(w,$.W)}function mT(m,w,$,k){var P=L1(k),D=yh(k).P,A=$.W;m.push(w,function(B,W,q){return A(B,W,q,D,P)})}function gT(m,w,$,k,P,D){var A=z1(k,D),B=$.W;m.push(w,function(W,q,se){return B(W,q,se,k,A)})}function yh(m){var w=m[Ra];return w||(w=F1(m,m[Ra]=[],pT,fT,mT,gT),_a in m&&Ra in m&&(m.length=0),w)}var _a=Symbol();function yT(m,w){m[0]=w}function xT(m,w,$,k){var P=$.U;m[w]=k?function(D,A,B){return P(D,A,B,k)}:P}function vT(m,w,$,k,P){var D=$.U,A=D1(k),B=xh(k).P;m[w]=function(W,q,se){return D(W,q,se,B,A,P)}}function wT(m,w,$,k,P,D,A){var B=$.U,W=A1(k,P,D);m[w]=function(q,se,ve){return B(q,se,ve,k,W,A)}}function xh(m){var w=m[_a];return w||(w=F1(m,m[_a]={},yT,xT,vT,wT),_a in m&&Ra in m&&(m.length=0),w)}function B1(m,w,$){for(;w1(w)&&w.i!=4;){var k=w.l,P=$[k];if(!P){var D=$[0];D&&(D=D[k])&&(P=$[k]=hT(D))}if(!P||!P(w,m,k)){P=w,k=m,D=P.j,ml(P);var A=P;if(!A.ca){if(P=A.h.h-D,A.h.h=D,A=A.h,P==0)P=oh();else{if(D=y1(A,P),A.S&&A.m)P=A.i.subarray(D,D+P);else{A=A.i;var B=D;P=D+P,P=B===P?nh():eT?A.slice(B,P):new Uint8Array(A.subarray(B,P))}P=P.length==0?oh():new Ia(P,ka)}(D=k.R)?D.push(P):k.R=[P]}}}return m}function M1(m,w,$){for(var k=$.length,P=k%2==1,D=P?1:0;D<k;D+=2)(0,$[D+1])(w,m,$[D]);P1(m,w,P?$[0]:void 0)}function Pa(m,w){return{U:m,W:w}}var cr=Pa(function(m,w,$){if(m.i!==5)return!1;m=m.h;var k=m.i,P=m.h,D=k[P],A=k[P+1],B=k[P+2];return k=k[P+3],ao(m,m.h+4),A=(D<<0|A<<8|B<<16|k<<24)>>>0,m=2*(A>>31)+1,D=A>>>23&255,A&=8388607,Tr(w,$,D==255?A?NaN:1/0*m:D==0?m*Math.pow(2,-149)*A:m*Math.pow(2,D-150)*(A+Math.pow(2,23))),!0},function(m,w,$){if(w=fh(w,$),w!=null){uo(m.h,8*$+5),m=m.h;var k=+w;k===0?0<1/k?vt=Qt=0:(Qt=0,vt=2147483648):isNaN(k)?(Qt=0,vt=2147483647):(k=($=0>k?-2147483648:0)?-k:k,34028234663852886e22<k?(Qt=0,vt=($|2139095040)>>>0):11754943508222875e-54>k?(k=Math.round(k/Math.pow(2,-149)),Qt=0,vt=($|k)>>>0):(w=Math.floor(Math.log(k)/Math.LN2),k*=Math.pow(2,-w),k=Math.round(8388608*k),16777216<=k&&++w,Qt=0,vt=($|w+127<<23|k&8388607)>>>0)),$=vt,m.h.push($>>>0&255),m.h.push($>>>8&255),m.h.push($>>>16&255),m.h.push($>>>24&255)}}),bT=Pa(function(m,w,$){if(m.i!==0)return!1;var k=m.h,P=0,D=m=0,A=k.i,B=k.h;do{var W=A[B++];P|=(W&127)<<D,D+=7}while(32>D&&W&128);for(32<D&&(m|=(W&127)>>4),D=3;32>D&&W&128;D+=7)W=A[B++],m|=(W&127)<<D;if(ao(k,B),128>W)k=P>>>0,W=m>>>0,(m=W&2147483648)&&(k=~k+1>>>0,W=~W>>>0,k==0&&(W=W+1>>>0)),k=4294967296*W+(k>>>0);else throw rh();return Tr(w,$,m?-k:k),!0},function(m,w,$){w=lr(w,$),w!=null&&(typeof w=="string"&&a1(w),w!=null&&(uo(m.h,8*$),typeof w=="number"?(m=m.h,s1(w),v1(m,vt,Qt)):($=a1(w),v1(m.h,$.i,$.h))))}),CT=Pa(function(m,w,$){return m.i!==0?!1:(Tr(w,$,Na(m.h)),!0)},function(m,w,$){if(w=lr(w,$),w!=null&&w!=null)if(uo(m.h,8*$),m=m.h,$=w,0<=$)uo(m,$);else{for(w=0;9>w;w++)m.h.push($&127|128),$>>=7;m.h.push(1)}}),V1=Pa(function(m,w,$){if(m.i!==2)return!1;var k=Na(m.h)>>>0;m=m.h;var P=y1(m,k);if(m=m.i,nT){var D=m,A;(A=sh)||(A=sh=new TextDecoder("utf-8",{fatal:!0})),m=P+k,D=P===0&&m===D.length?D:D.subarray(P,m);try{var B=A.decode(D)}catch(ve){if(fl===void 0){try{A.decode(new Uint8Array([128]))}catch{}try{A.decode(new Uint8Array([97])),fl=!0}catch{fl=!1}}throw!fl&&(sh=void 0),ve}}else{B=P,k=B+k,P=[];for(var W=null,q,se;B<k;)q=m[B++],128>q?P.push(q):224>q?B>=k?io():(se=m[B++],194>q||(se&192)!==128?(B--,io()):P.push((q&31)<<6|se&63)):240>q?B>=k-1?io():(se=m[B++],(se&192)!==128||q===224&&160>se||q===237&&160<=se||((D=m[B++])&192)!==128?(B--,io()):P.push((q&15)<<12|(se&63)<<6|D&63)):244>=q?B>=k-2?io():(se=m[B++],(se&192)!==128||(q<<28)+(se-144)>>30||((D=m[B++])&192)!==128||((A=m[B++])&192)!==128?(B--,io()):(q=(q&7)<<18|(se&63)<<12|(D&63)<<6|A&63,q-=65536,P.push((q>>10&1023)+55296,(q&1023)+56320))):io(),8192<=P.length&&(W=d1(W,P),P.length=0);B=d1(W,P)}return Tr(w,$,B),!0},function(m,w,$){if(w=lr(w,$),w!=null){var k=!1;if(k=k===void 0?!1:k,rT){if(k&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(w))throw Error("Found an unpaired surrogate");w=(h1||(h1=new TextEncoder)).encode(w)}else{for(var P=0,D=new Uint8Array(3*w.length),A=0;A<w.length;A++){var B=w.charCodeAt(A);if(128>B)D[P++]=B;else{if(2048>B)D[P++]=B>>6|192;else{if(55296<=B&&57343>=B){if(56319>=B&&A<w.length){var W=w.charCodeAt(++A);if(56320<=W&&57343>=W){B=1024*(B-55296)+W-56320+65536,D[P++]=B>>18|240,D[P++]=B>>12&63|128,D[P++]=B>>6&63|128,D[P++]=B&63|128;continue}else A--}if(k)throw Error("Found an unpaired surrogate");B=65533}D[P++]=B>>12|224,D[P++]=B>>6&63|128}D[P++]=B&63|128}}w=P===D.length?D:D.subarray(0,P)}uo(m.h,8*$+2),uo(m.h,w.length),li(m,m.h.end()),li(m,w)}}),W1=Pa(function(m,w,$,k,P){if(m.i!==2)return!1;w=k1(w,$,k),$=m.h.j,k=Na(m.h)>>>0;var D=m.h.h+k,A=D-$;if(0>=A&&(m.h.j=D,P(w,m,void 0,void 0,void 0),A=D-m.h.h),A)throw Error("Message parsing ended unexpectedly. Expected to read "+(k+" bytes, instead read "+(k-A)+" bytes, either the data ended unexpectedly or the message misreported its own length"));return m.h.h=D,m.h.j=$,!0},function(m,w,$,k,P){if(w=mh(w,k,$),w!=null)for(k=0;k<w.length;k++){var D=m;uo(D.h,8*$+2);var A=D.h.end();li(D,A),A.push(D.i),D=A,P(w[k],m),A=m;var B=D.pop();for(B=A.i+A.h.length()-B;127<B;)D.push(B&127|128),B>>>=7,A.i++;D.push(B),A.i++}});function vh(m){return function(w,$){e:{if(gl.length){var k=gl.pop();k.setOptions($),ih(k.h,w,$),w=k}else w=new uh(w,$);try{var P=xh(m),D=B1(new P.P,w,P);break e}finally{P=w.h,P.i=null,P.m=!1,P.l=0,P.j=0,P.h=0,P.S=!1,w.l=-1,w.i=-1,100>gl.length&&gl.push(w)}D=void 0}return D}}function wh(m){return function(){var w=new oT;M1(this,w,yh(m)),li(w,w.h.end());for(var $=new Uint8Array(w.i),k=w.j,P=k.length,D=0,A=0;A<P;A++){var B=k[A];$.set(B,D),D+=B.length}return w.j=[$],$}}function ci(m){cn.call(this,m)}x(ci,cn);var U1=[ci,1,CT,2,cr,3,V1,4,V1];ci.prototype.l=wh(U1);function bh(m){cn.call(this,m,-1,ST)}x(bh,cn),bh.prototype.addClassification=function(m,w){return k1(this,1,ci,m,w),this};var ST=[1],$T=vh([bh,1,W1,U1]);function Aa(m){cn.call(this,m)}x(Aa,cn);var G1=[Aa,1,cr,2,cr,3,cr,4,cr,5,cr];Aa.prototype.l=wh(G1);function H1(m){cn.call(this,m,-1,kT)}x(H1,cn);var kT=[1],IT=vh([H1,1,W1,G1]);function Sl(m){cn.call(this,m)}x(Sl,cn);var j1=[Sl,1,cr,2,cr,3,cr,4,cr,5,cr,6,bT],NT=vh(j1);Sl.prototype.l=wh(j1);function K1(m,w,$){if($=m.createShader($===0?m.VERTEX_SHADER:m.FRAGMENT_SHADER),m.shaderSource($,w),m.compileShader($),!m.getShaderParameter($,m.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+m.getShaderInfoLog($));return $}function TT(m){return mh(m,ci,1).map(function(w){var $=lr(w,1);return{index:$??0,qa:Rr(w,2),label:lr(w,3)!=null?vl(lr(w,3),""):void 0,displayName:lr(w,4)!=null?vl(lr(w,4),""):void 0}})}function ET(m){return{x:Rr(m,1),y:Rr(m,2),z:Rr(m,3),visibility:fh(m,4)!=null?Rr(m,4):void 0}}function Ch(m){return mh(IT(m),Aa,1).map(ET)}function Sh(m,w){this.i=m,this.h=w,this.m=0}function X1(m,w,$){return RT(m,w),typeof m.h.canvas.transferToImageBitmap=="function"?Promise.resolve(m.h.canvas.transferToImageBitmap()):$?Promise.resolve(m.h.canvas):typeof createImageBitmap=="function"?createImageBitmap(m.h.canvas):(m.j===void 0&&(m.j=document.createElement("canvas")),new Promise(function(k){m.j.height=m.h.canvas.height,m.j.width=m.h.canvas.width,m.j.getContext("2d",{}).drawImage(m.h.canvas,0,0,m.h.canvas.width,m.h.canvas.height),k(m.j)}))}function RT(m,w){var $=m.h;if(m.s===void 0){var k=K1($,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),P=K1($,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),D=$.createProgram();if($.attachShader(D,k),$.attachShader(D,P),$.linkProgram(D),!$.getProgramParameter(D,$.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+$.getProgramInfoLog(D));k=m.s=D,$.useProgram(k),P=$.getUniformLocation(k,"sampler0"),m.l={O:$.getAttribLocation(k,"aVertex"),N:$.getAttribLocation(k,"aTex"),ya:P},m.v=$.createBuffer(),$.bindBuffer($.ARRAY_BUFFER,m.v),$.enableVertexAttribArray(m.l.O),$.vertexAttribPointer(m.l.O,2,$.FLOAT,!1,0,0),$.bufferData($.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),$.STATIC_DRAW),$.bindBuffer($.ARRAY_BUFFER,null),m.u=$.createBuffer(),$.bindBuffer($.ARRAY_BUFFER,m.u),$.enableVertexAttribArray(m.l.N),$.vertexAttribPointer(m.l.N,2,$.FLOAT,!1,0,0),$.bufferData($.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),$.STATIC_DRAW),$.bindBuffer($.ARRAY_BUFFER,null),$.uniform1i(P,0)}k=m.l,$.useProgram(m.s),$.canvas.width=w.width,$.canvas.height=w.height,$.viewport(0,0,w.width,w.height),$.activeTexture($.TEXTURE0),m.i.bindTexture2d(w.glName),$.enableVertexAttribArray(k.O),$.bindBuffer($.ARRAY_BUFFER,m.v),$.vertexAttribPointer(k.O,2,$.FLOAT,!1,0,0),$.enableVertexAttribArray(k.N),$.bindBuffer($.ARRAY_BUFFER,m.u),$.vertexAttribPointer(k.N,2,$.FLOAT,!1,0,0),$.bindFramebuffer($.DRAW_FRAMEBUFFER?$.DRAW_FRAMEBUFFER:$.FRAMEBUFFER,null),$.clearColor(0,0,0,0),$.clear($.COLOR_BUFFER_BIT),$.colorMask(!0,!0,!0,!0),$.drawArrays($.TRIANGLE_FAN,0,4),$.disableVertexAttribArray(k.O),$.disableVertexAttribArray(k.N),$.bindBuffer($.ARRAY_BUFFER,null),m.i.bindTexture2d(0)}function _T(m){this.h=m}var PT=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function AT(m,w){return w+m}function q1(m,w){window[m]=w}function DT(m){var w=document.createElement("script");return w.setAttribute("src",m),w.setAttribute("crossorigin","anonymous"),new Promise(function($){w.addEventListener("load",function(){$()},!1),w.addEventListener("error",function(){$()},!1),document.body.appendChild(w)})}function OT(){return V(function(m){switch(m.h){case 1:return m.s=2,S(m,WebAssembly.instantiate(PT),4);case 4:m.h=3,m.s=0;break;case 2:return m.s=0,m.l=null,m.return(!1);case 3:return m.return(!0)}})}function $h(m){if(this.h=m,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=m&&m.locateFile||AT,typeof window=="object")var w=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")w=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.ha=w,m.options){w=a(Object.keys(m.options));for(var $=w.next();!$.done;$=w.next()){$=$.value;var k=m.options[$].default;k!==void 0&&(this.l[$]=typeof k=="function"?k():k)}}}t=$h.prototype,t.close=function(){return this.j&&this.j.delete(),Promise.resolve()};function FT(m){var w,$,k,P,D,A,B,W,q,se,ve;return V(function(ge){switch(ge.h){case 1:return m.ga?(w=m.h.files===void 0?[]:typeof m.h.files=="function"?m.h.files(m.l):m.h.files,S(ge,OT(),2)):ge.return();case 2:if($=ge.i,typeof window=="object")return q1("createMediapipeSolutionsWasm",{locateFile:m.locateFile}),q1("createMediapipeSolutionsPackedAssets",{locateFile:m.locateFile}),A=w.filter(function(le){return le.data!==void 0}),B=w.filter(function(le){return le.data===void 0}),W=Promise.all(A.map(function(le){var we=$l(m,le.url);if(le.path!==void 0){var Ee=le.path;we=we.then(function(et){return m.overrideFile(Ee,et),Promise.resolve(et)})}return we})),q=Promise.all(B.map(function(le){return le.simd===void 0||le.simd&&$||!le.simd&&!$?DT(m.locateFile(le.url,m.ha)):Promise.resolve()})).then(function(){var le,we,Ee;return V(function(et){if(et.h==1)return le=window.createMediapipeSolutionsWasm,we=window.createMediapipeSolutionsPackedAssets,Ee=m,S(et,le(we),2);Ee.i=et.i,et.h=0})}),se=function(){return V(function(le){return m.h.graph&&m.h.graph.url?le=S(le,$l(m,m.h.graph.url),0):(le.h=0,le=void 0),le})}(),S(ge,Promise.all([q,W,se]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return k=w.filter(function(le){return le.simd===void 0||le.simd&&$||!le.simd&&!$}).map(function(le){return m.locateFile(le.url,m.ha)}),importScripts.apply(null,u(k)),P=m,S(ge,createMediapipeSolutionsWasm(Module),6);case 6:P.i=ge.i,m.m=new OffscreenCanvas(1,1),m.i.canvas=m.m,D=m.i.GL.createContext(m.m,{antialias:!1,alpha:!1,va:typeof WebGL2RenderingContext<"u"?2:1}),m.i.GL.makeContextCurrent(D),ge.h=4;break;case 7:if(m.m=document.createElement("canvas"),ve=m.m.getContext("webgl2",{}),!ve&&(ve=m.m.getContext("webgl",{}),!ve))return alert("Failed to create WebGL canvas context when passing video frame."),ge.return();m.K=ve,m.i.canvas=m.m,m.i.createContext(m.m,!0,!0,{});case 4:m.j=new m.i.SolutionWasm,m.ga=!1,ge.h=0}})}function LT(m){var w,$,k,P,D,A,B,W;return V(function(q){if(q.h==1){if(m.h.graph&&m.h.graph.url&&m.fa===m.h.graph.url)return q.return();if(m.u=!0,!m.h.graph||!m.h.graph.url){q.h=2;return}return m.fa=m.h.graph.url,S(q,$l(m,m.h.graph.url),3)}for(q.h!=2&&(w=q.i,m.j.loadGraph(w)),$=a(Object.keys(m.D)),k=$.next();!k.done;k=$.next())P=k.value,m.j.overrideFile(P,m.D[P]);if(m.D={},m.h.listeners)for(D=a(m.h.listeners),A=D.next();!A.done;A=D.next())B=A.value,VT(m,B);W=m.l,m.l={},m.setOptions(W),q.h=0})}t.reset=function(){var m=this;return V(function(w){m.j&&(m.j.reset(),m.s={},m.v={}),w.h=0})},t.setOptions=function(m,w){var $=this;if(w=w||this.h.options){for(var k=[],P=[],D={},A=a(Object.keys(m)),B=A.next();!B.done;D={X:D.X,Y:D.Y},B=A.next())if(B=B.value,!(B in this.l&&this.l[B]===m[B])){this.l[B]=m[B];var W=w[B];W!==void 0&&(W.onChange&&(D.X=W.onChange,D.Y=m[B],k.push(function(q){return function(){var se;return V(function(ve){if(ve.h==1)return S(ve,q.X(q.Y),2);se=ve.i,se===!0&&($.u=!0),ve.h=0})}}(D))),W.graphOptionXref&&(B=Object.assign({},{calculatorName:"",calculatorIndex:0},W.graphOptionXref,{valueNumber:W.type===1?m[B]:0,valueBoolean:W.type===0?m[B]:!1,valueString:W.type===2?m[B]:""}),P.push(B)))}(k.length!==0||P.length!==0)&&(this.u=!0,this.H=(this.H===void 0?[]:this.H).concat(P),this.F=(this.F===void 0?[]:this.F).concat(k))}};function zT(m){var w,$,k,P,D,A,B;return V(function(W){switch(W.h){case 1:if(!m.u)return W.return();if(!m.F){W.h=2;break}w=a(m.F),$=w.next();case 3:if($.done){W.h=5;break}return k=$.value,S(W,k(),4);case 4:$=w.next(),W.h=3;break;case 5:m.F=void 0;case 2:if(m.H){for(P=new m.i.GraphOptionChangeRequestList,D=a(m.H),A=D.next();!A.done;A=D.next())B=A.value,P.push_back(B);m.j.changeOptions(P),P.delete(),m.H=void 0}m.u=!1,W.h=0}})}t.initialize=function(){var m=this;return V(function(w){return w.h==1?S(w,FT(m),2):w.h!=3?S(w,LT(m),3):S(w,zT(m),0)})};function $l(m,w){var $,k;return V(function(P){return w in m.L?P.return(m.L[w]):($=m.locateFile(w,""),k=fetch($).then(function(D){return D.arrayBuffer()}),m.L[w]=k,P.return(k))})}t.overrideFile=function(m,w){this.j?this.j.overrideFile(m,w):this.D[m]=w},t.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},t.send=function(m,w){var $=this,k,P,D,A,B,W,q,se,ve;return V(function(ge){switch(ge.h){case 1:return $.h.inputs?(k=1e3*(w??performance.now()),S(ge,$.I,2)):ge.return();case 2:return S(ge,$.initialize(),3);case 3:for(P=new $.i.PacketDataList,D=a(Object.keys(m)),A=D.next();!A.done;A=D.next())if(B=A.value,W=$.h.inputs[B]){e:{var le=m[B];switch(W.type){case"video":var we=$.s[W.stream];if(we||(we=new Sh($.i,$.K),$.s[W.stream]=we),we.m===0&&(we.m=we.i.createTexture()),typeof HTMLVideoElement<"u"&&le instanceof HTMLVideoElement)var Ee=le.videoWidth,et=le.videoHeight;else typeof HTMLImageElement<"u"&&le instanceof HTMLImageElement?(Ee=le.naturalWidth,et=le.naturalHeight):(Ee=le.width,et=le.height);et={glName:we.m,width:Ee,height:et},Ee=we.h,Ee.canvas.width=et.width,Ee.canvas.height=et.height,Ee.activeTexture(Ee.TEXTURE0),we.i.bindTexture2d(we.m),Ee.texImage2D(Ee.TEXTURE_2D,0,Ee.RGBA,Ee.RGBA,Ee.UNSIGNED_BYTE,le),we.i.bindTexture2d(0),we=et;break e;case"detections":for(we=$.s[W.stream],we||(we=new _T($.i),$.s[W.stream]=we),we.data||(we.data=new we.h.DetectionListData),we.data.reset(le.length),et=0;et<le.length;++et){Ee=le[et];var Xe=we.data,_t=Xe.setBoundingBox,Un=et,dn=Ee.la,Fe=new Sl;if(Er(Fe,1,dn.sa),Er(Fe,2,dn.ta),Er(Fe,3,dn.height),Er(Fe,4,dn.width),Er(Fe,5,dn.rotation),Tr(Fe,6,dn.pa),dn=Fe.l(),_t.call(Xe,Un,dn),Ee.ea)for(Xe=0;Xe<Ee.ea.length;++Xe){Fe=Ee.ea[Xe],_t=we.data,Un=_t.addNormalizedLandmark,dn=et,Fe=Object.assign({},Fe,{visibility:Fe.visibility?Fe.visibility:0});var Pt=new Aa;Er(Pt,1,Fe.x),Er(Pt,2,Fe.y),Er(Pt,3,Fe.z),Fe.visibility&&Er(Pt,4,Fe.visibility),Fe=Pt.l(),Un.call(_t,dn,Fe)}if(Ee.ba)for(Xe=0;Xe<Ee.ba.length;++Xe)_t=we.data,Un=_t.addClassification,dn=et,Fe=Ee.ba[Xe],Pt=new ci,Er(Pt,2,Fe.qa),Fe.index&&Tr(Pt,1,Fe.index),Fe.label&&Tr(Pt,3,Fe.label),Fe.displayName&&Tr(Pt,4,Fe.displayName),Fe=Pt.l(),Un.call(_t,dn,Fe)}we=we.data;break e;default:we={}}}switch(q=we,se=W.stream,W.type){case"video":P.pushTexture2d(Object.assign({},q,{stream:se,timestamp:k}));break;case"detections":ve=q,ve.stream=se,ve.timestamp=k,P.pushDetectionList(ve);break;default:throw Error("Unknown input config type: '"+W.type+"'")}}return $.j.send(P),S(ge,$.I,4);case 4:P.delete(),ge.h=0}})};function BT(m,w,$){var k,P,D,A,B,W,q,se,ve,ge,le,we,Ee,et;return V(function(Xe){switch(Xe.h){case 1:if(!$)return Xe.return(w);for(k={},P=0,D=a(Object.keys($)),A=D.next();!A.done;A=D.next())B=A.value,W=$[B],typeof W!="string"&&W.type==="texture"&&w[W.stream]!==void 0&&++P;1<P&&(m.M=!1),q=a(Object.keys($)),A=q.next();case 2:if(A.done){Xe.h=4;break}if(se=A.value,ve=$[se],typeof ve=="string")return Ee=k,et=se,S(Xe,MT(m,se,w[ve]),14);if(ge=w[ve.stream],ve.type==="detection_list"){if(ge){for(var _t=ge.getRectList(),Un=ge.getLandmarksList(),dn=ge.getClassificationsList(),Fe=[],Pt=0;Pt<_t.size();++Pt){var bs=NT(_t.get(Pt)),WT=Rr(bs,1),UT=Rr(bs,2),GT=Rr(bs,3),HT=Rr(bs,4),jT=Rr(bs,5,0),kl=void 0;kl=kl===void 0?0:kl,bs={la:{sa:WT,ta:UT,height:GT,width:HT,rotation:jT,pa:vl(lr(bs,6),kl)},ea:Ch(Un.get(Pt)),ba:TT($T(dn.get(Pt)))},Fe.push(bs)}_t=Fe}else _t=[];k[se]=_t,Xe.h=7;break}if(ve.type==="proto_list"){if(ge){for(_t=Array(ge.size()),Un=0;Un<ge.size();Un++)_t[Un]=ge.get(Un);ge.delete()}else _t=[];k[se]=_t,Xe.h=7;break}if(ge===void 0){Xe.h=3;break}if(ve.type==="float_list"){k[se]=ge,Xe.h=7;break}if(ve.type==="proto"){k[se]=ge,Xe.h=7;break}if(ve.type!=="texture")throw Error("Unknown output config type: '"+ve.type+"'");return le=m.v[se],le||(le=new Sh(m.i,m.K),m.v[se]=le),S(Xe,X1(le,ge,m.M),13);case 13:we=Xe.i,k[se]=we;case 7:ve.transform&&k[se]&&(k[se]=ve.transform(k[se])),Xe.h=3;break;case 14:Ee[et]=Xe.i;case 3:A=q.next(),Xe.h=2;break;case 4:return Xe.return(k)}})}function MT(m,w,$){var k;return V(function(P){return typeof $=="number"||$ instanceof Uint8Array||$ instanceof m.i.Uint8BlobList?P.return($):$ instanceof m.i.Texture2dDataOut?(k=m.v[w],k||(k=new Sh(m.i,m.K),m.v[w]=k),P.return(X1(k,$,m.M))):P.return(void 0)})}function VT(m,w){for(var $=w.name||"$",k=[].concat(u(w.wants)),P=new m.i.StringList,D=a(w.wants),A=D.next();!A.done;A=D.next())P.push_back(A.value);D=m.i.PacketListener.implement({onResults:function(B){for(var W={},q=0;q<w.wants.length;++q)W[k[q]]=B.get(q);var se=m.listeners[$];se&&(m.I=BT(m,W,w.outs).then(function(ve){ve=se(ve);for(var ge=0;ge<w.wants.length;++ge){var le=W[k[ge]];typeof le=="object"&&le.hasOwnProperty&&le.hasOwnProperty("delete")&&le.delete()}ve&&(m.I=ve)}))}}),m.j.attachMultiListener(P,D),P.delete()}t.onResults=function(m,w){this.listeners[w||"$"]=m},ne("Solution",$h),ne("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"});function Y1(m){switch(m===void 0&&(m=0),m){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function Q1(m){var w=this;m=m||{},this.h=new $h({locateFile:m.locateFile,files:function($){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:Y1($.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:Ch},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:Ch},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window!="object"||window.navigator===void 0?!1:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function($){var k,P,D;return V(function(A){return A.h==1?(k=Y1($),P="third_party/mediapipe/modules/pose_landmark/"+k,S(A,$l(w.h,k),2)):(D=A.i,w.h.overrideFile(P,D),A.return(!0))})}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}t=Q1.prototype,t.reset=function(){this.h.reset()},t.close=function(){return this.h.close(),Promise.resolve()},t.onResults=function(m){this.h.onResults(m)},t.initialize=function(){var m=this;return V(function(w){return S(w,m.h.initialize(),0)})},t.send=function(m,w){var $=this;return V(function(k){return S(k,$.h.send(m,w),0)})},t.setOptions=function(m){this.h.setOptions(m)},ne("Pose",Q1),ne("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),ne("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),ne("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),ne("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),ne("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),ne("VERSION","0.5.1675469404")}).call(Lr);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $3=1e-7,k3=1e-4;class kS{constructor(e,n){this.backend=e,this.dataMover=n,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,n){this.dataIdsCount++,this.data.set(e,n)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class sg{refCount(e){return hn("refCount")}incRef(e){return hn("incRef")}timerAvailable(){return!0}time(e){return hn("time")}read(e){return hn("read")}readSync(e){return hn("readSync")}readToGPU(e,n){return hn("readToGPU")}numDataIds(){return hn("numDataIds")}disposeData(e,n){return hn("disposeData")}write(e,n,r){return hn("write")}move(e,n,r,s,o){return hn("move")}createTensorFromGPUData(e,n,r){return hn("createTensorFromGPUData")}memory(){return hn("memory")}floatPrecision(){return hn("floatPrecision")}epsilon(){return this.floatPrecision()===32?$3:k3}dispose(){return hn("dispose")}}function hn(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vc(t,e,n){return Math.max(t,Math.min(e,n))}function og(t){return t%2===0?t:t+1}function Wa(t,e,n){const r=t[e];t[e]=t[n],t[n]=r}function IS(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function T(t,e){if(!t)throw new Error(typeof e=="string"?e:e())}function kn(t,e,n=""){T(ze(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function ca(t){T(t!=null,()=>"The input to the tensor constructor must be a non-null value.")}function U(t){if(t.length===0)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function aw(t){return t.length===0}function I3(t,e){if(t===e)return!0;if(t==null||e==null||t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==null&&e[n]!==null&&t[n]!==e[n])return!1;return!0}function ze(t,e){if(t===e)return!0;if(t==null||e==null||t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function qi(t){return t%1===0}function yf(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function zi(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function uw(t,e=s=>0,n,r){return new Promise((s,o)=>{let i=0;const a=()=>{if(t()){s();return}i++;const u=e(i);if(n!=null&&i>=n){o();return}r!=null?r(a,u):setTimeout(a,u)};a()})}function NS(t,e){let n=1,r=-1;for(let o=0;o<t.length;++o)if(t[o]>=0)n*=t[o];else if(t[o]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${o}`);r=o}else if(t[o]<0)throw Error(`Shapes can not be < 0. Found ${t[o]} at dim ${o}`);if(r===-1){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(n===0)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}function Je(t,e){const n=e.length;return t=t==null?e.map((r,s)=>s):[].concat(t),T(t.every(r=>r>=-n&&r<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`),T(t.every(r=>qi(r)),()=>`All values in axis param must be integers but got axis ${t}`),t.map(r=>r<0?n+r:r)}function eo(t,e){const n=[],r=[],s=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||s?null:Je(e,t).sort();let i=0;for(let a=0;a<t.length;++a){if(o!=null){if(o[i]===a&&t[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${t[a]}' is not 1`);(o[i]==null||o[i]>a)&&t[a]===1&&(n.push(t[a]),r.push(a)),o[i]<=a&&i++}t[a]!==1&&(n.push(t[a]),r.push(a))}return{newShape:n,keptDims:r}}function Ur(t,e){return xt(t,e)}function xt(t,e){let n=null;if(t==null||t==="float32")n=new Float32Array(e);else if(t==="int32")n=new Int32Array(e);else if(t==="bool")n=new Uint8Array(e);else if(t==="string")n=new Array(e);else throw new Error(`Unknown data type ${t}`);return n}function N3(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function T3(t){return t==="bool"||t==="complex64"||t==="float32"||t==="int32"||t==="string"}function TS(t,e){return!(e==="complex64"||e==="float32"&&t!=="complex64"||e==="int32"&&t!=="float32"&&t!=="complex64"||e==="bool"&&t==="bool")}function Wc(t){if(t==="float32"||t==="int32")return 4;if(t==="complex64")return 8;if(t==="bool")return 1;throw new Error(`Unknown dtype ${t}`)}function E3(t){if(t==null)return 0;let e=0;return t.forEach(n=>e+=n.length),e}function el(t){return typeof t=="string"||t instanceof String}function R3(t){return typeof t=="boolean"}function _3(t){return typeof t=="number"}function da(t){return Array.isArray(t)?da(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":_3(t)?"float32":el(t)?"string":R3(t)?"bool":"float32"}function xf(t){return!!(t&&t.constructor&&t.call&&t.apply)}function vf(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function lt(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function ES(t,e,n,r=!1){const s=new Array;if(e.length===1){const o=e[0]*(r?2:1);for(let i=0;i<o;i++)s[i]=n[t+i]}else{const o=e[0],i=e.slice(1),a=i.reduce((u,l)=>u*l)*(r?2:1);for(let u=0;u<o;u++)s[u]=ES(t+u*a,i,n,r)}return s}function wf(t,e,n=!1){if(t.length===0)return e[0];const r=t.reduce((s,o)=>s*o)*(n?2:1);if(r===0)return[];if(r!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}${n?" for a complex tensor":""}.`);return ES(0,t,e,n)}function Qh(t,e){if(Array.isArray(t))return t;if(e==="float32")return t instanceof Float32Array?t:new Float32Array(t);if(e==="int32")return t instanceof Int32Array?t:new Int32Array(t);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(t));throw new Error(`Unknown dtype ${e}`)}function RS(t,e){const n=as(t,e);for(let r=0;r<n.length;r++)n[r]=1;return n}function as(t,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(t);if(e==="int32")return new Int32Array(t);if(e==="bool")return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function Mn(t){t.forEach(e=>{T(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function bf(t,e,n){if(e===0)return 0;if(e===1)return t[0];let r=t[t.length-1];for(let s=0;s<t.length-1;++s)r+=n[s]*t[s];return r}function ig(t,e,n){if(e===0)return[];if(e===1)return[t];const r=new Array(e);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(t/n[s]),t-=r[s]*n[s];return r[r.length-1]=t,r}function Bo(t){return t&&t.then&&typeof t.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lw="tfjsflags";class P3{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=A3,this.populateURLFlags()}setPlatform(e,n){this.platform!=null&&(M().getBool("IS_TEST")||M().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=n}registerFlag(e,n,r){if(this.flagRegistry[e]={evaluationFn:n,setHook:r},this.urlFlags[e]!=null){const s=this.urlFlags[e];M().getBool("IS_TEST")||M().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const n=this.evaluateFlag(e);if(Bo(n))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=n,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,n){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=n,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(n)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);lw in e&&e[lw].split(",").forEach(r=>{const[s,o]=r.split(":");this.urlFlags[s]=O3(s,o)})}}function A3(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...r)=>(D3(e,r[0],r[1]),r.join("="))),e}function D3(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}function O3(t,e){const n=e.toLowerCase();return n==="true"||n==="false"?n==="true":`${+n}`===n?+n:e}function M(){return _S}let _S=null;function F3(t){_S=t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Zh;function PS(){if(Zh==null){let t;if(typeof window<"u")t=window;else if(typeof global<"u")t=global;else if(typeof process<"u")t=process;else if(typeof self<"u")t=self;else throw new Error("Could not find a global object");Zh=t}return Zh}function L3(){const t=PS();return t._tfGlobals==null&&(t._tfGlobals=new Map),t._tfGlobals}function ag(t,e){const n=L3();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}const ug="Abs",lg="Acos",cg="Acosh",Td="Add",dg="AddN",hg="All",pg="Any",fg="ArgMax",mg="ArgMin",gg="Asin",yg="Asinh",xg="Atan",vg="Atanh",wg="Atan2",bg="AvgPool",AS="AvgPoolGrad",Cg="AvgPool3D",DS="AvgPool3DGrad",Sg="BatchMatMul",$g="BatchToSpaceND",kg="Bincount",OS="BitwiseAnd",Ig="BroadcastArgs",Ed="Cast",Ng="Ceil",Tg="ClipByValue",Eg="Complex",Rg="ComplexAbs",_g="Concat",Pg="Conv2D",Ag="Conv2DBackpropFilter",Dg="Conv2DBackpropInput",Og="Conv3D",FS="Conv3DBackpropFilterV2",Fg="Conv3DBackpropInputV2",Lg="Cos",zg="Cosh",Bg="Cumprod",Mg="Cumsum",Vg="CropAndResize",Wg="DenseBincount",Ug="DepthToSpace",Gg="DepthwiseConv2dNative",Hg="DepthwiseConv2dNativeBackpropFilter",jg="DepthwiseConv2dNativeBackpropInput",Kg="Diag",Xg="Dilation2D",z3="Dilation2DBackpropInput",B3="Dilation2DBackpropFilter",LS="Draw",qg="RealDiv",Yg="Einsum",Qg="Elu",zS="EluGrad",Zg="Erf",Jg="Equal",ey="Exp",ty="ExpandDims",ny="Expm1",ry="FFT",sy="Fill",oy="FlipLeftRight",iy="Floor",ay="FloorDiv",uy="FusedBatchNorm",ly="GatherV2",cy="GatherNd",dy="Greater",hy="GreaterEqual",Rd="Identity",py="IFFT",fy="Imag",my="IsFinite",gy="IsInf",yy="IsNan",xy="LeakyRelu",vy="Less",wy="LessEqual",by="LinSpace",Cy="Log",Sy="Log1p",$y="LogicalAnd",ky="LogicalNot",Iy="LogicalOr",Ny="LRN",BS="LRNGrad",Ty="Max",Ey="Maximum",Ry="MaxPool",MS="MaxPoolGrad",_y="MaxPool3D",VS="MaxPool3DGrad",Py="MaxPoolWithArgmax",Ay="Mean",Dy="Min",Oy="Minimum",Fy="MirrorPad",Ly="Mod",zy="Multinomial",By="Multiply",My="Neg",Vy="NotEqual",Wy="NonMaxSuppressionV3",WS="NonMaxSuppressionV4",Uy="NonMaxSuppressionV5",Gy="OnesLike",Hy="OneHot",jy="Pack",Ky="PadV2",Xy="Pow",qy="Prelu",Yy="Prod",US="RaggedGather",GS="RaggedRange",HS="RaggedTensorToTensor",Qy="Range",Zy="Real",Jy="Reciprocal",ex="Relu",tx="Reshape",nx="ResizeNearestNeighbor",jS="ResizeNearestNeighborGrad",rx="ResizeBilinear",KS="ResizeBilinearGrad",sx="Relu6",ox="Reverse",ix="Round",ax="Rsqrt",ux="ScatterNd",lx="TensorScatterUpdate",cx="SearchSorted",dx="Select",hx="Selu",px="Slice",fx="Sin",mx="Sinh",gx="Sign",yx="Sigmoid",xx="Softplus",vx="Sqrt",wx="Sum",bx="SpaceToBatchND",Cx="SplitV",Sx="Softmax",XS="SparseFillEmptyRows",qS="SparseReshape",$x="SparseSegmentMean",kx="SparseSegmentSum",Ix="SparseToDense",Nx="SquaredDifference",YS="Square",QS="StaticRegexReplace",Tx="StridedSlice",Ex="StringNGrams",ZS="StringSplit",JS="StringToHashBucketFast",Rx="Sub",_x="Tan",Px="Tanh",_d="Tile",Ax="TopK",Dx="Transform",cu="Transpose",e$="Unique",Ox="Unpack",Fx="UnsortedSegmentSum",Lx="ZerosLike",zx="Step",Uc="FromPixels",Bx="RotateWithOffset",Gc="_FusedMatMul",Hc="FusedConv2D",jc="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xr(...t){M().getBool("IS_TEST")||M().getBool("PROD")||console.warn(...t)}function M3(...t){M().getBool("IS_TEST")||M().getBool("PROD")||console.log(...t)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kc=ag("kernelRegistry",()=>new Map),V3=ag("gradRegistry",()=>new Map);function Xc(t,e){const n=n$(t,e);return Kc.get(n)}function cw(t){return V3.get(t)}function dw(t){const e=Kc.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[o,i]=s,[a]=o.split("_");a===t&&n.push(i)}return n}function t$(t){const{kernelName:e,backendName:n}=t,r=n$(e,n);Kc.has(r)&&xr(`The kernel '${e}' for backend '${n}' is already registered`),Kc.set(r,t)}function n$(t,e){return`${e}_${t}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r$(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}var s$=Qe,qn=null;try{qn=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Qe(t,e,n){this.low=t|0,this.high=e|0,this.unsigned=!!n}Qe.prototype.__isLong__;Object.defineProperty(Qe.prototype,"__isLong__",{value:!0});function In(t){return(t&&t.__isLong__)===!0}Qe.isLong=In;var hw={},pw={};function Yo(t,e){var n,r,s;return e?(t>>>=0,(s=0<=t&&t<256)&&(r=pw[t],r)?r:(n=Ze(t,(t|0)<0?-1:0,!0),s&&(pw[t]=n),n)):(t|=0,(s=-128<=t&&t<128)&&(r=hw[t],r)?r:(n=Ze(t,t<0?-1:0,!1),s&&(hw[t]=n),n))}Qe.fromInt=Yo;function Yn(t,e){if(isNaN(t))return e?ko:Qn;if(e){if(t<0)return ko;if(t>=o$)return u$}else{if(t<=-mw)return vn;if(t+1>=mw)return a$}return t<0?Yn(-t,e).neg():Ze(t%Yi|0,t/Yi|0,e)}Qe.fromNumber=Yn;function Ze(t,e,n){return new Qe(t,e,n)}Qe.fromBits=Ze;var qc=Math.pow;function Mx(t,e,n){if(t.length===0)throw Error("empty string");if(t==="NaN"||t==="Infinity"||t==="+Infinity"||t==="-Infinity")return Qn;if(typeof e=="number"?(n=e,e=!1):e=!!e,n=n||10,n<2||36<n)throw RangeError("radix");var r;if((r=t.indexOf("-"))>0)throw Error("interior hyphen");if(r===0)return Mx(t.substring(1),e,n).neg();for(var s=Yn(qc(n,8)),o=Qn,i=0;i<t.length;i+=8){var a=Math.min(8,t.length-i),u=parseInt(t.substring(i,i+a),n);if(a<8){var l=Yn(qc(n,a));o=o.mul(l).add(Yn(u))}else o=o.mul(s),o=o.add(Yn(u))}return o.unsigned=e,o}Qe.fromString=Mx;function Sr(t,e){return typeof t=="number"?Yn(t,e):typeof t=="string"?Mx(t,e):Ze(t.low,t.high,typeof e=="boolean"?e:t.unsigned)}Qe.fromValue=Sr;var fw=65536,W3=1<<24,Yi=fw*fw,o$=Yi*Yi,mw=o$/2,gw=Yo(W3),Qn=Yo(0);Qe.ZERO=Qn;var ko=Yo(0,!0);Qe.UZERO=ko;var _i=Yo(1);Qe.ONE=_i;var i$=Yo(1,!0);Qe.UONE=i$;var Cf=Yo(-1);Qe.NEG_ONE=Cf;var a$=Ze(-1,2147483647,!1);Qe.MAX_VALUE=a$;var u$=Ze(-1,-1,!0);Qe.MAX_UNSIGNED_VALUE=u$;var vn=Ze(0,-2147483648,!1);Qe.MIN_VALUE=vn;var oe=Qe.prototype;oe.toInt=function(){return this.unsigned?this.low>>>0:this.low};oe.toNumber=function(){return this.unsigned?(this.high>>>0)*Yi+(this.low>>>0):this.high*Yi+(this.low>>>0)};oe.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(vn)){var n=Yn(e),r=this.div(n),s=r.mul(n).sub(this);return r.toString(e)+s.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var o=Yn(qc(e,6),this.unsigned),i=this,a="";;){var u=i.div(o),l=i.sub(u.mul(o)).toInt()>>>0,c=l.toString(e);if(i=u,i.isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}};oe.getHighBits=function(){return this.high};oe.getHighBitsUnsigned=function(){return this.high>>>0};oe.getLowBits=function(){return this.low};oe.getLowBitsUnsigned=function(){return this.low>>>0};oe.getNumBitsAbs=function(){if(this.isNegative())return this.eq(vn)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,n=31;n>0&&!(e&1<<n);n--);return this.high!=0?n+33:n+1};oe.isZero=function(){return this.high===0&&this.low===0};oe.eqz=oe.isZero;oe.isNegative=function(){return!this.unsigned&&this.high<0};oe.isPositive=function(){return this.unsigned||this.high>=0};oe.isOdd=function(){return(this.low&1)===1};oe.isEven=function(){return(this.low&1)===0};oe.equals=function(e){return In(e)||(e=Sr(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};oe.eq=oe.equals;oe.notEquals=function(e){return!this.eq(e)};oe.neq=oe.notEquals;oe.ne=oe.notEquals;oe.lessThan=function(e){return this.comp(e)<0};oe.lt=oe.lessThan;oe.lessThanOrEqual=function(e){return this.comp(e)<=0};oe.lte=oe.lessThanOrEqual;oe.le=oe.lessThanOrEqual;oe.greaterThan=function(e){return this.comp(e)>0};oe.gt=oe.greaterThan;oe.greaterThanOrEqual=function(e){return this.comp(e)>=0};oe.gte=oe.greaterThanOrEqual;oe.ge=oe.greaterThanOrEqual;oe.compare=function(e){if(In(e)||(e=Sr(e)),this.eq(e))return 0;var n=this.isNegative(),r=e.isNegative();return n&&!r?-1:!n&&r?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};oe.comp=oe.compare;oe.negate=function(){return!this.unsigned&&this.eq(vn)?vn:this.not().add(_i)};oe.neg=oe.negate;oe.add=function(e){In(e)||(e=Sr(e));var n=this.high>>>16,r=this.high&65535,s=this.low>>>16,o=this.low&65535,i=e.high>>>16,a=e.high&65535,u=e.low>>>16,l=e.low&65535,c=0,d=0,h=0,p=0;return p+=o+l,h+=p>>>16,p&=65535,h+=s+u,d+=h>>>16,h&=65535,d+=r+a,c+=d>>>16,d&=65535,c+=n+i,c&=65535,Ze(h<<16|p,c<<16|d,this.unsigned)};oe.subtract=function(e){return In(e)||(e=Sr(e)),this.add(e.neg())};oe.sub=oe.subtract;oe.multiply=function(e){if(this.isZero())return Qn;if(In(e)||(e=Sr(e)),qn){var n=qn.mul(this.low,this.high,e.low,e.high);return Ze(n,qn.get_high(),this.unsigned)}if(e.isZero())return Qn;if(this.eq(vn))return e.isOdd()?vn:Qn;if(e.eq(vn))return this.isOdd()?vn:Qn;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(gw)&&e.lt(gw))return Yn(this.toNumber()*e.toNumber(),this.unsigned);var r=this.high>>>16,s=this.high&65535,o=this.low>>>16,i=this.low&65535,a=e.high>>>16,u=e.high&65535,l=e.low>>>16,c=e.low&65535,d=0,h=0,p=0,f=0;return f+=i*c,p+=f>>>16,f&=65535,p+=o*c,h+=p>>>16,p&=65535,p+=i*l,h+=p>>>16,p&=65535,h+=s*c,d+=h>>>16,h&=65535,h+=o*l,d+=h>>>16,h&=65535,h+=i*u,d+=h>>>16,h&=65535,d+=r*c+s*l+o*u+i*a,d&=65535,Ze(p<<16|f,d<<16|h,this.unsigned)};oe.mul=oe.multiply;oe.divide=function(e){if(In(e)||(e=Sr(e)),e.isZero())throw Error("division by zero");if(qn){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var n=(this.unsigned?qn.div_u:qn.div_s)(this.low,this.high,e.low,e.high);return Ze(n,qn.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?ko:Qn;var r,s,o;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return ko;if(e.gt(this.shru(1)))return i$;o=ko}else{if(this.eq(vn)){if(e.eq(_i)||e.eq(Cf))return vn;if(e.eq(vn))return _i;var i=this.shr(1);return r=i.div(e).shl(1),r.eq(Qn)?e.isNegative()?_i:Cf:(s=this.sub(e.mul(r)),o=r.add(s.div(e)),o)}else if(e.eq(vn))return this.unsigned?ko:Qn;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();o=Qn}for(s=this;s.gte(e);){r=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(r)/Math.LN2),u=a<=48?1:qc(2,a-48),l=Yn(r),c=l.mul(e);c.isNegative()||c.gt(s);)r-=u,l=Yn(r,this.unsigned),c=l.mul(e);l.isZero()&&(l=_i),o=o.add(l),s=s.sub(c)}return o};oe.div=oe.divide;oe.modulo=function(e){if(In(e)||(e=Sr(e)),qn){var n=(this.unsigned?qn.rem_u:qn.rem_s)(this.low,this.high,e.low,e.high);return Ze(n,qn.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};oe.mod=oe.modulo;oe.rem=oe.modulo;oe.not=function(){return Ze(~this.low,~this.high,this.unsigned)};oe.and=function(e){return In(e)||(e=Sr(e)),Ze(this.low&e.low,this.high&e.high,this.unsigned)};oe.or=function(e){return In(e)||(e=Sr(e)),Ze(this.low|e.low,this.high|e.high,this.unsigned)};oe.xor=function(e){return In(e)||(e=Sr(e)),Ze(this.low^e.low,this.high^e.high,this.unsigned)};oe.shiftLeft=function(e){return In(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ze(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Ze(0,this.low<<e-32,this.unsigned)};oe.shl=oe.shiftLeft;oe.shiftRight=function(e){return In(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ze(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Ze(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};oe.shr=oe.shiftRight;oe.shiftRightUnsigned=function(e){if(In(e)&&(e=e.toInt()),e&=63,e===0)return this;var n=this.high;if(e<32){var r=this.low;return Ze(r>>>e|n<<32-e,n>>>e,this.unsigned)}else return e===32?Ze(n,0,this.unsigned):Ze(n>>>e-32,0,this.unsigned)};oe.shru=oe.shiftRightUnsigned;oe.shr_u=oe.shiftRightUnsigned;oe.toSigned=function(){return this.unsigned?Ze(this.low,this.high,!1):this};oe.toUnsigned=function(){return this.unsigned?this:Ze(this.low,this.high,!0)};oe.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};oe.toBytesLE=function(){var e=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};oe.toBytesBE=function(){var e=this.high,n=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};Qe.fromBytes=function(e,n,r){return r?Qe.fromBytesLE(e,n):Qe.fromBytesBE(e,n)};Qe.fromBytesLE=function(e,n){return new Qe(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,n)};Qe.fromBytesBE=function(e,n){return new Qe(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],n)};const l$=um(s$),U3=KT({__proto__:null,default:l$},[s$]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yo=l$||U3;function Pd(t){return yo.fromString(t,!0,16)}const c$=Pd("c3a5c85c97cb3127"),mo=Pd("b492b66fbe98f273"),Ht=Pd("9ae16a3b2f90404f");function Sf(t){return t.xor(t.shru(47))}function d$(t,e,n){const r=t.slice(e,e+n);return yo.fromBytes(Array.from(r),!0,!0)}function Ke(t,e){return d$(t,e,8)}function yw(t,e){return d$(t,e,4)}function bt(t,e){return e===0?t:t.shru(e).or(t.shl(64-e))}function Vs(t,e,n=Pd("9ddfea08eb382d69")){let r=t.xor(e).mul(n);r=r.xor(r.shru(47));let s=e.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function G3(t,e,n,r,s,o){s=s.add(t),o=bt(o.add(s).add(r),21);const i=s;return s=s.add(e),s=s.add(n),o=o.add(bt(s,44)),[s.add(r),o.add(i)]}function Ul(t,e,n,r){return G3(Ke(t,e),Ke(t,e+8),Ke(t,e+16),Ke(t,e+24),n,r)}function H3(t,e=t.length){if(e>=8){const n=Ht.add(e*2),r=Ke(t,0).add(Ht),s=Ke(t,e-8),o=bt(s,37).mul(n).add(r),i=bt(r,25).add(s).mul(n);return Vs(o,i,n)}if(e>=4){const n=Ht.add(e*2),r=yw(t,0);return Vs(r.shl(3).add(e),yw(t,e-4),n)}if(e>0){const n=t[0],r=t[e>>1],s=t[e-1],o=n+(r<<8),i=e+(s<<2);return Sf(Ht.mul(o).xor(c$.mul(i))).mul(Ht)}return Ht}function j3(t,e=t.length){const n=Ht.add(e*2),r=Ke(t,0).mul(mo),s=Ke(t,8),o=Ke(t,e-8).mul(n),i=Ke(t,e-16).mul(Ht);return Vs(bt(r.add(s),43).add(bt(o,30)).add(i),r.add(bt(s.add(Ht),18)).add(o),n)}function K3(t,e=t.length){const n=Ht.add(e*2),r=Ke(t,0).mul(Ht),s=Ke(t,8),o=Ke(t,e-8).mul(n),i=Ke(t,e-16).mul(Ht),a=bt(r.add(s),43).add(bt(o,30)).add(i),u=Vs(a,r.add(bt(s.add(Ht),18)).add(o),n),l=Ke(t,16).mul(n),c=Ke(t,24),d=a.add(Ke(t,e-32)).mul(n),h=u.add(Ke(t,e-24)).mul(n);return Vs(bt(l.add(c),43).add(bt(d,30)).add(h),l.add(bt(c.add(r),18)).add(d),n)}function X3(t,e=t.length){const n=yo.fromNumber(81,!0);if(e<=32)return e<=16?H3(t,e):j3(t,e);if(e<=64)return K3(t,e);let r=n,s=n.mul(mo).add(113),o=Sf(s.mul(Ht).add(113)).mul(Ht),i=[yo.UZERO,yo.UZERO],a=[yo.UZERO,yo.UZERO];r=r.mul(Ht).add(Ke(t,0));let u=0;const l=(e-1>>6)*64,c=l+(e-1&63)-63;do r=bt(r.add(s).add(i[0]).add(Ke(t,u+8)),37).mul(mo),s=bt(s.add(i[1]).add(Ke(t,u+48)),42).mul(mo),r=r.xor(a[1]),s=s.add(i[0]).add(Ke(t,u+40)),o=bt(o.add(a[0]),33).mul(mo),i=Ul(t,u,i[1].mul(mo),r.add(a[0])),a=Ul(t,u+32,o.add(a[1]),s.add(Ke(t,u+16))),[o,r]=[r,o],u+=64;while(u!==l);const d=mo.add(o.and(255).shl(1));return u=c,a[0]=a[0].add(e-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),r=bt(r.add(s).add(i[0]).add(Ke(t,u+8)),37).mul(d),s=bt(s.add(i[1]).add(Ke(t,u+48)),42).mul(d),r=r.xor(a[1].mul(9)),s=s.add(i[0].mul(9).add(Ke(t,u+40))),o=bt(o.add(a[0]),33).mul(d),i=Ul(t,u,i[1].mul(d),r.add(a[0])),a=Ul(t,u+32,o.add(a[1]),s.add(Ke(t,u+16))),[o,r]=[r,o],Vs(Vs(i[0],a[0],d).add(Sf(s).mul(c$)).add(o),Vs(i[1],a[1],d).add(r),d)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ha(t,e){return e==="string"?Ws(t):Ad([t],e)}function q3(t,e){return t instanceof Float32Array&&e==="float32"||t instanceof Int32Array&&e==="int32"||t instanceof Uint8Array&&e==="bool"}function Ad(t,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=ls(t)),M().getBool("DEBUG")&&N3(t,e),q3(t,e))return t;if(e==null||e==="float32"||e==="complex64")return new Float32Array(t);if(e==="int32")return new Int32Array(t);if(e==="bool"){const n=new Uint8Array(t.length);for(let r=0;r<n.length;++r)Math.round(t[r])!==0&&(n[r]=1);return n}else throw new Error(`Unknown data type ${e}`)}function fr(){return M().platform.now()}function Ws(t,e="utf-8"){return e=e||"utf-8",M().platform.encode(t,e)}function us(t,e="utf-8"){return e=e||"utf-8",M().platform.decode(t,e)}function sr(t){return M().platform.isTypedArray!=null?M().platform.isTypedArray(t):r$(t)}function ls(t,e=[],n=!1){if(e==null&&(e=[]),typeof t=="boolean"||typeof t=="number"||typeof t=="string"||Bo(t)||t==null||sr(t)&&n)e.push(t);else if(Array.isArray(t)||sr(t))for(let r=0;r<t.length;++r)ls(t[r],e,n);else{let r=-1;for(const s of Object.keys(t))/^([1-9]+[0-9]*|0)$/.test(s)&&(r=Math.max(r,Number(s)));for(let s=0;s<=r;s++)ls(t[s],e,n)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Y3{constructor(e,n){this.backendTimer=e,this.logger=n,n==null&&(this.logger=new Z3)}profileKernel(e,n,r){let s;const o=()=>{s=r()};let i;const a=fr();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(o);else{o();for(const l of s)l.dataSync();i=Promise.resolve({kernelMs:fr()-a})}if(M().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<s.length;l++){const c=s[l];c.data().then(d=>{Q3(d,c.dtype,e)})}return{kernelName:e,outputs:s,inputs:n,timeMs:i.then(l=>l.kernelMs),extraInfo:i.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:n,outputs:r,timeMs:s,inputs:o,extraInfo:i}=e;r.forEach(a=>{Promise.all([a.data(),s,i]).then(u=>{this.logger.logKernelProfile(n,a,u[0],u[1],o,u[2])})})}}function Q3(t,e,n){if(e!=="float32")return!1;for(let r=0;r<t.length;r++){const s=t[r];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class Z3{logKernelProfile(e,n,r,s,o,i){const a=typeof s=="number"?zi(`${s}ms`,9):s.error,u=zi(e,25),l=n.rank,c=n.size,d=zi(n.shape.toString(),14);let h="";for(const p in o){const f=o[p];if(f!=null){const y=f.shape||n.shape,x=y.length;h+=`${p}: ${x}D ${x>0?y:""} `}}console.log(`%c${u}	%c${a}	%c${l}D ${d}	%c${c}	%c${h}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J3(t,e,n){const r={},s={};for(let u=0;u<e.length;u++)r[e[u].id]=!0;for(let u=0;u<t.length;u++){const l=t[u],c=l.inputs;for(const d in c){const h=c[d];let p=!1;for(let f=0;f<e.length;f++)if(r[h.id]){l.outputs.forEach(y=>r[y.id]=!0),p=!0,s[l.id]=!0;break}if(p)break}}const o={};o[n.id]=!0;const i={};for(let u=t.length-1;u>=0;u--){const l=t[u],c=l.inputs;for(let d=0;d<l.outputs.length;d++)if(o[l.outputs[d].id]){for(const h in c)o[c[h].id]=!0,i[l.id]=!0;break}}const a=[];for(let u=0;u<t.length;u++){const l=t[u];if(s[l.id]&&i[l.id]){const c={};for(const h in l.inputs){const p=l.inputs[h];r[p.id]&&(c[h]=p)}const d=Object.assign({},l);d.inputs=c,d.outputs=l.outputs,a.push(d)}}return a}function e_(t,e,n,r){for(let s=e.length-1;s>=0;s--){const o=e[s],i=[];if(o.outputs.forEach(u=>{const l=t[u.id];l!=null?i.push(l):i.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const a=o.gradient(i);for(const u in o.inputs){if(!(u in a))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(a)}.`);const l=n(()=>a[u]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${l.dtype}'`);const c=o.inputs[u];if(!ze(l.shape,c.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${u}' has shape '${l.shape}', which does not match the shape of the input '${c.shape}'`);if(t[c.id]==null)t[c.id]=l;else{const d=t[c.id];t[c.id]=r(d,l),d.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xw=20,Ua=3,Jh=7;function t_(t,e,n,r){const s=lt(e),o=n_(t,e,n,s),i=e.length,a=hc(t,e,n,s,o),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(a.map(l=>"    "+l).join(`
`)),u.join(`
`)}function n_(t,e,n,r){const s=U(e),o=r[r.length-1],i=new Array(o).fill(0),a=e.length,u=n==="complex64"?Qa(t):t;if(a>1)for(let l=0;l<s/o;l++){const c=l*o;for(let d=0;d<o;d++)i[d]=Math.max(i[d],Ya(u[c+d],0,n).length)}return i}function Ya(t,e,n){let r;return Array.isArray(t)?r=`${parseFloat(t[0].toFixed(Jh))} + ${parseFloat(t[1].toFixed(Jh))}j`:el(t)?r=`'${t}'`:n==="bool"?r=h$(t):r=parseFloat(t.toFixed(Jh)).toString(),zi(r,e)}function h$(t){return t===0?"false":"true"}function hc(t,e,n,r,s,o=!0){const i=n==="complex64"?2:1,a=e[0],u=e.length;if(u===0){if(n==="complex64"){const y=Qa(t);return[Ya(y[0],0,n)]}return n==="bool"?[h$(t[0])]:[t[0].toString()]}if(u===1){if(a>xw){const x=Ua*i;let g=Array.from(t.slice(0,x)),v=Array.from(t.slice((a-Ua)*i,a*i));return n==="complex64"&&(g=Qa(g),v=Qa(v)),["["+g.map((b,S)=>Ya(b,s[S],n)).join(", ")+", ..., "+v.map((b,S)=>Ya(b,s[a-Ua+S],n)).join(", ")+"]"]}return["["+(n==="complex64"?Qa(t):Array.from(t)).map((x,g)=>Ya(x,s[g],n)).join(", ")+"]"]}const l=e.slice(1),c=r.slice(1),d=r[0]*i,h=[];if(a>xw){for(let y=0;y<Ua;y++){const x=y*d,g=x+d;h.push(...hc(t.slice(x,g),l,n,c,s,!1))}h.push("...");for(let y=a-Ua;y<a;y++){const x=y*d,g=x+d;h.push(...hc(t.slice(x,g),l,n,c,s,y===a-1))}}else for(let y=0;y<a;y++){const x=y*d,g=x+d;h.push(...hc(t.slice(x,g),l,n,c,s,y===a-1))}const p=u===2?",":"";h[0]="["+(a>0?h[0]+p:"");for(let y=1;y<h.length-1;y++)h[y]=" "+h[y]+p;let f=`,
`;for(let y=2;y<u;y++)f+=`
`;return h[h.length-1]=" "+h[h.length-1]+"]"+(o?"":f),h}function Qa(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qi{constructor(e,n,r){if(this.dtype=n,this.shape=e.slice(),this.size=U(e),r!=null){const s=r.length;T(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(n==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||xt(n,this.size),this.strides=lt(e)}set(e,...n){n.length===0&&(n=[0]),T(n.length===this.rank,()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`);const r=this.locToIndex(n);this.values[r]=e}get(...e){e.length===0&&(e=[0]);let n=0;for(const s of e){if(s<0||s>=this.shape[n]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}n++}let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=this.strides[s]*e[s];return this.values[r]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return n}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const n=new Array(this.shape.length);for(let r=0;r<n.length-1;++r)n[r]=Math.floor(e/this.strides[r]),e-=n[r]*this.strides[r];return n[n.length-1]=e,n}get rank(){return this.shape.length}toTensor(){return gr().makeTensor(this.values,this.shape,this.dtype)}}let gr=null,gi=null;function r_(t){gr=t}function s_(t){gi=t}class at{constructor(e,n,r,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=n||"float32",this.size=U(e),this.strides=lt(e),this.dataId=r,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return gi.buffer(this.shape,this.dtype,e)}bufferSync(){return gi.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return wf(this.shape,e,this.dtype==="complex64")}arraySync(){return wf(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=gr().read(this.dataId);if(this.dtype==="string"){const n=await e;try{return n.map(r=>us(r))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),gr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=gr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(n=>us(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await gr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),gr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return gi.print(this,e)}clone(){return this.throwIfDisposed(),gi.clone(this)}toString(e=!1){const n=this.dataSync();return t_(n,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),gi.cast(this,e)}variable(e=!0,n,r){return this.throwIfDisposed(),gr().makeVariable(this,e,n,r)}}Object.defineProperty(at,Symbol.hasInstance,{value:t=>!!t&&t.data!=null&&t.dataSync!=null&&t.throwIfDisposed!=null});function p$(){return ag("Tensor",()=>at)}p$();class Yc extends at{constructor(e,n,r,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=n,this.name=r}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ze(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);gr().disposeTensor(this),this.dataId=e.dataId,gr().incRef(this,null)}dispose(){gr().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Yc,Symbol.hasInstance,{value:t=>t instanceof at&&t.assign!=null&&t.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var vw;(function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"})(vw||(vw={}));var $f;(function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"})($f||($f={}));var kf;(function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"})(kf||(kf={}));var If;(function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"})(If||(If={}));var Nf;(function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"})(Nf||(Nf={}));const o_={float32:If,int32:$f,bool:kf,complex64:Nf};function nn(t,e){if(t==="string"||e==="string"){if(t==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return o_[t][e]}function Dd(t){return nn(t,"int32")}function f$(t){return t!=null&&typeof t=="object"&&"texture"in t&&t.texture instanceof WebGLTexture}function m$(t){return typeof GPUBuffer<"u"&&t!=null&&typeof t=="object"&&"buffer"in t&&t.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dt(t,e){if(t.dtype===e.dtype)return[t,e];const n=nn(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function i_(t,e){T(t.dtype===e.dtype,()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`)}function g$(t){const e=[];return y$(t,e,new Set),e}function y$(t,e,n){if(t==null)return;if(t instanceof at){e.push(t);return}if(!a_(t))return;const r=t;for(const s in r){const o=r[s];n.has(o)||(n.add(o),y$(o,e,n))}}function a_(t){return Array.isArray(t)||typeof t=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ep(t){return t.kernelName!=null}class ww{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Zi{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ww}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let n=0;n<e.length;n++){const r=e[n];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:n}=this.initializeBackendsAndReturnBest();if(n)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:n}=this.initializeBackend(e);if(n)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,n,r=1){return e in this.registryFactory?(xr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:n,priority:r},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:n,asyncInit:r}=this.initializeBackend(e);if(!(r?await n:n))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Y3(this.backendInstance),!0}setupRegisteredKernels(){dw(this.backendName).forEach(n=>{n.setupFunc!=null&&n.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){dw(e).forEach(r=>{r.disposeFunc!=null&&r.disposeFunc(this.registry[e])})}initializeBackend(e){const n=this.registryFactory[e];if(n==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=n.factory();if(r&&!(r instanceof sg)&&typeof r.then=="function"){const s=++this.pendingBackendInitId,o=r.then(i=>s<this.pendingBackendInitId?!1:(this.registry[e]=i,this.pendingBackendInit=null,!0)).catch(i=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,xr(`Initialization of backend ${e} failed`),xr(i.stack||i.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=r,{success:!0,asyncInit:!1}}catch(r){return xr(`Initialization of backend ${e} failed`),xr(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,n)=>this.registryFactory[n].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let n=0;n<e.length;n++){const r=e[n],{success:s,asyncInit:o}=this.initializeBackend(r);if(o||s)return{name:r,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,n){const r=this.state.tensorInfo.get(n),s=r.backend,o=this.readSync(n),i=s.refCount(n);s.disposeData(n,!0),r.backend=e,e.move(n,o,r.shape,r.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,n){let r=null;if(n==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");n=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof n!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}let s;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(s),()=>(s=n(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,n,r){e();try{const s=r();return n(),s}catch(s){throw n(),s}}nextTensorId(){return Zi.nextTensorId++}nextVariableId(){return Zi.nextVariableId++}clone(e){const n=z.runKernel(Rd,{x:e}),r={x:e},s=i=>({x:()=>{const a="float32",u={x:i},l={dtype:a};return z.runKernel(Ed,u,l)}}),o=[];return this.addTapeNode(this.state.activeScope.name,r,[n],s,o,{}),n}runKernel(e,n,r){if(this.backendName==null&&this.backend,!(Xc(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:n,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,n,r){const s=this.backend.numDataIds();let o=0;r.forEach(u=>{o+=u.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=s-n-o-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let n,r=[];const s=this.isTapeOn(),o=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let u;const l=ep(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(ep(e)){const{kernelName:f,inputs:y,attrs:x}=e;this.backendName==null&&this.backend;const g=Xc(f,this.backendName);T(g!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),a=()=>{const v=this.backend.numDataIds();u=g.kernelFunc({inputs:y,attrs:x,backend:this.backend});const b=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,v,b);const S=b.map(I=>I.rank!=null?I:this.makeTensorFromTensorInfo(I));if(s){const I=this.getTensorsForGradient(f,y,S);r=this.saveTensorsForBackwardMode(I)}return S}}else{const{forwardFunc:f}=e,y=x=>{s&&(r=x.map(g=>this.keep(this.clone(g))))};a=()=>{const x=this.backend.numDataIds();u=this.tidy(()=>f(this.backend,y));const g=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,x,g),g}}const{inputs:c,attrs:d}=e,h=ep(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?n=a():(p=this.profiler.profileKernel(l,c,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),n=p.outputs)}),s&&this.addTapeNode(l,c,n,h,r,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(f=>c[f]!=null?c[f].shape:null),outputShapes:n.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(u)?n:n[0]}saveTensorsForBackwardMode(e){return e.map(r=>this.keep(this.clone(r)))}getTensorsForGradient(e,n,r){const s=cw(e);if(s!=null){const o=s.inputsToSave||[],i=s.outputsToSave||[];let a;s.saveAllInputs?(T(Array.isArray(n),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(n).map(l=>n[l])):a=o.map(l=>n[l]);const u=r.filter((l,c)=>i[c]);return a.concat(u)}return[]}makeTensor(e,n,r,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",s=s||this.backend;let o=e;r==="string"&&el(e[0])&&(o=e.map(u=>Ws(u)));const i=s.write(o,n,r),a=new at(n,r,i,this.nextTensorId());if(this.trackTensor(a,s),r==="string"){const u=this.state.tensorInfo.get(i),l=E3(o);this.state.numBytes+=l-u.bytes,u.bytes=l}return a}makeTensorFromDataId(e,n,r,s){r=r||"float32";const o={dataId:e,shape:n,dtype:r};return this.makeTensorFromTensorInfo(o,s)}makeTensorFromTensorInfo(e,n){const{dataId:r,shape:s,dtype:o}=e,i=new at(s,o,r,this.nextTensorId());return this.trackTensor(i,n),i}makeVariable(e,n=!0,r,s){r=r||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));const o=new Yc(e,n,r,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,n){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let r=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(r=e.size*Wc(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:n||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof Yc||this.track(e)}incRef(e,n){this.trackTensor(e,n),this.backend.incRef(e.dataId)}removeDataId(e,n){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===n&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const n=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=n.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const r=e.size*Wc(e.dtype);this.state.numBytes-=r}n.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,n.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const n=this.state.registeredVariables[e];this.disposeVariable(n)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const n=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-n,this.state.activeProfile.newTensors=this.state.numTensors-r;for(const s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,n,r,s,o,i){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:n,outputs:r,saved:o},u=cw(e);u!=null&&(s=u.gradFunc),s!=null&&(a.gradient=l=>(l=l.map((c,d)=>{if(c==null){const h=r[d],p=as(h.size,h.dtype);return this.makeTensor(p,h.shape,h.dtype)}return c}),s(l.length>1?l:l[0],o,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const n={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(n.name=e),this.state.scopeStack.push(n),this.state.activeScope=n}endScope(e){const n=g$(e),r=new Set(n.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const i=this.state.activeScope.track[o];!i.kept&&!r.has(i.id)&&i.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach(o=>{!o.kept&&o.scopeId===s.id&&this.track(o)})}gradients(e,n,r,s=!1){if(T(n.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));T(o instanceof at,()=>"The result y returned by f() must be a tensor.");const i=J3(this.state.activeTape,n,o);if(!s&&i.length===0&&n.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[o.id]=r??u_(o.shape),e_(a,i,l=>this.tidy(l),l_);const u=n.map(l=>a[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(const c of l.saved)c.dispose()}),this.state.activeTape=null),{value:o,grads:u}})}customGrad(e){return T(xf(e),()=>"The f passed in customGrad(f) must be a function."),(...n)=>{T(n.every(a=>a instanceof at),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r;const s={};n.forEach((a,u)=>{s[u]=a});const o=(a,u)=>(r=e(...n,u),T(r.value instanceof at,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),T(xf(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),i=(a,u)=>{const l=r.gradFunc(a,u),c=Array.isArray(l)?l:[l];T(c.length===n.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),T(c.every(h=>h instanceof at),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return c.forEach((h,p)=>{d[p]=()=>h}),d};return this.runKernelFunc({forwardFunc:o,backwardsFunc:i,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,n){return this.state.tensorInfo.get(e).backend.readToGPU(e,n)}async time(e){const n=fr(),r=await this.backend.time(e);return r.wallMs=fr()-n,r}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ww;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Zi.nextTensorId=0;Zi.nextVariableId=0;function u_(t){const e=RS(U(t),"float32");return z.makeTensor(e,t,"float32")}function x$(){const t=PS();if(t._tfengine==null){const e=new P3(t);t._tfengine=new Zi(e)}return F3(t._tfengine.ENV),r_(()=>t._tfengine),t._tfengine}const z=x$();function l_(t,e){const n={a:t,b:e};return z.runKernel(Td,n)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c_(){return typeof navigator<"u"&&navigator!=null}function v$(t){if(t||c_()){if(t||(t=navigator),t.product==="ReactNative")return!0;const e=t.userAgent||t.vendor||(typeof window<"u"?window.opera:"");if(!e){const n=t;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function w$(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rn=M();rn.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});rn.registerFlag("IS_BROWSER",()=>w$());rn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");rn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));rn.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));rn.registerFlag("PROD",()=>!1);rn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>rn.getBool("DEBUG"));rn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);rn.registerFlag("IS_TEST",()=>!1);rn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>rn.getBool("DEBUG"));rn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);rn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);rn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function to(t,e){let n=t;if(sr(t))return e==="string"?[]:[t.length];if(f$(t)){const s=t.channels||"RGBA";return[t.height,t.width*s.length]}else if(m$(t))return[t.buffer.size/(e==null?4:Wc(e))];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||sr(n)&&e!=="string";)r.push(n.length),n=n[0];return Array.isArray(t)&&M().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&b$(t,r,[]),r}function b$(t,e,n){if(n=n||[],!Array.isArray(t)&&!sr(t)){T(e.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}T(e.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`),T(t.length===e[0],()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`);const r=e.slice(1);for(let s=0;s<t.length;++s)b$(t[s],r,n.concat(s))}function bw(t,e,n,r){if(t!=="string_or_numeric"){if(t==null)throw new Error("Expected dtype cannot be null.");if(t!=="numeric"&&t!==e||t==="numeric"&&e==="string")throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}}function N(t,e,n,r="numeric"){if(t instanceof p$())return bw(r,t.dtype,e,n),t;let s=da(t);if(s!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),bw(r,s,e,n),t==null||!sr(t)&&!Array.isArray(t)&&typeof t!="number"&&typeof t!="boolean"&&typeof t!="string"){const u=t==null?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${u}'`)}const o=to(t,s);!sr(t)&&!Array.isArray(t)&&(t=[t]);const a=s!=="string"?Ad(t,s):ls(t,[],!0);return z.makeTensor(a,o,s)}function Qc(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map((o,i)=>N(o,`${e}[${i}]`,n,r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C$="__op";function O(t){const e=Object.keys(t);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+C$;const s=(...o)=>{z.startScope(n);try{const i=r(...o);return Bo(i)&&console.error("Cannot return a Promise inside of tidy."),z.endScope(i),i}catch(i){throw z.endScope(null),i}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d_(t,e){const n=N(t,"real","complex"),r=N(e,"imag","complex");kn(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return z.runKernel(Eg,s)}const Ks=O({complex_:d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function no(t,e,n,r){if(r==null)r=da(t);else if(r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(m$(t)||f$(t)){if(r!=="float32"&&r!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return z.backend.createTensorFromGPUData(t,e||n,r)}if(!sr(t)&&!Array.isArray(t)&&typeof t!="number"&&typeof t!="boolean"&&typeof t!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Mn(e);const s=U(e),o=U(n);T(s===o,()=>`Based on the provided shape, [${e}], the tensor should have ${s} values but has ${o}`);for(let i=0;i<n.length;++i){const a=n[i],u=i===n.length-1?a!==U(e.slice(i)):!0;T(n[i]===e[i]||!u,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return!sr(t)&&!Array.isArray(t)&&(t=[t]),e=e||n,t=r!=="string"?Ad(t,r):ls(t,[],!0),z.makeTensor(t,e,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mr(t,e,n){const r=to(t,n);return no(t,e,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mo={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class $r{static join(e){return new $r(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(r=>sr(r)?r.buffer:r),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let n=0;for(let r=0;r<e.length;r++){const s=e[r];r!==e.length-1&&s.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=n+s.byteLength;this.shards.push({buffer:s,start:n,end:o}),n=o}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,n=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,n=isNaN(Number(n))?0:n,e=Math.max(0,e),n=Math.min(this.byteLength,n),n<=e)return new ArrayBuffer(0);const r=this.findShardForByte(e);if(r===-1)throw new Error(`Could not find start shard for byte ${e}`);const s=n-e,o=new ArrayBuffer(s),i=new Uint8Array(o);let a=0;for(let u=r;u<this.shards.length;u++){const l=this.shards[u],d=e+a-l.start,h=a,f=Math.min(n,l.end)-l.start,y=new Uint8Array(l.buffer,d,f-d);if(i.set(y,h),a+=y.length,n<l.end)break}return o}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function n(s){return e<s.start?-1:e>=s.end?1:0}if(n(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const r=h_(this.shards,n);return r===-1?-1:(this.previousShardIndex=r,this.previousShardIndex)}}function h_(t,e){let n=0,r=t.length;for(;n<=r;){const s=Math.floor((r-n)/2)+n,o=e(t[s]);if(o===0)return s;o<0?r=s:n=s+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mn(){return z}function xe(t,e){return z.tidy(t,e)}function Le(t){g$(t).forEach(n=>n.dispose())}function Or(t){return z.keep(t)}function _u(){return z.backendName}function S$(t,e,n=1){return z.registerBackend(t,e,n)}function Ji(){return z.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xs=4;async function p_(t,e){const n=[],r=[],s=Array.isArray(t)?t.map(i=>i.name):Object.keys(t);for(let i=0;i<s.length;++i){const a=s[i],u=Array.isArray(t)?t[i].tensor:t[a];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${u.dtype}`);const l={name:a,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){const c=new Promise(async d=>{const h=await u.bytes(),p=h.reduce((x,g)=>x+g.length,0)+Xs*h.length,f=new Uint8Array(p);let y=0;for(let x=0;x<h.length;x++){const g=h[x],v=new Uint8Array(new Uint32Array([g.length]).buffer);f.set(v,y),y+=Xs,f.set(g,y),y+=g.length}d(f)});r.push(c)}else r.push(u.data());e!=null&&(l.group=e),n.push(l)}const o=await Promise.all(r);return{data:g_(o),specs:n}}function $$(t,e){const n=new $r(t),r={};let s=0;for(const o of e){const i=f_(o,(a,u)=>n.slice(s+a,s+u));r[o.name]=k$(o,n.slice(s,s+i)),s+=i}return r}function f_(t,e){const n=U(t.shape);let r;if("quantization"in t){const s=t.quantization;r=Mo[s.dtype]}else if(t.dtype==="string"){let s=0;for(let o=0;o<n;o++)s+=Xs+new Uint32Array(e(s,s+Xs))[0];return s}else r=Mo[t.dtype];return n*r}async function m_(t,e){const n=U(t.shape);let r;if("quantization"in t){const s=t.quantization;r=Mo[s.dtype]}else if(t.dtype==="string"){let s=0;for(let o=0;o<n;o++)s+=Xs+new Uint32Array(await e(s,s+Xs))[0];return s}else r=Mo[t.dtype];return n*r}function k$(t,e){const n=t.name,r=t.dtype,s=t.shape,o=U(s);let i,a=0;if("quantization"in t){const u=t.quantization;if(u.dtype==="uint8"||u.dtype==="uint16"){if(!("min"in u&&"scale"in u))throw new Error(`Weight ${t.name} with quantization ${u.dtype} doesn't have corresponding metadata min and scale.`)}else if(u.dtype==="float16"){if(r!=="float32")throw new Error(`Weight ${t.name} is quantized with ${u.dtype} which only supports weights of type float32 not ${r}.`)}else throw new Error(`Weight ${t.name} has unknown quantization dtype ${u.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const l=Mo[u.dtype],c=u.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(r==="float32")if(u.dtype==="uint8"||u.dtype==="uint16"){i=new Float32Array(c.length);for(let d=0;d<c.length;d++){const h=c[d];i[d]=h*u.scale+u.min}}else if(u.dtype==="float16")i=S_()(c);else throw new Error(`Unsupported quantization type ${u.dtype} for weight type float32.`);else if(r==="int32"){if(u.dtype!=="uint8"&&u.dtype!=="uint16")throw new Error(`Unsupported quantization type ${u.dtype} for weight type int32.`);i=new Int32Array(c.length);for(let d=0;d<c.length;d++){const h=c[d];i[d]=Math.round(h*u.scale+u.min)}}else throw new Error(`Unsupported dtype in weight '${n}': ${r}`);a+=o*l}else if(r==="string"){const u=U(t.shape);i=[];for(let l=0;l<u;l++){const c=new Uint32Array(e.slice(a,a+Xs))[0];a+=Xs;const d=new Uint8Array(e.slice(a,a+c));i.push(d),a+=c}}else{const u=Mo[r];if(r==="float32")i=new Float32Array(e);else if(r==="int32")i=new Int32Array(e);else if(r==="bool")i=new Uint8Array(e);else if(r==="complex64"){i=new Float32Array(e);const l=new Float32Array(i.length/2),c=new Float32Array(i.length/2);for(let f=0;f<l.length;f++)l[f]=i[f*2],c[f]=i[f*2+1];const d=Mr(l,s,"float32"),h=Mr(c,s,"float32"),p=Ks(d,h);return d.dispose(),h.dispose(),p}else throw new Error(`Unsupported dtype in weight '${n}': ${r}`);a+=o*u}return Mr(i,s,r)}async function Cw(t,e,n){let r=new Uint8Array(e);for(;r.byteLength<n;){const{done:s,value:o}=await t.read();if(s&&o==null){const a=n-r.byteLength;throw new Error(`Reader is done but ${a} bytes are still expected`)}const i=new Uint8Array(r.length+o.byteLength);i.set(r,0),i.set(new Uint8Array(o),r.length),r=i}return r.buffer}async function I$(t,e){const n={},r=t.getReader();let s=new ArrayBuffer(0);for(const o of e){const i=await m_(o,async(l,c)=>(s=await Cw(r,s,c),s.slice(l,c)));s=await Cw(r,s,i);const a=s.slice(0,i);s=s.slice(i);const u=k$(o,a);if(n[o.name]=u,_u()==="webgpu"){const l=Ji();"uploadToGPU"in l&&U(u.shape)>=M().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&l.uploadToGPU(u.dataId)}}return n}function g_(t){if(t===null)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach(o=>{if(e+=o.byteLength,n.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const r=new Uint8Array(e);let s=0;return n.forEach(o=>{r.set(new Uint8Array(o.buffer),s),s+=o.byteLength}),r.buffer}const Vx=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Sw(t){return Vx?Buffer.byteLength(t,"utf8"):new Blob([t]).size}function y_(t){if(Vx)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let r=0,s=e.length;r<s;r++)n+=String.fromCharCode(e[r]);return btoa(n)}function x_(t){if(Vx){const r=Buffer.from(t,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let r=0;r<e.length;++r)n.set([e.charCodeAt(r)],r);return n.buffer}function v_(t){return $r.join(t)}function $w(t){const e="/";for(t=t.trim();t.endsWith(e);)t=t.slice(0,t.length-1);const n=t.split(e);return n[n.length-1]}function N$(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return t.signature!=null&&(n.signature=t.signature),t.userDefinedMetadata!=null&&(n.userDefinedMetadata=t.userDefinedMetadata),t.modelInitializer!=null&&(n.modelInitializer=t.modelInitializer),t.initializerSignature!=null&&(n.initializerSignature=t.initializerSignature),t.trainingConfig!=null&&(n.trainingConfig=t.trainingConfig),n}function T$(t,e,n){const r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(t.trainingConfig!=null&&(r.trainingConfig=t.trainingConfig),t.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=e,r.weightData=n}return t.signature!=null&&(r.signature=t.signature),t.userDefinedMetadata!=null&&(r.userDefinedMetadata=t.userDefinedMetadata),t.modelInitializer!=null&&(r.modelInitializer=t.modelInitializer),t.initializerSignature!=null&&(r.initializerSignature=t.initializerSignature),r}async function Wx(t,e){let n,r;return t.weightsManifest!=null&&([n,r]=await e(t.weightsManifest)),T$(t,n,r)}function tl(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:t.modelTopology==null?0:Sw(JSON.stringify(t.modelTopology)),weightSpecsBytes:t.weightSpecs==null?0:Sw(JSON.stringify(t.weightSpecs)),weightDataBytes:t.weightData==null?0:new $r(t.weightData).byteLength}}function Tf(t){const e=[];for(const n of t)e.push(...n.weights);return e}function w_(){const t=n=>{let r=n<<13,s=0;for(;!(r&8388608);)s-=8388608,r<<=1;return r&=-8388609,s+=947912704,r|s},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}function b_(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}function C_(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}function S_(){const t=w_(),e=b_(),n=C_();return r=>{const s=new ArrayBuffer(4*r.length),o=new Uint32Array(s);for(let i=0;i<r.length;i++){const a=r[i],u=t[n[a>>10]+(a&1023)]+e[a>>10];o[i]=u}return new Float32Array(s)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class st{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return st.instance==null&&(st.instance=new st),st.instance}static registerSaveRouter(e){st.getInstance().saveRouters.push(e)}static registerLoadRouter(e){st.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return st.getHandlers(e,"save")}static getLoadHandlers(e,n){return st.getHandlers(e,"load",n)}static getHandlers(e,n,r){const s=[];return(n==="load"?st.getInstance().loadRouters:st.getInstance().saveRouters).forEach(i=>{const a=i(e,r);a!==null&&s.push(a)}),s}}const $_=t=>st.registerSaveRouter(t),k_=t=>st.registerLoadRouter(t),I_=t=>st.getSaveHandlers(t),N_=(t,e)=>st.getLoadHandlers(t,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ef="tensorflowjs",Rf=1,Io="models_store",Rs="model_info_store";function E$(){if(!M().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t=typeof window>"u"?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function _f(t){const e=t.result;e.createObjectStore(Io,{keyPath:"modelPath"}),e.createObjectStore(Rs,{keyPath:"modelPath"})}class Vo{constructor(e){if(this.indexedDB=E$(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,n){return new Promise((r,s)=>{const o=this.indexedDB.open(Ef,Rf);o.onupgradeneeded=()=>_f(o),o.onsuccess=()=>{const i=o.result;if(n==null){const a=i.transaction(Io,"readonly"),l=a.objectStore(Io).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return i.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(l.result.modelArtifacts)},l.onerror=c=>(i.close(),s(l.error)),a.oncomplete=()=>i.close()}else{n.weightData=$r.join(n.weightData);const a=tl(n),u=i.transaction(Rs,"readwrite");let l=u.objectStore(Rs),c;try{c=l.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(h){return s(h)}let d;c.onsuccess=()=>{d=i.transaction(Io,"readwrite");const h=d.objectStore(Io);let p;try{p=h.put({modelPath:this.modelPath,modelArtifacts:n,modelArtifactsInfo:a})}catch(f){return s(f)}p.onsuccess=()=>r({modelArtifactsInfo:a}),p.onerror=f=>{l=u.objectStore(Rs);const y=l.delete(this.modelPath);y.onsuccess=()=>(i.close(),s(p.error)),y.onerror=x=>(i.close(),s(p.error))}},c.onerror=h=>(i.close(),s(c.error)),u.oncomplete=()=>{d==null?i.close():d.oncomplete=()=>i.close()}}},o.onerror=i=>s(o.error)})}}Vo.URL_SCHEME="indexeddb://";const R$=t=>M().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Vo.URL_SCHEME)?T_(t.slice(Vo.URL_SCHEME.length)):null;st.registerSaveRouter(R$);st.registerLoadRouter(R$);function T_(t){return new Vo(t)}function E_(t){return t.startsWith(Vo.URL_SCHEME)?t.slice(Vo.URL_SCHEME.length):t}class R_{constructor(){this.indexedDB=E$()}async listModels(){return new Promise((e,n)=>{const r=this.indexedDB.open(Ef,Rf);r.onupgradeneeded=()=>_f(r),r.onsuccess=()=>{const s=r.result,o=s.transaction(Rs,"readonly"),a=o.objectStore(Rs).getAll();a.onsuccess=()=>{const u={};for(const l of a.result)u[l.modelPath]=l.modelArtifactsInfo;e(u)},a.onerror=u=>(s.close(),n(a.error)),o.oncomplete=()=>s.close()},r.onerror=s=>n(r.error)})}async removeModel(e){return e=E_(e),new Promise((n,r)=>{const s=this.indexedDB.open(Ef,Rf);s.onupgradeneeded=()=>_f(s),s.onsuccess=()=>{const o=s.result,i=o.transaction(Rs,"readwrite"),a=i.objectStore(Rs),u=a.get(e);let l;u.onsuccess=()=>{if(u.result==null)return o.close(),r(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const c=a.delete(e),d=()=>{l=o.transaction(Io,"readwrite");const p=l.objectStore(Io).delete(e);p.onsuccess=()=>n(u.result.modelArtifactsInfo),p.onerror=f=>r(u.error)};c.onsuccess=d,c.onerror=h=>(d(),o.close(),r(u.error))}},u.onerror=c=>(o.close(),r(u.error)),i.oncomplete=()=>{l==null?o.close():l.oncomplete=()=>o.close()}},s.onerror=o=>r(s.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qr="/",yi="tensorflowjs_models",_$="info",__="model_topology",P_="weight_specs",A_="weight_data",D_="model_metadata";function P$(t){return{info:[yi,t,_$].join(Qr),topology:[yi,t,__].join(Qr),weightSpecs:[yi,t,P_].join(Qr),weightData:[yi,t,A_].join(Qr),modelMetadata:[yi,t,D_].join(Qr)}}function A$(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function O_(t){const e=t.split(Qr);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(Qr)}function F_(t){return t.startsWith(Wo.URL_SCHEME)?t.slice(Wo.URL_SCHEME.length):t}class Wo{constructor(e){if(!M().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=P$(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=tl(e),o=$r.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,y_(o));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:s}}catch{throw A$(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const n={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);n.modelTopology=r;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);n.weightSpecs=s;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const a=JSON.parse(o);n.format=a.format,n.generatedBy=a.generatedBy,n.convertedBy=a.convertedBy,a.signature!=null&&(n.signature=a.signature),a.userDefinedMetadata!=null&&(n.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(n.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(n.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(n.trainingConfig=a.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return n.weightData=x_(i),n}}Wo.URL_SCHEME="localstorage://";const D$=t=>M().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Wo.URL_SCHEME)?L_(t.slice(Wo.URL_SCHEME.length)):null;st.registerSaveRouter(D$);st.registerLoadRouter(D$);function L_(t){return new Wo(t)}class z_{constructor(){T(M().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),T(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},n=yi+Qr,r=Qr+_$;for(let s=0;s<this.LS.length;++s){const o=this.LS.key(s);if(o.startsWith(n)&&o.endsWith(r)){const i=O_(o);e[i]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){e=F_(e);const n=P$(e);if(this.LS.getItem(n.info)==null)throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return A$(n),r}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bi="://";class Ut{constructor(){this.managers={}}static getInstance(){return Ut.instance==null&&(Ut.instance=new Ut),Ut.instance}static registerManager(e,n){T(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Bi)&&(e=e.slice(0,e.indexOf(Bi))),T(e.length>0,()=>"scheme must not be an empty string.");const r=Ut.getInstance();T(r.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),r.managers[e]=n}static getManager(e){const n=Ut.getInstance().managers[e];if(n==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return n}static getSchemes(){return Object.keys(Ut.getInstance().managers)}}function pc(t){if(t.indexOf(Bi)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Ut.getSchemes().join(",")}`);return{scheme:t.split(Bi)[0],path:t.split(Bi)[1]}}async function O$(t,e,n=!1){T(t!==e,()=>`Old path and new path are the same: '${t}'`);const r=st.getLoadHandlers(t);T(r.length>0,()=>`Copying failed because no load handler is found for source URL ${t}.`),T(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${t}.`);const s=r[0],o=st.getSaveHandlers(e);T(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),T(o.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const i=o[0],a=pc(t).scheme,u=pc(t).path,l=a===pc(t).scheme,c=await s.load();n&&l&&await Ut.getManager(a).removeModel(u);const d=await i.save(c);return n&&!l&&await Ut.getManager(a).removeModel(u),d.modelArtifactsInfo}async function B_(){const t=Ut.getSchemes(),e={};for(const n of t){const r=await Ut.getManager(n).listModels();for(const s in r){const o=n+Bi+s;e[o]=r[s]}}return e}async function M_(t){const e=pc(t);return Ut.getManager(e.scheme).removeModel(e.path)}async function V_(t,e){return O$(t,e,!1)}async function W_(t,e){return O$(t,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class U_{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,n){return fetch(e,n)}now(){return performance.now()}encode(e,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${n}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,n){return new TextDecoder(n).decode(e)}setTimeoutCustom(e,n){if(typeof window>"u"||!M().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,n);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},n),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",r=>{if(r.source===window&&r.data.name===this.messageName){r.stopPropagation();const s=this.functionRefs[r.data.index];s(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return r$(e)}}if(M().get("IS_BROWSER")){M().setPlatform("browser",new U_);try{Ut.registerManager(Wo.URL_SCHEME,new z_)}catch{}try{Ut.registerManager(Vo.URL_SCHEME,new R_)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G_={importFetch:()=>require("node-fetch")};let tp;class H_{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,n){return M().global.fetch!=null?M().global.fetch(e,n):(tp==null&&(tp=G_.importFetch()),tp(e,n))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${n}`);return this.textEncoder.encode(e)}decode(e,n){return e.length===0?"":new this.util.TextDecoder(n).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}M().get("IS_NODE")&&!M().get("IS_BROWSER")&&M().setPlatform("node",new H_);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Be(t,e="float32",n){return e=e||"float32",Mn(t),new Qi(t,e,n)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j_(t,e){const n=N(t,"x","cast");if(!T3(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&n.dtype!=="string"||e!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:e};return z.runKernel(Ed,r,s)}const je=O({cast_:j_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K_(t){const n={x:N(t,"x","clone","string_or_numeric")};return z.runKernel(Rd,n)}const Us=O({clone_:K_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F$(t,e=!1){console.log(t.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */x$();const X_={buffer:Be,cast:je,clone:Us,print:F$};s_(X_);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q_(t,e){let n=N(t,"a","add"),r=N(e,"b","add");[n,r]=dt(n,r);const s={a:n,b:r};return z.runKernel(Td,s)}const fe=O({add_:q_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y_(t,e){let n=N(t,"a","floorDiv"),r=N(e,"b","floorDiv");[n,r]=dt(n,r);const s={a:n,b:r};return z.runKernel(ay,s)}const L$=O({floorDiv_:Y_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q_(t,e){let n=N(t,"a","div"),r=N(e,"b","div");if([n,r]=dt(n,r),n.dtype==="int32"&&r.dtype==="int32")return L$(n,r);const s={a:n,b:r},o={};return z.runKernel(qg,s,o)}const Te=O({div_:Q_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z_(t,e){let n=N(t,"a","mul"),r=N(e,"b","mul");[n,r]=dt(n,r);const s={a:n,b:r};return z.runKernel(By,s)}const Y=O({mul_:Z_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J_(t){const e=N(t,"x","abs");if(e.dtype==="complex64"){const n={x:e};return z.runKernel(Rg,n)}else{const n={x:e};return z.runKernel(ug,n)}}const _n=O({abs_:J_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eP(t){const n={x:N(t,"x","acos")};return z.runKernel(lg,n)}const tP=O({acos_:eP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nP(t){const n={x:N(t,"x","acosh")};return z.runKernel(cg,n)}const rP=O({acosh_:nP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sP(t){T(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),T(t.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`);const e=t.map((s,o)=>N(s,`tensors${o}`,"addN")),n=e[0];e.forEach(s=>{if(s.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(s=>{if(!ze(s.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=e;return z.runKernel(dg,r)}const oP=O({addN_:sP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iP(t,e=null,n=!1){const s={x:N(t,"x","all","bool")},o={axis:e,keepDims:n};return z.runKernel(hg,s,o)}const aP=O({all_:iP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uP(t,e=null,n=!1){const s={x:N(t,"x","any","bool")},o={axis:e,keepDims:n};return z.runKernel(pg,s,o)}const lP=O({any_:uP});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cP(t,e=0){const r={x:N(t,"x","argMax")},s={axis:e};return z.runKernel(fg,r,s)}const z$=O({argMax_:cP});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dP(t,e=0){const r={x:N(t,"x","argMin")},s={axis:e};return z.runKernel(mg,r,s)}const hP=O({argMin_:dP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pP(t){const n={x:N(t,"x","asin")};return z.runKernel(gg,n)}const fP=O({asin_:pP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mP(t){const n={x:N(t,"x","asinh")};return z.runKernel(yg,n)}const gP=O({asinh_:mP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yP(t){const n={x:N(t,"x","atan")};return z.runKernel(xg,n)}const xP=O({atan_:yP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vP(t,e){let n=N(t,"a","atan2"),r=N(e,"b","atan2");[n,r]=dt(n,r);const s={a:n,b:r};return z.runKernel(wg,s)}const wP=O({atan2_:vP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bP(t){const n={x:N(t,"x","atanh")};return z.runKernel(vg,n)}const CP=O({atanh_:bP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nl(t,e,n,r,s="NHWC",o){const i=t[3],a=[...e,i],u=kr(s);return gt(t,a,n,o,r,null,null,u)}function ir(t,e,n,r,s,o,i="channelsLast"){const[a,u]=Pu(e);let l;if(i==="channelsLast")l=[a,u,t[3],t[3]];else if(i==="channelsFirst")l=[a,u,t[1],t[1]];else throw new Error(`Unknown dataFormat ${i}`);return gt(t,l,n,r,s,o,!1,i)}function gs(t,e,n,r,s,o,i="NDHWC"){const[a,u,l]=Pf(e);let c,d;if(i==="NDHWC")d="channelsLast",c=[a,u,l,t[4],t[4]];else if(i==="NCDHW")d="channelsFirst",c=[a,u,l,t[1],t[1]];else throw new Error(`Unknown dataFormat ${i}`);return ro(t,c,n,r,s,!1,d,o)}function gt(t,e,n,r,s,o,i=!1,a="channelsLast"){let[u,l,c,d]=[-1,-1,-1,-1];if(a==="channelsLast")[u,l,c,d]=t;else if(a==="channelsFirst")[u,d,l,c]=t;else throw new Error(`Unknown dataFormat ${a}`);const[h,p,,f]=e,[y,x]=Pu(n),[g,v]=Pu(r),b=Mi(h,g),S=Mi(p,v),{padInfo:I,outHeight:E,outWidth:R}=kP(s,l,c,y,x,b,S,o,a),_=i?f*d:f;let L;return a==="channelsFirst"?L=[u,_,E,R]:a==="channelsLast"&&(L=[u,E,R,_]),{batchSize:u,dataFormat:a,inHeight:l,inWidth:c,inChannels:d,outHeight:E,outWidth:R,outChannels:_,padInfo:I,strideHeight:y,strideWidth:x,filterHeight:h,filterWidth:p,effectiveFilterHeight:b,effectiveFilterWidth:S,dilationHeight:g,dilationWidth:v,inShape:t,outShape:L,filterShape:e}}function ro(t,e,n,r,s,o=!1,i="channelsLast",a){let[u,l,c,d,h]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[u,l,c,d,h]=t;else if(i==="channelsFirst")[u,h,l,c,d]=t;else throw new Error(`Unknown dataFormat ${i}`);const[p,f,y,,x]=e,[g,v,b]=Pf(n),[S,I,E]=Pf(r),R=Mi(p,S),_=Mi(f,I),L=Mi(y,E),{padInfo:F,outDepth:V,outHeight:j,outWidth:K}=IP(s,l,c,d,g,v,b,R,_,L,a),Z=o?x*h:x;let ne;return i==="channelsFirst"?ne=[u,Z,V,j,K]:i==="channelsLast"&&(ne=[u,V,j,K,Z]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:d,inChannels:h,outDepth:V,outHeight:j,outWidth:K,outChannels:Z,padInfo:F,strideDepth:g,strideHeight:v,strideWidth:b,filterDepth:p,filterHeight:f,filterWidth:y,effectiveFilterDepth:R,effectiveFilterHeight:_,effectiveFilterWidth:L,dilationDepth:S,dilationHeight:I,dilationWidth:E,inShape:t,outShape:ne,filterShape:e}}function SP(t,e,n,r,s){r==null&&(r=Ux(t,e,n));const o=t[0],i=t[1],a=Au((o-e+2*r)/n+1,s),u=Au((i-e+2*r)/n+1,s);return[a,u]}function $P(t,e,n,r,s,o){s==null&&(s=Ux(t,e[0],r[0]));const i=[0,0,0,n];for(let a=0;a<3;a++)t[a]+2*s>=e[a]&&(i[a]=Au((t[a]-e[a]+2*s)/r[a]+1,o));return i}function Ux(t,e,n,r=1){const s=Mi(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function Pu(t){return typeof t=="number"?[t,t,t]:t.length===2?[t[0],t[1],1]:t}function Pf(t){return typeof t=="number"?[t,t,t]:t}function Mi(t,e){return e<=1?t:t+(t-1)*(e-1)}function kP(t,e,n,r,s,o,i,a,u){let l,c,d;if(typeof t=="number"){l={top:t,bottom:t,left:t,right:t,type:t===0?"VALID":"NUMBER"};const p=SP([e,n],o,r,t,a);c=p[0],d=p[1]}else if(t==="same"){c=Math.ceil(e/r),d=Math.ceil(n/s);const h=Math.max(0,(c-1)*r+o-e),p=Math.max(0,(d-1)*s+i-n),f=Math.floor(h/2),y=h-f,x=Math.floor(p/2),g=p-x;l={top:f,bottom:y,left:x,right:g,type:"SAME"}}else if(t==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-o+1)/r),d=Math.ceil((n-i+1)/s);else if(typeof t=="object"){const h=u==="channelsLast"?t[1][0]:t[2][0],p=u==="channelsLast"?t[1][1]:t[2][1],f=u==="channelsLast"?t[2][0]:t[3][0],y=u==="channelsLast"?t[2][1]:t[3][1];l={top:h,bottom:p,left:f,right:y,type:h===0&&p===0&&f===0&&y===0?"VALID":"EXPLICIT"},c=Au((e-o+h+p)/r+1,a),d=Au((n-i+f+y)/s+1,a)}else throw Error(`Unknown padding parameter: ${t}`);return{padInfo:l,outHeight:c,outWidth:d}}function IP(t,e,n,r,s,o,i,a,u,l,c){let d,h,p,f;if(t==="valid"&&(t=0),typeof t=="number"){d={top:t,bottom:t,left:t,right:t,front:t,back:t,type:t===0?"VALID":"NUMBER"};const x=$P([e,n,r,1],[a,u,l],1,[s,o,i],t,c);h=x[0],p=x[1],f=x[2]}else if(t==="same"){h=Math.ceil(e/s),p=Math.ceil(n/o),f=Math.ceil(r/i);const y=(h-1)*s+a-e,x=(p-1)*o+u-n,g=(f-1)*i+l-r,v=Math.floor(y/2),b=y-v,S=Math.floor(x/2),I=x-S,E=Math.floor(g/2),R=g-E;d={top:S,bottom:I,left:E,right:R,front:v,back:b,type:"SAME"}}else throw Error(`Unknown padding parameter: ${t}`);return{padInfo:d,outDepth:h,outHeight:p,outWidth:f}}function Au(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function Du(t){const[e,n,r]=Pu(t);return e===1&&n===1&&r===1}function qt(t,e){return Du(t)||Du(e)}function Uo(t){return Pu(t).every(e=>e>0)}function kr(t){if(t==="NHWC")return"channelsLast";if(t==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}function ar(t,e,n){if(n!=null){if(typeof e=="string")throw Error(`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);if(typeof e=="number")T(qi(e),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);else if(typeof e=="object")e.forEach(r=>{r.forEach(s=>{T(qi(s),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${s}.`)})});else throw Error(`Error in ${t}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NP(t,e){const r={x:N(t,"x","reshape","string_or_numeric")},s={shape:e};return z.runKernel(tx,r,s)}const H=O({reshape_:NP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TP(t,e,n,r,s){const o=N(t,"x","avgPool","float32"),i=1;T(qt(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let a=o,u=!1;o.rank===3&&(u=!0,a=H(o,[1,o.shape[0],o.shape[1],o.shape[2]])),T(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),ar("avgPool",r,s);const l={x:a},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s};let d=z.runKernel(bg,l,c);return d=je(d,o.dtype),u?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const B$=O({avgPool_:TP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EP(t,e,n,r,s,o="NDHWC"){const i=N(t,"x","avgPool3d","float32");let a=i,u=!1;i.rank===4&&(u=!0,a=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),T(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),T(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),T(typeof n=="number"&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),ar("avgPool3d",r,s);const l={x:a},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:o};let d=z.runKernel(Cg,l,c);return d=je(d,a.dtype),u?H(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const RP=O({avgPool3d_:EP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _P(t,e=0){T(t.length>=1,()=>"Pass at least one tensor to concat");const n=Qc(t,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),n.length===1)return Us(n[0]);const r=n,s={axis:e};return z.runKernel(_g,r,s)}const St=O({concat_:_P});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PP(t,e,n=!1,r=!1){let s=N(t,"a","matMul"),o=N(e,"b","matMul");[s,o]=dt(s,o);const i={a:s,b:o},a={transposeA:n,transposeB:r};return z.runKernel(Sg,i,a)}const We=O({matMul_:PP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AP(t){const n={x:N(t,"x","sigmoid","float32")};return z.runKernel(yx,n)}const ts=O({sigmoid_:AP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DP(t,e,n){const r=N(t,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");const s={x:r},o={begin:e,size:n};return z.runKernel(px,s,o)}const ke=O({slice_:DP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OP(t){const n={x:N(t,"x","tanh","float32")};return z.runKernel(Px,n)}const Af=O({tanh_:OP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FP(t,e,n,r,s,o){const i=N(t,"forgetBias","basicLSTMCell"),a=N(e,"lstmKernel","basicLSTMCell"),u=N(n,"lstmBias","basicLSTMCell"),l=N(r,"data","basicLSTMCell"),c=N(s,"c","basicLSTMCell"),d=N(o,"h","basicLSTMCell"),h=St([l,d],1),p=We(h,a),f=fe(p,u),y=f.shape[0],x=f.shape[1]/4,g=[y,x],v=ke(f,[0,0],g),b=ke(f,[0,x],g),S=ke(f,[0,x*2],g),I=ke(f,[0,x*3],g),E=fe(Y(ts(v),Af(b)),Y(c,ts(fe(i,S)))),R=Y(Af(E),ts(I));return[E,R]}const LP=O({basicLSTMCell_:FP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zP(t,e,n){const r=N(t,"x","batchToSpaceND"),s=e.reduce((a,u)=>a*u);T(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),T(n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),T(r.shape[0]%s===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`);const o={x:r},i={blockShape:e,crops:n};return z.runKernel($g,o,i)}const M$=O({batchToSpaceND_:zP});function BP(t){let e;return t.rank===0||t.rank===1?e=H(t,[1,1,1,t.size]):t.rank===2?e=H(t,[1,1,t.shape[0],t.shape[1]]):t.rank===3?e=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]):e=t,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MP(t,e,n,r,s,o){o==null&&(o=.001);const i=N(t,"x","batchNorm"),a=N(e,"mean","batchNorm"),u=N(n,"variance","batchNorm");let l;s!=null&&(l=N(s,"scale","batchNorm"));let c;r!=null&&(c=N(r,"offset","batchNorm")),T(a.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),T(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),T(l==null||a.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:BP(i),scale:l,offset:c,mean:a,variance:u},p={varianceEpsilon:o},f=z.runKernel(uy,h,p);return H(f,i.shape)}const Od=O({batchNorm_:MP});function VP(t,e,n,r,s,o){const i=N(t,"x","batchNorm"),a=N(e,"mean","batchNorm"),u=N(n,"variance","batchNorm");let l;s!=null&&(l=N(s,"scale","batchNorm"));let c;return r!=null&&(c=N(r,"offset","batchNorm")),T(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),T(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),T(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&T(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&T(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Od(i,a,u,c,l,o)}const WP=O({batchNorm2d_:VP});function UP(t,e,n,r,s,o){const i=N(t,"x","batchNorm"),a=N(e,"mean","batchNorm"),u=N(n,"variance","batchNorm");let l;s!=null&&(l=N(s,"scale","batchNorm"));let c;return r!=null&&(c=N(r,"offset","batchNorm")),T(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),T(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),T(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&T(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&T(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Od(i,a,u,c,l,o)}const GP=O({batchNorm3d_:UP});function HP(t,e,n,r,s,o){const i=N(t,"x","batchNorm"),a=N(e,"mean","batchNorm"),u=N(n,"variance","batchNorm");let l;s!=null&&(l=N(s,"scale","batchNorm"));let c;return r!=null&&(c=N(r,"offset","batchNorm")),T(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),T(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),T(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&T(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&T(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Od(i,a,u,c,l,o)}const jP=O({batchNorm4d_:HP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KP(t,e,n){const r=N(t,"x","bincount"),s=N(e,"weights","bincount");T(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),T(n>=0,()=>`size must be non-negative, but got ${n}.`),T(s.size===r.size||s.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);const o={x:r,weights:s},i={size:n};return z.runKernel(kg,o,i)}const V$=O({bincount_:KP});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XP(t,e){const n=N(t,"x","bitwiseAnd"),r=N(e,"y","bitwiseAnd");if(!ze(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if(n.dtype!=="int32"||r.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);const s={a:n,b:r};return z.runKernel(OS,s)}const qP=O({bitwiseAnd_:XP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YP(t,e){const n=N(t,"s0","broadcastArgs","int32"),r=N(e,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return z.runKernel(Ig,s)}const QP=O({broadcastArgs_:YP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZP(t,e){let n=N(t,"broadcastTo","x");const r=n.shape;if(Mn(e),e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const l=n.shape.slice();for(;l.length<e.length;)l.unshift(1);n=H(n,l)}const s=n.shape,o=Array.from(e);for(let l=e.length-1;l>=0;l--)if(s[l]===e[l])o[l]=1;else if(n.shape[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(o.map((l,c)=>l>1?c:-1).filter(l=>l>=0).length===0)return Us(n);const a={x:n},u={reps:o};return z.runKernel(_d,a,u)}const du=O({broadcastTo_:ZP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JP(t){const n={x:N(t,"x","ceil","float32")};return z.runKernel(Ng,n)}const eA=O({ceil_:JP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rl(t,e,n){Mn(t),n=n||da(e);const r={shape:t,value:e,dtype:n};return z.runKernel(sy,{},r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tA(t,e,n){const r=N(t,"x","clipByValue");if(T(e<=n,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`),e===n)return rl(r.shape,e,r.dtype);const s={x:r},o={clipValueMin:e,clipValueMax:n};return z.runKernel(Tg,s,o)}const W$=O({clipByValue_:tA});function nA(t){return St(t,0)}const rA=O({concat1d_:nA});function sA(t,e){return St(t,e)}const oA=O({concat2d_:sA});function iA(t,e){return St(t,e)}const aA=O({concat3d_:iA});function uA(t,e){return St(t,e)}const lA=O({concat4d_:uA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cA(t,e,n,r,s="NHWC",o=[1,1],i){const a=N(t,"x","conv2d","float32"),u=N(e,"filter","conv2d","float32");let l=a,c=!1;a.rank===3&&(c=!0,l=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),T(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),T(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),ar("conv2d",r,i);const d=s==="NHWC"?l.shape[3]:l.shape[1];T(d===u.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`),T(qt(n,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),T(Uo(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),T(Uo(n),()=>"Error in conv2D: Strides should be larger than 0.");const h={x:l,filter:u},p={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i},f=z.runKernel(Pg,h,p);return c?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Fd=O({conv2d_:cA});function dA(t,e,n,r,s="NWC",o=1,i){const a=N(t,"x","conv1d"),u=N(e,"filter","conv1d");let l=a,c=!1;a.rank===2&&(c=!0,l=H(a,[1,a.shape[0],a.shape[1]])),T(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),T(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),ar("conv1d",r,i),T(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),T(qt(n,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${o}'`),T(Uo(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),T(Uo(n),()=>"Error in conv1D: Stride should be larger than 0."),T(s==="NWC",()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const d=H(u,[1,u.shape[0],u.shape[1],u.shape[2]]),h=H(l,[l.shape[0],1,l.shape[1],l.shape[2]]),x=Fd(h,d,[1,n],r,"NHWC",[1,o],i);return c?H(x,[x.shape[2],x.shape[3]]):H(x,[x.shape[0],x.shape[2],x.shape[3]])}const hA=O({conv1d_:dA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pA(t,e,n,r,s,o="NHWC",i){T(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let a=t,u=e,l=!1;e.rank===3&&(l=!0,u=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,t[0],t[1],t[2]]),T(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),T(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),T(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const c=o==="NHWC"?a[3]:a[1],d=o==="NHWC"?u.shape[3]:u.shape[1];T(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),T(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),ar("conv2dDerInput",s,i);const h={dy:u,filter:n},p={strides:r,pad:s,dataFormat:o,dimRoundingMode:i,inputShape:a},f=z.runKernel(Dg,h,p);return l?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const U$=O({conv2DBackpropInput_:pA});function fA(t,e,n,r,s,o){const i=N(t,"x","conv2dTranspose"),a=N(e,"filter","conv2dTranspose");return U$(n,i,a,r,s,"NHWC",o)}const mA=O({conv2dTranspose_:fA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gA(t,e,n,r,s="NDHWC",o=[1,1,1]){const i=N(t,"x","conv3d"),a=N(e,"filter","conv3d");let u=i,l=!1;i.rank===4&&(l=!0,u=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),T(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),T(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),T(u.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${a.shape[3]}.`),T(qt(n,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),T(s==="NDHWC",()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`),T(Uo(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),T(Uo(n),()=>"Error in conv3D: Strides should be larger than 0.");const c={x:u,filter:a},d={strides:n,pad:r,dataFormat:s,dilations:o},h=z.runKernel(Og,c,d);return l?H(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const yA=O({conv3d_:gA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xA(t,e,n,r,s){T(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let o=t,i=e,a=!1;e.rank===4&&(a=!0,i=H(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,t[0],t[1],t[2],t[3]]);const u=o[4],l=i.shape[4];T(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),T(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),T(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),T(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),T(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);const c={dy:i,filter:n},d={pad:s,strides:r,inputShape:o},h=z.runKernel(Fg,c,d);return a?H(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const vA=O({conv3DBackpropInput_:xA});function wA(t,e,n,r,s){const o=N(t,"x","conv3dTranspose"),i=N(e,"filter","conv3dTranspose");return vA(n,o,i,r,s)}const bA=O({conv3dTranspose_:wA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CA(t){const n={x:N(t,"x","cos","float32")};return z.runKernel(Lg,n)}const SA=O({cos_:CA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $A(t){const n={x:N(t,"x","cosh","float32")};return z.runKernel(zg,n)}const kA=O({cosh_:$A});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IA(t,e=0,n=!1,r=!1){const o={x:N(t,"x","cumprod")},i={axis:e,exclusive:n,reverse:r};return z.runKernel(Bg,o,i)}const NA=O({cumprod_:IA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TA(t,e=0,n=!1,r=!1){const o={x:N(t,"x","cumsum")},i={axis:e,exclusive:n,reverse:r};return z.runKernel(Mg,o,i)}const EA=O({cumsum_:TA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RA(t,e,n,r=!1){const s=N(t,"x","denseBincount"),o=N(e,"weights","denseBincount");T(s.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),T(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),T(n>=0,()=>`size must be non-negative, but got ${n}.`),T(o.size===s.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${o.shape}.`);const i={x:s,weights:o},a={size:n,binaryOutput:r};return z.runKernel(Wg,i,a)}const _A=O({denseBincount_:RA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PA(t,e,n="NHWC"){const r=N(t,"x","depthToSpace","float32"),s=n==="NHWC"?r.shape[1]:r.shape[2],o=n==="NHWC"?r.shape[2]:r.shape[3],i=n==="NHWC"?r.shape[3]:r.shape[1];T(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),T(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e}  for depthToSpace with input shape
    ${r.shape}`),T(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${r.shape}`),T(i%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${r.shape}`);const a={x:r},u={blockSize:e,dataFormat:n};return z.runKernel(Ug,a,u)}const AA=O({depthToSpace_:PA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DA(t,e,n,r,s="NHWC",o=[1,1],i){const a=N(t,"x","depthwiseConv2d","float32"),u=N(e,"filter","depthwiseConv2d","float32");let l=a,c=!1;a.rank===3&&(c=!0,l=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),T(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),T(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const d=s==="NHWC"?l.shape[3]:l.shape[1];T(d===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${u.shape[2]}.`),ar("depthwiseConv2d",r,i);const h={x:l,filter:u},p={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i},f=z.runKernel(Gg,h,p);return c?H(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Gx=O({depthwiseConv2d_:DA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OA(t){const n={x:N(t,"x","diag")};return z.runKernel(Kg,n)}const FA=O({diag_:OA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LA(t,e,n,r,s=[1,1],o="NHWC"){const i=N(t,"x","dilation2d"),a=N(e,"filter","dilation2d");T(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),T(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),T(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let u=i,l=!1;i.rank===3&&(u=H(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0),T(u.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${a.shape[2]}`);const c={x:u,filter:a},d={strides:n,pad:r,dilations:s},h=z.runKernel(Xg,c,d);return l?H(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const zA=O({dilation2d_:LA});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ea(t,e){const n=t.length,r=[];for(let s=0;s<n;s++){const o=n-1-s,i=t[o]||1;(e[e.length-1-s]||1)>1&&i===1&&r.unshift(o)}return r}function G$(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],o=e.length-r-1,i=e[o];(s==null||s===1&&i>1)&&n.unshift(o)}return n}function $e(t,e){const n=Math.max(t.length,e.length),r=new Array(n);for(let s=0;s<n;s++){let o=t[t.length-s-1];o==null&&(o=1);let i=e[e.length-s-1];if(i==null&&(i=1),o===1)r[n-s-1]=i;else if(i===1)r[n-s-1]=o;else if(o!==i){const a=`Operands could not be broadcast together with shapes ${t} and ${e}.`;throw Error(a)}else r[n-s-1]=o}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BA(t,e){let n=N(t,"a","equal","string_or_numeric"),r=N(e,"b","equal","string_or_numeric");[n,r]=dt(n,r),$e(n.shape,r.shape);const s={a:n,b:r};return z.runKernel(Jg,s)}const H$=O({equal_:BA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MA(t,e,n){const r=N(e,"a","where"),s=N(n,"b","where"),o=N(t,"condition","where","bool"),i=$e($e(o.shape,r.shape),s.shape),a=du(o,i),u=du(r,i),l=du(s,i),c={condition:a,t:u,e:l};return z.runKernel(dx,c)}const Gs=O({where_:MA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VA(t){const n={x:N(t,"x","zerosLike")};return z.runKernel(Lx,n)}const Fn=O({zerosLike_:VA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WA(t,e){let n=N(t,"a","div"),r=N(e,"b","div");[n,r]=dt(n,r);const s=Te(n,r),o=Fn(s),i=H$(r,o);return Gs(i,o,s)}const UA=O({divNoNan_:WA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GA(t,e){const n=N(t,"t1","dot"),r=N(e,"t2","dot");T((n.rank===1||n.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const s=n.rank===1?n.size:n.shape[1],o=r.rank===1?r.size:r.shape[0];if(T(s===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${o}.`),n.rank===1&&r.rank===1){const i=H(n,[1,-1]),a=H(r,[-1,1]),u=We(i,a);return H(u,[])}else if(n.rank===1&&r.rank===2){const i=H(n,[1,-1]),a=H(r,[r.shape[0],r.shape[1]]),u=We(i,a);return H(u,[u.size])}else if(n.rank===2&&r.rank===1){const i=H(r,[-1,1]),a=We(n,i);return H(a,[a.size])}else{const i=H(r,[r.shape[0],r.shape[1]]);return We(n,i)}}const HA=O({dot_:GA});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jA(t,...e){const n=e.map((s,o)=>N(s,`tensors${o}`,"einsum")),r={equation:t};return z.runKernel(Yg,n,r)}const xi=O({einsum_:jA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KA(t){const n={x:N(t,"x","elu","float32")};return z.runKernel(Qg,n)}const j$=O({elu_:KA});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XA(t,e){const n=N(t,"x","ensureShape","string_or_numeric");if(!I3(n.shape,e))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${e}`);return t}const qA=O({ensureShape_:XA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YA(t){let e=N(t,"x","erf");T(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=je(e,"float32"));const n={x:e};return z.runKernel(Zg,n)}const QA=O({erf_:YA});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hx(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function K$(t,e,n){const r=t.length+e.length,s=[];let o=0,i=0;for(let a=0;a<r;a++)n.indexOf(a)===-1?s.push(t[o++]):s.push(e[i++]);return s}function Vn(t,e){const n=[],r=t.length;for(let o=0;o<r;o++)e.indexOf(o)===-1&&n.push(t[o]);const s=e.map(o=>t[o]);return[n,s]}function Nn(t,e){const n=e.map(r=>1);return K$(t,n,e)}function Tn(t,e,n){T(Hx(e,n),()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`)}function Lt(t,e){if(Hx(t,e))return null;const n=[];for(let r=0;r<e;++r)t.indexOf(r)===-1&&n.push(r);return t.forEach(r=>n.push(r)),n}function sl(t){return t.map((e,n)=>[n,e]).sort((e,n)=>e[1]-n[1]).map(e=>e[0])}function zt(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZA(t,e=null,n=!1){const s={x:N(t,"x","max")},o={reductionIndices:e,keepDims:n};return z.runKernel(Ty,s,o)}const Vi=O({max_:ZA});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JA(t,e=null,n=!1){const s={x:N(t,"x","min")},o={axis:e,keepDims:n};return z.runKernel(Dy,s,o)}const Df=O({min_:JA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eD(t,e){let n=N(t,"base","pow"),r=N(e,"exp","pow");[n,r]=dt(n,r);const s={a:n,b:r};return z.runKernel(Xy,s)}const Ou=O({pow_:eD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ie(t,e){if((sr(t)&&e!=="string"||Array.isArray(t))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&sr(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return no(t,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tD(t){const n={x:N(t,"x","sqrt","float32")};return z.runKernel(vx,n)}const cs=O({sqrt_:tD});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nD(t){const e=N(t,"x","square"),n={};return z.runKernel("Square",{x:e},n)}const er=O({square_:nD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rD(t,e=null,n=!1){let r=N(t,"x","sum");r.dtype==="bool"&&(r=je(r,"int32"));const s={x:r},o={axis:e,keepDims:n};return z.runKernel(wx,s,o)}const qe=O({sum_:rD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sD(t,e="euclidean",n=null,r=!1){t=N(t,"x","norm");const s=X$(t,e,n);let o=s.shape;if(r){const i=Je(n,t.shape);o=Nn(s.shape,i)}return H(s,o)}function X$(t,e,n=null){if(t.rank===0)return _n(t);if(t.rank!==1&&n===null)return X$(H(t,[-1]),e,n);if(t.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(e===1)return qe(_n(t),n);if(e===1/0)return Vi(_n(t),n);if(e===-1/0)return Df(_n(t),n);if(e==="euclidean"||e===2)return cs(qe(Ou(_n(t),Ie(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&n.length===2){if(e===1)return Vi(qe(_n(t),n[0]),n[1]-1);if(e===1/0)return Vi(qe(_n(t),n[1]),n[0]);if(e===-1/0)return Df(qe(_n(t),n[1]),n[0]);if(e==="fro"||e==="euclidean")return cs(qe(er(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Ld=O({norm_:sD});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oD(t,e=null,n=!1){return Ld(t,"euclidean",e,n)}const iD=O({euclideanNorm_:oD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aD(t){const n={x:N(t,"x","exp")};return z.runKernel(ey,n)}const ds=O({exp_:aD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uD(t,e=0){const n=N(t,"x","expandDims","string_or_numeric");T(e<=n.rank,()=>"Axis must be <= rank of the tensor");const r={input:n},s={dim:e};return z.runKernel(ty,r,s)}const Pn=O({expandDims_:uD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lD(t){const n={x:N(t,"x","expm1")};return z.runKernel(ny,n)}const cD=O({expm1_:lD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dD(t,e){const n=N(t,"x","tile","string_or_numeric");T(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`);const r={x:n},s={reps:e};return z.runKernel(_d,r,s)}const hu=O({tile_:dD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hD(t,e,n,r="float32"){e==null&&(e=t);const s=Be([t,e],r),o=t<=e?t:e;for(let a=0;a<o;++a)s.set(1,a,a);const i=H(s.toTensor(),[t,e]);if(n==null)return i;if(n.length===1)return hu(Pn(i,0),[n[0],1,1]);if(n.length===2)return hu(Pn(Pn(i,0),0),[n[0],n[1],1,1]);if(n.length===3)return hu(Pn(Pn(Pn(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const q$=O({eye_:hD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pD(t){const n={x:N(t,"x","floor","float32")};return z.runKernel(iy,n)}const Y$=O({floor_:pD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fD(t,e,n=0,r=0){const s=N(t,"x","gather"),o=N(e,"indices","gather","int32"),i={x:s,indices:o},a={axis:n,batchDims:r};return z.runKernel(ly,i,a)}const Q$=O({gather_:fD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mD(t,e){let n=N(t,"a","greater","string_or_numeric"),r=N(e,"b","greater","string_or_numeric");[n,r]=dt(n,r),$e(n.shape,r.shape);const s={a:n,b:r};return z.runKernel(dy,s)}const zd=O({greater_:mD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gD(t,e){let n=N(t,"a","greaterEqual","string_or_numeric"),r=N(e,"b","greaterEqual","string_or_numeric");[n,r]=dt(n,r),$e(n.shape,r.shape);const s={a:n,b:r};return z.runKernel(hy,s)}const Z$=O({greaterEqual_:gD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yD(t){const n={input:N(t,"input","imag")};return z.runKernel(fy,n)}const Bd=O({imag_:yD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xD(t){const n={x:N(t,"x","isFinite")};return z.runKernel(my,n)}const vD=O({isFinite_:xD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wD(t){const n={x:N(t,"x","isInf")};return z.runKernel(gy,n)}const bD=O({isInf_:wD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CD(t){const n={x:N(t,"x","isNaN")};return z.runKernel(yy,n)}const SD=O({isNaN_:CD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $D(t,e=.2){const r={x:N(t,"x","leakyRelu")},s={alpha:e};return z.runKernel(xy,r,s)}const J$=O({leakyRelu_:$D});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kD(t,e){let n=N(t,"a","less","string_or_numeric"),r=N(e,"b","less","string_or_numeric");[n,r]=dt(n,r),$e(n.shape,r.shape);const s={a:n,b:r};return z.runKernel(vy,s)}const Of=O({less_:kD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ID(t,e){let n=N(t,"a","lessEqual","string_or_numeric"),r=N(e,"b","lessEqual","string_or_numeric");[n,r]=dt(n,r),$e(n.shape,r.shape);const s={a:n,b:r};return z.runKernel(wy,s)}const jx=O({lessEqual_:ID});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ND(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:t,stop:e,num:n};return z.runKernel(by,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TD(t,e=5,n=1,r=1,s=.5){const o=N(t,"x","localResponseNormalization");T(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),T(qi(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=o,a=!1;o.rank===3&&(a=!0,i=H(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const u={x:i},l={depthRadius:e,bias:n,alpha:r,beta:s},c=z.runKernel(Ny,u,l);return a?H(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const ED=O({localResponseNormalization_:TD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RD(t){const n={x:N(t,"x","log","float32")};return z.runKernel(Cy,n)}const Fu=O({log_:RD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _D(t){const n={x:N(t,"x","log1p")};return z.runKernel(Sy,n)}const ek=O({log1p_:_D});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PD(t,e){T(xf(t),()=>"The f passed in variableGrads(f) must be a function"),T(e==null||Array.isArray(e)&&e.every(l=>l instanceof Yc),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=e!=null;if(!n){e=[];for(const l in z.registeredVariables)e.push(z.registeredVariables[l])}const r=n?e.filter(l=>!l.trainable):null,s=e.length;e=e.filter(l=>l.trainable),T(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const o=!0,{value:i,grads:a}=z.gradients(t,e,null,o);T(a.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),T(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const u={};return e.forEach((l,c)=>{a[c]!=null&&(u[l.name]=a[c])}),r!=null&&r.forEach(l=>u[l.name]=null),{value:i,grads:u}}function hs(t){return z.customGrad(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AD(t){const n={x:N(t,"x","neg")};return z.runKernel(My,n)}const Vr=O({neg_:AD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DD(t){const n={x:N(t,"x","softplus")};return z.runKernel(xx,n)}const tk=O({softplus_:DD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OD(t){const e=N(t,"x","logSigmoid");return hs(r=>({value:Vr(tk(Vr(r))),gradFunc:i=>Y(i,ts(Vr(r)))}))(e)}const FD=O({logSigmoid_:OD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LD(t,e){let n=N(t,"a","sub"),r=N(e,"b","sub");[n,r]=dt(n,r);const s={a:n,b:r};return z.runKernel(Rx,s)}const be=O({sub_:LD});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zD(t,e=-1){const n=N(t,"logits","logSoftmax");if(e===-1&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);return hs((s,o)=>{const a=Vi(s,e,!0),u=be(s,a),l=be(je(u,"float32"),Fu(qe(ds(u),e,!0)));return o([l]),{value:l,gradFunc:(d,h)=>{const[p]=h,f=!0,y=ds(p);return be(d,Y(qe(d,e,f),y))}}})(n)}const BD=O({logSoftmax_:zD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MD(t,e=null,n=!1){const r=N(t,"x","logSumExp"),s=Je(e,r.shape),o=Vi(r,s,!0),i=be(r,o),a=ds(i),u=qe(a,s),l=Fu(u),c=fe(H(o,l.shape),l);if(n){const d=Nn(c.shape,s);return H(c,d)}return c}const nk=O({logSumExp_:MD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VD(t,e){const n=N(t,"a","logicalAnd","bool"),r=N(e,"b","logicalAnd","bool");$e(n.shape,r.shape);const s={a:n,b:r};return z.runKernel($y,s)}const Zc=O({logicalAnd_:VD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WD(t){const n={x:N(t,"x","logicalNot","bool")};return z.runKernel(ky,n)}const rk=O({logicalNot_:WD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UD(t,e){const n=N(t,"a","logicalOr","bool"),r=N(e,"b","logicalOr","bool");$e(n.shape,r.shape);const s={a:n,b:r};return z.runKernel(Iy,s)}const sk=O({logicalOr_:UD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GD(t,e){const n=N(t,"a","logicalXor","bool"),r=N(e,"b","logicalXor","bool");return $e(n.shape,r.shape),Zc(sk(t,e),rk(Zc(t,e)))}const HD=O({logicalXor_:GD});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gl=2147483648;function jD(t,e,n="left"){const r=N(t,"sortedSequence","searchSorted"),s=N(e,"values","searchSorted"),o=r.shape[r.shape.length-1],i=s.shape[s.shape.length-1],a=H(r,[-1,o]),u=H(s,[-1,i]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(U(u.shape)>=Gl)throw new Error(`values tensor size must less than ${Gl}`);if(a.shape[1]>=Gl)throw new Error(`trailing dim_size must less than ${Gl} for int32 output type, was ${a.shape[1]}`);const l={sortedSequence:a,values:u},c={side:n};return z.runKernel(cx,l,c)}const Kx=O({searchSorted_:jD});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KD(t,e){return Kx(t,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XD(t,e,n,r,s){const o=N(t,"x","maxPool"),i=1;let a=o,u=!1;o.rank===3&&(u=!0,a=H(o,[1,o.shape[0],o.shape[1],o.shape[2]])),T(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),T(qt(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),ar("maxPool",r,s);const l={x:a},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s},d=z.runKernel(Ry,l,c);return u?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const ok=O({maxPool_:XD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qD(t,e=[1,1,1],n,r,s,o="NDHWC"){const i=N(t,"x","maxPool3d");let a=i,u=!1;i.rank===4&&(u=!0,a=H(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),T(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),T(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),ar("maxPool3d",r,s);const l={x:a},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:o},d=z.runKernel(_y,l,c);return u?H(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const YD=O({maxPool3d_:qD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QD(t,e,n,r,s=!1){const i={x:N(t,"x","maxPoolWithArgmax")},a={filterSize:e,strides:n,pad:r,includeBatchInIndex:s},u=z.runKernel(Py,i,a);return{result:u[0],indexes:u[1]}}const ZD=O({maxPoolWithArgmax_:QD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JD(t,e){let n=N(t,"a","maximum"),r=N(e,"b","maximum");[n,r]=dt(n,r),n.dtype==="bool"&&(n=je(n,"int32"),r=je(r,"int32")),$e(n.shape,r.shape);const s={a:n,b:r};return z.runKernel(Ey,s)}const ik=O({maximum_:JD});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eO(t,e=null,n=!1){const s={x:N(t,"x","mean")},o={axis:e,keepDims:n};return z.runKernel(Ay,s,o)}const Jc=O({mean_:eO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ps(t,e="float32"){if(Mn(t),e==="complex64"){const r=ps(t,"float32"),s=ps(t,"float32");return Ks(r,s)}const n=as(U(t),e);return z.makeTensor(n,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function No(t,e="float32"){if(Mn(t),e==="complex64"){const r=No(t,"float32"),s=ps(t,"float32");return Ks(r,s)}const n=RS(U(t),e);return z.makeTensor(n,t,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tO(t,e,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(t===void 0)return[];let r=N(t,"x","meshgrid",t instanceof at?t.dtype:"float32");if(e===void 0)return[r];let s=N(e,"y","meshgrid",e instanceof at?e.dtype:"float32");const o=U(r.shape),i=U(s.shape);return n==="xy"?(r=H(r,[1,-1]),s=H(s,[-1,1]),[We(No([i,1],r.dtype),r),We(s,No([1,o],s.dtype))]):(r=H(r,[-1,1]),s=H(s,[1,-1]),[We(r,No([1,i],r.dtype)),We(No([o,1],s.dtype),s)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nO(t,e){let n=N(t,"a","minimum"),r=N(e,"b","minimum");[n,r]=dt(n,r),n.dtype==="bool"&&(n=je(n,"int32"),r=je(r,"int32")),$e(n.shape,r.shape);const s={a:n,b:r};return z.runKernel(Oy,s)}const Lu=O({minimum_:nO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rO(t,e,n){T(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=N(t,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");T(e.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`);const s=n==="reflect"?1:0;for(let a=0;a<r.rank;a++)T(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),T(e[a][0]>=0&&e[a][0]<=r.shape[a]-s&&e[a][1]>=0&&e[a][1]<=r.shape[a]-s,()=>`Padding in dimension ${a} cannot be greater than or equal to ${r.shape[a]-s} or less than 0 for input of shape ${r.shape}`);const o={paddings:e,mode:n},i={x:r};return z.runKernel(Fy,i,o)}const ak=O({mirrorPad_:rO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sO(t,e){let n=N(t,"a","mod"),r=N(e,"b","mod");[n,r]=dt(n,r);const s={a:n,b:r};return z.runKernel(Ly,s)}const oO=O({mod_:sO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iO(t,e=null,n=!1){t=N(t,"x","moments");const r=Je(e,t.shape),s=Jc(t,r,n);let o=s.shape;n||(o=Nn(s.shape,r));const i=er(be(je(t,"float32"),H(s,o))),a=Jc(i,r,n);return{mean:s,variance:a}}const aO=O({moments_:iO});function uO(t,e,n,r){const s=N(e,"data","multiRNNCell"),o=Qc(n,"c","multiRNNCell"),i=Qc(r,"h","multiRNNCell");let a=s;const u=[];for(let d=0;d<t.length;d++){const h=t[d](a,o[d],i[d]);u.push(h[0]),u.push(h[1]),a=h[1]}const l=[],c=[];for(let d=0;d<u.length;d+=2)l.push(u[d]),c.push(u[d+1]);return[l,c]}const lO=O({multiRNNCell_:uO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cO(t,e,n,r=!1){const s=N(t,"logits","multinomial"),o=s.size,i=s.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const u={logits:i===1?H(s,[1,-1]):s},l={numSamples:e,seed:n,normalized:r},c=z.runKernel(zy,u,l);return i===1?H(c,[c.size]):c}const dO=O({multinomial_:cO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hO(t,e){let n=N(t,"a","notEqual","string_or_numeric"),r=N(e,"b","notEqual","string_or_numeric");[n,r]=dt(n,r),$e(n.shape,r.shape);const s={a:n,b:r};return z.runKernel(Vy,s)}const uk=O({notEqual_:hO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pO(t,e,n=1,r=0,s="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const i={indices:N(t,"indices","oneHot","int32")},a={dtype:s,depth:e,onValue:n,offValue:r};return z.runKernel(Hy,i,a)}const fO=O({oneHot_:pO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mO(t){const n={x:N(t,"x","onesLike")};return z.runKernel(Gy,n)}const gO=O({onesLike_:mO});function yO(t,e){const n=N(t,"v1","outerProduct"),r=N(e,"v2","outerProduct");T(n.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const s=H(n,[-1,1]),o=H(r,[1,-1]);return We(s,o)}const xO=O({outerProduct_:yO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vO(t,e,n=0){const r=N(t,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:n},o={x:r};return z.runKernel(Ky,o,s)}const qs=O({pad_:vO});function wO(t,e,n=0){return T(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),qs(t,[e],n)}const bO=O({pad1d_:wO});function CO(t,e,n=0){return T(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),qs(t,e,n)}const SO=O({pad2d_:CO});function $O(t,e,n=0){return T(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),qs(t,e,n)}const kO=O({pad3d_:$O});function IO(t,e,n=0){return T(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),qs(t,e,n)}const NO=O({pad4d_:IO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TO(t,e,n){const r=N(t,"x","spaceToBatchND");T(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),T(n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),T(r.shape.reduce((i,a,u)=>u>0&&u<=e.length?i&&(a+n[u-1][0]+n[u-1][1])%e[u-1]===0:i,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`);const s={x:r},o={blockShape:e,paddings:n};return z.runKernel(bx,s,o)}const lk=O({spaceToBatchND_:TO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EO(t,e,n,r,s,o,i){s==null&&(s=[1,1]),o==null&&(o=1),r===0&&(r="valid");const a=N(t,"x","maxPool");let u=a,l=!1;a.rank===3&&(l=!0,u=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),T(qt(o,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${s}'`);const c=ir(u.shape,e,o,s,r),d=[c.dilationHeight,c.dilationWidth];let h;r==="same"?h=_O([c.filterHeight,c.filterWidth],d):h=[[0,0],[0,0]];const p=d[0]===1&&d[1]===1,[f,y]=RO([c.inHeight,c.inWidth],d,h),x=p?r:"valid",g=p?u:lk(u,d,f),b=(n==="avg"?()=>B$(g,e,o,x,i):()=>ok(g,e,o,x,i))(),S=p?b:M$(b,d,y);return l?H(S,[S.shape[1],S.shape[2],S.shape[3]]):S}function RO(t,e,n){const r=n.map(c=>c[0]),s=n.map(c=>c[1]),o=t.concat(r,s),i=e.map((c,d)=>(c-o[d]%c)%c),a=s.map((c,d)=>c+i[d]),u=e.map((c,d)=>[r[d],a[d]]),l=e.map((c,d)=>[0,i[d]]);return[u,l]}function _O(t,e){const r=t.map((i,a)=>i+(i-1)*(e[a]-1)).map(i=>i-1),s=r.map(i=>Math.floor(i/2)),o=r.map((i,a)=>i-s[a]);return r.map((i,a)=>[s[a],o[a]])}const PO=O({pool_:EO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AO(t,e){const n=N(t,"x","prelu"),r=N(e,"alpha","prelu"),s={x:n,alpha:r};return z.runKernel(qy,s)}const ck=O({prelu_:AO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DO(t,e=null,n=!1){let r=N(t,"x","prod");r.dtype==="bool"&&(r=je(r,"int32"));const s={x:r},o={axis:e,keepDims:n};return z.runKernel(Yy,s,o)}const OO=O({prod_:DO});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FO(t,e,n,r){const s=t.map((c,d)=>N(c,`tensors${d}`,"raggedGather","int32")),o=N(e,"paramsDenseValues","raggedGather"),i=N(n,"indices","raggedGather","int32"),a={paramsNestedSplits:s,paramsDenseValues:o,indices:i},u={outputRaggedRank:r},l=z.runKernel(US,a,u);return{outputNestedSplits:l.slice(0,l.length-1),outputDenseValues:l[l.length-1]}}const LO=O({raggedGather_:FO});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zO(t,e,n){const r=N(t,"starts","raggedRange"),s=N(e,"limits","raggedRange",r.dtype),o=N(n,"deltas","raggedRange",r.dtype),i={starts:r,limits:s,deltas:o},a=z.runKernel(GS,i);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}const BO=O({raggedRange_:zO});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MO(t,e,n,r,s){const o=N(t,"shape","raggedTensorToTensor","int32"),i=N(e,"values","raggedTensorToTensor"),a=N(n,"defaultValue","raggedTensorToTensor",i.dtype),u=r.map((d,h)=>N(d,`tensors${h}`,"raggedTensorToTensor","int32")),l={shape:o,values:i,defaultValue:a,rowPartitionTensors:u},c={rowPartitionTypes:s};return z.runKernel(HS,l,c)}const VO=O({raggedTensorToTensor_:MO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WO(t,e,n){Mn(t);const r=U(t);let s=null;if(n==null||n==="float32")s=new Float32Array(r);else if(n==="int32")s=new Int32Array(r);else if(n==="bool")s=new Uint8Array(r);else throw new Error(`Unknown data type ${n}`);for(let o=0;o<r;o++)s[o]=e();return z.makeTensor(s,t,n)}const UO=O({rand_:WO});var Xx={exports:{}};Xx.exports;(function(t){(function(e,n,r){function s(u){var l=this,c=a();l.next=function(){var d=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=d-(l.c=d|0)},l.c=1,l.s0=c(" "),l.s1=c(" "),l.s2=c(" "),l.s0-=c(u),l.s0<0&&(l.s0+=1),l.s1-=c(u),l.s1<0&&(l.s1+=1),l.s2-=c(u),l.s2<0&&(l.s2+=1),c=null}function o(u,l){return l.c=u.c,l.s0=u.s0,l.s1=u.s1,l.s2=u.s2,l}function i(u,l){var c=new s(u),d=l&&l.state,h=c.next;return h.int32=function(){return c.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&o(d,c),h.state=function(){return o(c,{})}),h}function a(){var u=4022871197,l=function(c){c=String(c);for(var d=0;d<c.length;d++){u+=c.charCodeAt(d);var h=.02519603282416938*u;u=h>>>0,h-=u,h*=u,u=h>>>0,h-=u,u+=h*4294967296}return(u>>>0)*23283064365386963e-26};return l}n&&n.exports?n.exports=i:this.alea=i})(Lr,t)})(Xx);var GO=Xx.exports,qx={exports:{}};qx.exports;(function(t){(function(e,n,r){function s(a){var u=this,l="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var d=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^d^d>>>8},a===(a|0)?u.x=a:l+=a;for(var c=0;c<l.length+64;c++)u.x^=l.charCodeAt(c)|0,u.next()}function o(a,u){return u.x=a.x,u.y=a.y,u.z=a.z,u.w=a.w,u}function i(a,u){var l=new s(a),c=u&&u.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var h=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,c&&(typeof c=="object"&&o(c,l),d.state=function(){return o(l,{})}),d}n&&n.exports?n.exports=i:this.xor128=i})(Lr,t)})(qx);var HO=qx.exports,Yx={exports:{}};Yx.exports;(function(t){(function(e,n,r){function s(a){var u=this,l="";u.next=function(){var d=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(d^d<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,a===(a|0)?u.x=a:l+=a;for(var c=0;c<l.length+64;c++)u.x^=l.charCodeAt(c)|0,c==l.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function o(a,u){return u.x=a.x,u.y=a.y,u.z=a.z,u.w=a.w,u.v=a.v,u.d=a.d,u}function i(a,u){var l=new s(a),c=u&&u.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var h=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,c&&(typeof c=="object"&&o(c,l),d.state=function(){return o(l,{})}),d}n&&n.exports?n.exports=i:this.xorwow=i})(Lr,t)})(Yx);var jO=Yx.exports,Qx={exports:{}};Qx.exports;(function(t){(function(e,n,r){function s(a){var u=this;u.next=function(){var c=u.x,d=u.i,h,p;return h=c[d],h^=h>>>7,p=h^h<<24,h=c[d+1&7],p^=h^h>>>10,h=c[d+3&7],p^=h^h>>>3,h=c[d+4&7],p^=h^h<<7,h=c[d+7&7],h=h^h<<13,p^=h^h<<9,c[d]=p,u.i=d+1&7,p};function l(c,d){var h,p=[];if(d===(d|0))p[0]=d;else for(d=""+d,h=0;h<d.length;++h)p[h&7]=p[h&7]<<15^d.charCodeAt(h)+p[h+1&7]<<13;for(;p.length<8;)p.push(0);for(h=0;h<8&&p[h]===0;++h);for(h==8?p[7]=-1:p[h],c.x=p,c.i=0,h=256;h>0;--h)c.next()}l(u,a)}function o(a,u){return u.x=a.x.slice(),u.i=a.i,u}function i(a,u){a==null&&(a=+new Date);var l=new s(a),c=u&&u.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var h=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,c&&(c.x&&o(c,l),d.state=function(){return o(l,{})}),d}n&&n.exports?n.exports=i:this.xorshift7=i})(Lr,t)})(Qx);var KO=Qx.exports,Zx={exports:{}};Zx.exports;(function(t){(function(e,n,r){function s(a){var u=this;u.next=function(){var c=u.w,d=u.X,h=u.i,p,f;return u.w=c=c+1640531527|0,f=d[h+34&127],p=d[h=h+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=d[h]=f^p,u.i=h,f+(c^c>>>16)|0};function l(c,d){var h,p,f,y,x,g=[],v=128;for(d===(d|0)?(p=d,d=null):(d=d+"\0",p=0,v=Math.max(v,d.length)),f=0,y=-32;y<v;++y)d&&(p^=d.charCodeAt((y+32)%d.length)),y===0&&(x=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,y>=0&&(x=x+1640531527|0,h=g[y&127]^=p+x,f=h==0?f+1:0);for(f>=128&&(g[(d&&d.length||0)&127]=-1),f=127,y=4*128;y>0;--y)p=g[f+34&127],h=g[f=f+1&127],p^=p<<13,h^=h<<17,p^=p>>>15,h^=h>>>12,g[f]=p^h;c.w=x,c.X=g,c.i=f}l(u,a)}function o(a,u){return u.i=a.i,u.w=a.w,u.X=a.X.slice(),u}function i(a,u){a==null&&(a=+new Date);var l=new s(a),c=u&&u.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var h=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,c&&(c.X&&o(c,l),d.state=function(){return o(l,{})}),d}n&&n.exports?n.exports=i:this.xor4096=i})(Lr,t)})(Zx);var XO=Zx.exports,Jx={exports:{}};Jx.exports;(function(t){(function(e,n,r){function s(a){var u=this,l="";u.next=function(){var d=u.b,h=u.c,p=u.d,f=u.a;return d=d<<25^d>>>7^h,h=h-p|0,p=p<<24^p>>>8^f,f=f-d|0,u.b=d=d<<20^d>>>12^h,u.c=h=h-p|0,u.d=p<<16^h>>>16^f,u.a=f-d|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,a===Math.floor(a)?(u.a=a/4294967296|0,u.b=a|0):l+=a;for(var c=0;c<l.length+20;c++)u.b^=l.charCodeAt(c)|0,u.next()}function o(a,u){return u.a=a.a,u.b=a.b,u.c=a.c,u.d=a.d,u}function i(a,u){var l=new s(a),c=u&&u.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var h=l.next()>>>11,p=(l.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,c&&(typeof c=="object"&&o(c,l),d.state=function(){return o(l,{})}),d}n&&n.exports?n.exports=i:this.tychei=i})(Lr,t)})(Jx);var qO=Jx.exports,dk={exports:{}};const YO={},QO=Object.freeze(Object.defineProperty({__proto__:null,default:YO},Symbol.toStringTag,{value:"Module"})),ZO=XT(QO);(function(t){(function(e,n,r){var s=256,o=6,i=52,a="random",u=r.pow(s,o),l=r.pow(2,i),c=l*2,d=s-1,h;function p(S,I,E){var R=[];I=I==!0?{entropy:!0}:I||{};var _=g(x(I.entropy?[S,b(n)]:S??v(),3),R),L=new f(R),F=function(){for(var V=L.g(o),j=u,K=0;V<l;)V=(V+K)*s,j*=s,K=L.g(1);for(;V>=c;)V/=2,j/=2,K>>>=1;return(V+K)/j};return F.int32=function(){return L.g(4)|0},F.quick=function(){return L.g(4)/4294967296},F.double=F,g(b(L.S),n),(I.pass||E||function(V,j,K,Z){return Z&&(Z.S&&y(Z,L),V.state=function(){return y(L,{})}),K?(r[a]=V,j):V})(F,_,"global"in I?I.global:this==r,I.state)}function f(S){var I,E=S.length,R=this,_=0,L=R.i=R.j=0,F=R.S=[];for(E||(S=[E++]);_<s;)F[_]=_++;for(_=0;_<s;_++)F[_]=F[L=d&L+S[_%E]+(I=F[_])],F[L]=I;(R.g=function(V){for(var j,K=0,Z=R.i,ne=R.j,ce=R.S;V--;)j=ce[Z=d&Z+1],K=K*s+ce[d&(ce[Z]=ce[ne=d&ne+j])+(ce[ne]=j)];return R.i=Z,R.j=ne,K})(s)}function y(S,I){return I.i=S.i,I.j=S.j,I.S=S.S.slice(),I}function x(S,I){var E=[],R=typeof S,_;if(I&&R=="object")for(_ in S)try{E.push(x(S[_],I-1))}catch{}return E.length?E:R=="string"?S:S+"\0"}function g(S,I){for(var E=S+"",R,_=0;_<E.length;)I[d&_]=d&(R^=I[d&_]*19)+E.charCodeAt(_++);return b(I)}function v(){try{var S;return h&&(S=h.randomBytes)?S=S(s):(S=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(S)),b(S)}catch{var I=e.navigator,E=I&&I.plugins;return[+new Date,e,E,e.screen,b(n)]}}function b(S){return String.fromCharCode.apply(0,S)}if(g(r.random(),n),t.exports){t.exports=p;try{h=ZO}catch{}}else r["seed"+a]=p})(typeof self<"u"?self:Lr,[],Math)})(dk);var JO=dk.exports,eF=GO,tF=HO,nF=jO,rF=KO,sF=XO,oF=qO,Qo=JO;Qo.alea=eF;Qo.xor128=tF;Qo.xorwow=nF;Qo.xorshift7=rF;Qo.xor4096=sF;Qo.tychei=oF;var e0=Qo;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class t0{constructor(e,n,r,s,o){this.mean=e,this.stdDev=n,this.dtype=r,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=o||Math.random();this.random=e0.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const s=this.nextVal;return this.nextVal=NaN,s}let e,n,r=!1;for(;!r;){let s,o,i;do s=2*this.random()-1,o=2*this.random()-1,i=s*s+o*o;while(i>=1||i===0);const a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*s*a,n=this.mean+this.stdDev*o*a,(!this.truncated||this.isValidTruncated(e))&&(r=!0)}return(!this.truncated||this.isValidTruncated(n))&&(this.nextVal=this.convertValue(n)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class iF{constructor(e,n,r,s){this.alpha=e,this.beta=1/n,this.dtype=r;const o=s||Math.random();this.randu=e0.alea(o.toString()),this.randn=new t0(0,1,r,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,n,r,s,o,i;for(;;){do s=this.randn.nextValue(),i=1+this.c*s;while(i<=0);if(i*=i*i,e=s*s,n=1-.331*e*e,r=.5*e+this.d*(1-i+Math.log(i)),o=this.randu(),o<n||Math.log(o)<r)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class aF{constructor(e=0,n=1,r,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=n-e,this.dtype=r,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${n} <= 1 and dtype is not float`);this.random=e0.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uF(t,e,n=1,r="float32",s){if(Mn(t),n==null&&(n=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);const o=new iF(e,n,r,s),i=Be(t,r);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const lF=O({randomGamma_:uF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cF(t,e=0,n=1,r,s){if(Mn(t),r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);const o=new t0(e,n,r,!1,s),i=Be(t,r);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const hk=O({randomNormal_:cF});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dF(t,e,n){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return hk(t,0,1,e,n)}const hF=O({randomStandardNormal_:dF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pF(t,e=0,n=1,r="float32",s){Mn(t);const o=Be(t,r),i=new aF(e,n,null,s);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const n0=O({randomUniform_:pF});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fF(t,e,n,r){return n0(t,e,n,"int32",r)}const mF=O({randomUniformInt_:fF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zu(t,e,n=1,r="float32"){if(n===0)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:r};return z.runKernel(Qy,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gF(t){const n={input:N(t,"input","real")};return z.runKernel(Zy,n)}const Bu=O({real_:gF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yF(t){const n={x:N(t,"x","reciprocal")};return z.runKernel(Jy,n)}const xF=O({reciprocal_:yF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vF(t){const n={x:N(t,"x","relu")};return z.runKernel(ex,n)}const Md=O({relu_:vF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wF(t){const n={x:N(t,"x","relu6")};return z.runKernel(sx,n)}const pk=O({relu6_:wF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bF(t,e){const r={x:N(t,"x","reverse")},s={dims:e};return z.runKernel(ox,r,s)}const Go=O({reverse_:bF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CF(t){const e=N(t,"x","reverse");return T(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Go(e,0)}const SF=O({reverse1d_:CF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $F(t,e){const n=N(t,"x","reverse");return T(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Go(n,e)}const kF=O({reverse2d_:$F});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IF(t,e){const n=N(t,"x","reverse");return T(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Go(n,e)}const NF=O({reverse3d_:IF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TF(t,e){const n=N(t,"x","reverse");return T(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Go(n,e)}const EF=O({reverse4d_:TF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RF(t){const n={x:N(t,"x","round")};return z.runKernel(ix,n)}const fk=O({round_:RF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _F(t){const n={x:N(t,"x","rsqrt","float32")};return z.runKernel(ax,n)}const PF=O({rsqrt_:_F});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AF(t){const n={x:N(t,"x","selu")};return z.runKernel(hx,n)}const DF=O({selu_:AF});function OF(t,e,n,r,s,o=[1,1],i="NHWC"){const a=N(t,"x","separableConv2d"),u=N(e,"depthwiseFilter","separableConv2d"),l=N(n,"pointwiseFilter","separableConv2d");let c=a,d=!1;if(a.rank===3&&(d=!0,c=H(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");T(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),T(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),T(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),T(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),T(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const h=u.shape[2],p=u.shape[3];T(l.shape[2]===h*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${l.shape[2]}.`);const f=Gx(c,u,r,s,i,o),x=Fd(f,l,1,"valid",i);return d?H(x,[x.shape[1],x.shape[2],x.shape[3]]):x}const FF=O({separableConv2d_:OF});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function LF(t,e){const n=N(t,"x","setdiff1d"),r=N(e,"y","setdiff1d");T(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),T(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),T(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=await n.data(),o=await r.data(),i=new Set(o);let a=0;for(let c=0;c<s.length;c++)i.has(s[c])||a++;const u=new Qi([a],n.dtype),l=new Qi([a],"int32");for(let c=0,d=0;c<s.length;c++)i.has(s[c])||(u.values[d]=s[c],l.values[d]=c,d++);return[u.toTensor(),l.toTensor()]}const zF=LF;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BF(t){const n={x:N(t,"x","sign")};return z.runKernel(gx,n)}const MF=O({sign_:BF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VF(t){const n={x:N(t,"x","sin","float32")};return z.runKernel(fx,n)}const WF=O({sin_:VF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UF(t){const n={x:N(t,"x","sinh")};return z.runKernel(mx,n)}const GF=O({sinh_:UF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HF(t,e,n){const r=N(t,"x","slice1d");return T(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),ke(r,[e],[n])}const jF=O({slice1d_:HF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KF(t,e,n){const r=N(t,"x","slice2d");return T(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),ke(r,e,n)}const XF=O({slice2d_:KF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qF(t,e,n){const r=N(t,"x","slice3d");return T(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),ke(r,e,n)}const YF=O({slice3d_:qF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QF(t,e,n){const r=N(t,"x","slice4d");return T(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),ke(r,e,n)}const ZF=O({slice4d_:QF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JF(t,e=-1){const n=N(t,"logits","softmax","float32");if(e===-1&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},s={dim:e};return z.runKernel(Sx,r,s)}const eL=O({softmax_:JF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tL(t){T(t.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`);const e={input:t};return z.runKernel(ry,e)}const r0=O({fft_:tL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nL(t){T(t.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`);const e={input:t};return z.runKernel(py,e)}const ed=O({ifft_:nL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rL(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e<=2){const s=H(t,[n,e]);r=ed(s)}else{const s=[n,2*(e-1)],o=H(Bu(t),[n,e]),i=H(Bd(t),[n,e]),a=Go(ke(o,[0,1],[n,e-2]),1),u=Y(Go(ke(i,[0,1],[n,e-2]),1),Ie(-1)),l=St([o,a],1),c=St([i,u],1),d=H(Ks(l,c),[s[0],s[1]]);r=ed(d)}if(r=Bu(r),t.rank===3&&t.shape[0]!==0){const s=r,o=t.shape[0];r=H(r,[o,r.shape[0]/o,r.shape[1]]),s.dispose()}return r}const mk=O({irfft_:rL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sL(t,e,n=0){const s={x:N(t,"x","split")},o={numOrSizeSplits:e,axis:n};return z.runKernel(Cx,s,o)}const Mu=O({split_:sL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oL(t,e){T(t.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${t.dtype}`);let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(e!=null&&e<n){const f=t.shape.map(x=>0),y=t.shape.map(x=>x);y[t.shape.length-1]=e,s=ke(t,f,y),n=e}else if(e!=null&&e>n){const f=t.shape.map(y=>y);f[t.shape.length-1]=e-n,s=St([t,ps(f)],t.shape.length-1),n=e}else s=t;const o=Fn(s),i=H(Ks(s,o),[r,n]),a=r0(i),u=Math.floor(n/2)+1,l=Bu(a),c=Bd(a),d=Mu(l,[u,n-u],l.shape.length-1),h=Mu(c,[u,n-u],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=u,H(Ks(d[0],h[0]),p)}const s0=O({rfft_:oL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iL(t,e){let n=N(t,"a","squaredDifference"),r=N(e,"b","squaredDifference");[n,r]=dt(n,r),$e(n.shape,r.shape);const s={a:n,b:r},o={};return z.runKernel(Nx,s,o)}const gk=O({squaredDifference_:iL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aL(t,e){const n=N(t,"x","squeeze","string_or_numeric");return H(n,eo(n.shape,e).newShape)}const Ve=O({squeeze_:aL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uL(t,e=0){const n=Qc(t,"tensors","stack","string_or_numeric");T(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&T(e<=n[0].rank,()=>"Axis must be <= rank of the tensor");const r=n,s={axis:e};return z.runKernel(jy,r,s)}const fs=O({stack_:uL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lL(t,e=0){const r={x:N(t,"x","step")},s={alpha:e};return z.runKernel(zx,r,s)}const yk=O({step_:lL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cL(t,e,n,r,s=0,o=0,i=0,a=0,u=0){const c={x:N(t,"x","stridedSlice","string_or_numeric")},d={begin:e,end:n,strides:r,beginMask:s,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:u};return z.runKernel(Tx,c,d)}const dL=O({stridedSlice_:cL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hL(t){const n={x:N(t,"x","tan","float32")};return z.runKernel(_x,n)}const pL=O({tan_:hL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dt(t,e){ca(t);const n=to(t,e);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return no(t,null,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tr(t,e,n){if(ca(t),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const r=to(t,n);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return no(t,e,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xk(t,e,n){if(ca(t),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const r=to(t,n);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return no(t,e,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fL(t,e,n){if(ca(t),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const r=to(t,n);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return no(t,e,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mL(t,e,n){if(ca(t),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const r=to(t,n);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return no(t,e,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gL(t,e,n){if(ca(t),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const r=to(t,n);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||r,no(t,e,r,n)}function vk(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(o+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(o+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+t.length-r)throw new Error(o+` update.rank != ${s+t.length-r}`);for(let i=0;i<s;++i)if(n.shape[i]!==e.shape[i])throw new Error(o+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<n.rank-s;++i)if(n.shape[i+s]!==t[i+r])throw new Error(o+` updates.shape[${i+s}] (${n.shape[i+s]}) != shape[${i+s}] (${t[i+s]})`)}function o0(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(t.size===0)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}vk(n,e,t)}function Zo(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,o=n.length;let i=1;for(let d=s;d<o;++d)i*=n[d];const a=s<1?1:s,u=U(e.shape)/a,l=[...lt(n.slice(0,s)),1],c=U(n);return{sliceRank:s,numUpdates:u,sliceSize:i,strides:l,outputSize:c}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yL(t,e,n){const r=N(t,"tensor","tensorScatterupdate"),s=N(e,"indices","tensorScatterupdate","int32"),o=N(n,"updates","tensorScatterupdate");if(o0(o,s,r.shape),r.dtype!==o.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${o.dtype}.`);const i={tensor:r,indices:s,updates:o},a={};return z.runKernel(lx,i,a)}const xL=O({tensorScatterUpdate_:yL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vL(t,e=1,n=!0){const r=N(t,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const o={x:r},i={k:e,sorted:n},[a,u]=z.runKernel(Ax,o,i);return{values:a,indices:u}}const wL=O({topk_:vL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bL(t,e=0,n=1,r,s){if(Mn(t),r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new t0(e,n,r,!0,s),i=Be(t,r);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const CL=O({truncatedNormal_:bL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SL(t,e=0){const n=N(t,"x","unique","string_or_numeric");T(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},s={axis:e},[o,i]=z.runKernel(e$,r,s);return{values:o,indices:i}}const $L=O({unique_:SL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kL(t,e,n){const r=N(t,"x","unsortedSegmentSum"),s=N(e,"segmentIds","unsortedSegmentSum","int32");T(qi(n),()=>"numSegments must be of dtype int");const o={x:r,segmentIds:s},i={numSegments:n};return z.runKernel(Fx,o,i)}const IL=O({unsortedSegmentSum_:kL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NL(t,e=0){const n=N(t,"x","unstack","string_or_numeric");T(e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`);const r={value:n},s={axis:e};return z.runKernel(Ox,r,s)}const Jo=O({unstack_:NL});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TL(t,e){return Kx(t,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EL(t,e=!0,n,r){return z.makeVariable(t,e,n,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wk(t,e){const n=[];for(let o=0;o<e.length;o++)e[o]&&n.push(o);const r=Be(t,"int32"),s=Be([n.length,t.length],"int32");for(let o=0;o<n.length;o++){const i=r.indexToLoc(n[o]),a=o*t.length;s.values.set(i,a)}return s.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function RL(t){const e=N(t,"condition","whereAsync","bool"),n=await e.data(),r=wk(e.shape,n);return t!==e&&e.dispose(),r}const bk=RL;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function _L(t,e,n){const r=N(t,"tensor","boolMask"),s=N(e,"mask","boolMask","bool"),o=n??0,i=s.rank,a=r.shape;T(i>0,()=>"mask cannot be scalar"),kn(a.slice(o,o+i),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let y=o;y<o+i;y++)u*=a[y];const l=a.slice(0,o).concat([u],a.slice(o+i)),c=H(r,l),d=H(s,[-1]),h=await bk(d),p=Ve(h,[1]),f=Q$(c,p,o);return t!==r&&r.dispose(),e!==s&&s.dispose(),p.dispose(),c.dispose(),d.dispose(),h.dispose(),f}const PL=_L;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AL(t,e,n){const r=N(t,"x","transpose");if(e==null&&(e=r.shape.map((i,a)=>a).reverse()),T(r.rank===e.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${e}.`),e.forEach(i=>{T(i>=0&&i<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${e}`)}),r.rank<=1)return r.clone();const s={x:r},o={perm:e};return r.dtype==="complex64"?xe(()=>{let i=Bu(r),a=Bd(r);return i=z.runKernel(cu,{x:i},o),a=z.runKernel(cu,{x:a},o),n&&(a=Vr(a)),Ks(i,a)}):z.runKernel(cu,s,o)}const Ff=O({transpose_:AL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DL(t,e,n,r,s=!0){const o=N(t,"v","movingAverage"),i=N(e,"x","movingAverage"),a=N(n,"decay","movingAverage");i_(o,i),T(ze(o.shape,i.shape),()=>"Shape mismatch in v and x");const u=Ie(1),l=be(u,a);let c=Y(be(i,o),l);if(s){T(r!=null,()=>"When using zeroDebias: true, step is required.");const d=N(r,"step","movingAverage");c=Te(c,be(u,Ou(a,d)))}return fe(o,c)}const OL=O({movingAverage_:DL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FL(t,e,n){Mn(n);const r=N(t,"indices","scatterND","int32"),s=N(e,"updates","scatterND");o0(s,r,n);const o={indices:r,updates:s},i={shape:n};return z.runKernel(ux,o,i)}const LL=O({scatterND_:FL});function zL(t,e,n,r){if(t.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const s=t.rank>0?t.shape[0]:1,o=t.rank>1?t.shape[1]:1;if(n.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${o}.`);const i=e.size;if(!(e.rank===0||e.rank===1&&i===s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BL(t,e,n,r=0){Mn(n);const s=N(t,"sparseIndices","sparseToDense","int32"),o=N(e,"sparseValues","sparseToDense","string_or_numeric"),i=N(r,"defaultValue","sparseToDense",o.dtype);zL(s,o,n,i);const a={sparseIndices:s,sparseValues:o,defaultValue:i},u={outputShape:n};return z.runKernel(Ix,a,u)}const ML=O({sparseToDense_:BL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VL(t,e){const n=N(e,"indices","gatherND","int32"),s={params:N(t,"x","gatherND","string_or_numeric"),indices:n};return z.runKernel(cy,s)}const WL=O({gatherND_:VL});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UL(t,e){if(e==null)return t.shape.slice();if(ze(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)e[r]==null&&t.shape[r]!=null?n.push(t.shape[r]):n.push(e[r]);return n}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GL(t,e,n,r){const s=N(t,"x","dropout");if(T(s.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),T(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return t instanceof at?s.clone():s;const o=UL(s,n),i=1-e,a=Te(Y$(fe(n0(o,0,1,"float32",r),i)),i);return Y(s,a)}const HL=O({dropout_:GL});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ck(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function i0(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let o=0;o<t;++o){const i=2*Math.PI*o/(t+r-1);s[o]=e-n*Math.cos(i)}return Dt(s,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function jL(t,e,n=1){const r=N(t,"predictions","inTopK"),s=N(e,"targets","inTopK");T(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),T(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),kn(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=r.shape[r.shape.length-1];T(n>0&&n<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${n}`);const i=await r.data(),a=await s.data(),[u,l]=[i.length/o,o],c=Ur("bool",u);for(let d=0;d<u;d++){const h=d*l,p=i.subarray(h,h+l),f=[];for(let y=0;y<p.length;y++)f.push({value:p[y],index:y});f.sort((y,x)=>x.value-y.value),c[d]=0;for(let y=0;y<n;y++)if(f[y].index===a[d]){c[d]=1;break}}return t!==r&&r.dispose(),e!==s&&s.dispose(),Mr(c,s.shape,"bool")}const KL=jL;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XL(t,e,n,r,s,o="NHWC",i){let a=t;t.rank===3&&(a=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u=e;u.rank===3&&(u=H(e,[1,e.shape[0],e.shape[1],e.shape[2]])),T(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),T(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),T(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const l=o==="NHWC"?a.shape[3]:a.shape[1],c=o==="NHWC"?u.shape[3]:u.shape[1];T(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`),T(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),ar("conv2dDerFilter",s,i);const d={x:a,dy:u},h={strides:r,pad:s,dataFormat:o,dimRoundingMode:i,filterShape:n};return z.runKernel(Ag,d,h)}const qL=O({conv2DBackpropFilter_:XL});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vd(t,e,n){if(n==null||n==="linear")return t;if(n==="relu")return Y(t,yk(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Wd(t,e){let n=e;const r=G$(t.shape,e.shape);return r.length>0&&(n=qe(n,r)),H(n,t.shape)}function Ud(t,e,n,r){if(e==="linear")return t;if(e==="relu")return Md(t);if(e==="elu")return j$(t);if(e==="relu6")return pk(t);if(e==="prelu")return ck(t,n);if(e==="leakyrelu")return J$(t,r);if(e==="sigmoid")return ts(t);throw new Error(`Unknown fused activation ${e}.`)}const Gd=(t,e)=>!(t>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YL({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",Gd(z.state.gradientDepth,u)===!1){T(s==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let E=Fd(t,e,n,r,s,o,i);return a!=null&&(E=fe(E,a)),Ud(E,u,l,c)}const d=N(t,"x","conv2d","float32"),h=N(e,"filter","conv2d","float32");let p=d,f=!1;d.rank===3&&(f=!0,p=H(d,[1,d.shape[0],d.shape[1],d.shape[2]])),T(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),T(h.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),ar("fused conv2d",r,i);const y=s==="NHWC"?p.shape[3]:p.shape[1];T(h.shape[2]===y,()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${h.shape[2]}.`),T(qt(n,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);const x=gt(p.shape,h.shape,n,o,r,i);let g;a!=null&&(g=N(a,"bias","fused conv2d"),[g]=dt(g,d),s==="NHWC"?$e(x.outShape,g.shape):(T(g.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${g.shape.length}.`),T(g.shape.length===0||g.shape[0]===x.outChannels||g.shape[0]===1,()=>`Error in fused conv2d: bias shape (${g.shape}) is not compatible with the number of output channels (${x.outChannels})`)));let v;if(l!=null){const E=l.shape;if(T(E.length<=1||E.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${E.length}.`),E.length===1)T(E[0]===1||E[0]===x.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${E}) is not compatible with the number of output channels (${x.outChannels}).`);else if(E.length===3)try{$e(E,x.outShape)}catch{const _=`Error in fused conv2d: PReLU activation weights (${E}) is not compatible with the output shape of the conv2d (${x.outShape}).`;throw Error(_)}v=N(l,"prelu weights","fused conv2d")}const b=(E,R)=>{T(s==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);const[_,L,F,V]=R,j=Vd(E,F,u);T(Du(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const K=U$(L.shape,j,_,n,r),Z=qL(L,j,_.shape,n,r),ne=[K,Z];if(V!=null){const ce=Wd(V,j);ne.push(ce)}return ne},S={x:p,filter:h,bias:g,preluActivationWeights:v},I={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:u,leakyreluAlpha:c};return a==null?hs((R,_,L)=>{let F=z.runKernel(Hc,S,I);return L([_,R,F]),f&&(F=H(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:b}})(p,h):hs((R,_,L,F)=>{let V=z.runKernel(Hc,S,I);return F([_,R,V,L]),f&&(V=H(V,[V.shape[1],V.shape[2],V.shape[3]])),{value:V,gradFunc:b}})(p,h,g)}const QL=O({fusedConv2d_:YL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZL(t,e,n,r,s,o=[1,1],i){let a=t;t.rank===3&&(a=H(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u=e;u.rank===3&&(u=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={x:a,dy:u},c={strides:r,pad:s,dimRoundingMode:i,dilations:o,filterShape:n};return z.runKernel(Hg,l,c)}const JL=O({depthwiseConv2dNativeBackpropFilter_:ZL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e4(t,e,n,r,s,o=[1,1],i){let a=e,u=!1;e.rank===3&&(u=!0,a=H(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={dy:a,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:o,inputShape:t},d=z.runKernel(jg,l,c);return u?H(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const t4=O({depthwiseConv2dNativeBackpropInput_:e4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n4({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(Gd(z.state.gradientDepth,u)===!1){let I=Gx(t,e,n,r,s,o,i);return a!=null&&(I=fe(I,a)),Ud(I,u,l,c)}const d=N(t,"x","depthwiseConv2d","float32"),h=N(e,"filter","depthwiseConv2d","float32");let p=d,f=!1;d.rank===3&&(f=!0,p=H(d,[1,d.shape[0],d.shape[1],d.shape[2]])),T(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),T(h.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),T(p.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),o==null&&(o=[1,1]),T(qt(n,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),ar("fused depthwiseConv2d",r,i);const y=gt(p.shape,h.shape,n,o,r,i,!0);let x;a!=null&&(x=N(a,"bias","fused conv2d"),[x]=dt(x,d),$e(y.outShape,x.shape));let g;l!=null&&(g=N(l,"prelu weights","fused depthwiseConv2d"));const v=(I,E)=>{T(Du(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[R,_,L,F]=E,V=Vd(I,L,u),j=t4(_.shape,V,R,n,r,o,i),K=JL(_,V,R.shape,n,r,o,i);if(F!=null){const Z=Wd(x,V);return[j,K,Z]}return[j,K]},b={x:p,filter:h,bias:x,preluActivationWeights:g},S={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:u,leakyreluAlpha:c};return a==null?hs((E,R,_)=>{let L=z.runKernel(jc,b,S);return _([R,E,L]),f&&(L=H(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:v}})(p,h):hs((E,R,_,L)=>{let F=z.runKernel(jc,b,S);return L([R,E,F,_]),f&&(F=H(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:v}})(p,h,x)}const r4=O({fusedDepthwiseConv2d_:n4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s4({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if(Gd(z.state.gradientDepth,o)===!1){let V=We(t,e,n,r);return s!=null&&(V=fe(V,s)),Ud(V,o,i,a)}let u=N(t,"a","fused matMul"),l=N(e,"b","fused matMul");[u,l]=dt(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?l.shape[l.rank-1]:l.shape[l.rank-2],h=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),y=l.shape.slice(0,-2),x=U(f),g=U(y);T(c===d,()=>`Error in fused matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`);const b=$e(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([h,p]),S=n?H(u,[x,c,h]):H(u,[x,h,c]),I=r?H(l,[g,p,d]):H(l,[g,d,p]);let E;s!=null&&(E=N(s,"bias","fused matMul"),[E]=dt(E,u),$e(b,E.shape));let R;i!=null&&(R=N(i,"prelu weights","fused matMul"));const _=(V,j)=>{const[K,Z,ne,ce]=j,Ce=Vd(H(V,ne.shape),ne,o);let X,ie;if(!n&&!r?(X=We(Ce,Z,!1,!0),ie=We(K,Ce,!0,!1)):!n&&r?(X=We(Ce,Z,!1,!1),ie=We(Ce,K,!0,!1)):n&&!r?(X=We(Z,Ce,!1,!0),ie=We(K,Ce,!1,!1)):(X=We(Z,Ce,!0,!0),ie=We(Ce,K,!0,!0)),s!=null){const me=Wd(ce,Ce);return[X,ie,me]}else return[X,ie]},L={a:S,b:I,bias:E,preluActivationWeights:R},F={transposeA:n,transposeB:r,activation:o,leakyreluAlpha:a};return s==null?hs((j,K,Z)=>{const ne=z.runKernel(Gc,L,F);return Z([j,K,ne]),{value:H(ne,b),gradFunc:_}})(S,I):hs((j,K,Z,ne)=>{const ce=z.runKernel(Gc,L,F);return ne([j,K,ce,Z]),{value:H(ce,b),gradFunc:_}})(S,I,E)}const o4=O({fusedMatMul_:s4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i4=Object.freeze(Object.defineProperty({__proto__:null,conv2d:QL,depthwiseConv2d:r4,matMul:o4},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a4(t){return i0(t,.54,.46)}const u4=O({hammingWindow_:a4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l4(t){return i0(t,.5,.5)}const Sk=O({hannWindow_:l4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c4(t,e,n,r=!1,s=0){let o=0;const i=[];for(;o+e<=t.size;)i.push(ke(t,o,e)),o+=n;if(r)for(;o<t.size;){const a=o+e-t.size,u=St([ke(t,o,e-a),rl([a],s)]);i.push(u),o+=n}return i.length===0?tr([],[0,e]):H(St(i),[i.length,e])}const $k=O({frame_:c4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d4(t,e,n,r,s=Sk){r==null&&(r=Ck(e));const o=$k(t,e,n),i=Y(o,s(e));return s0(i,r)}const h4=O({stft_:d4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p4(t,e,n,r,s="bilinear",o=0){const i=N(t,"image","cropAndResize"),a=N(e,"boxes","cropAndResize","float32"),u=N(n,"boxInd","cropAndResize","int32"),l=a.shape[0];T(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),T(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${a.shape}.`),T(u.rank===1&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${a.shape}.`),T(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),T(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),T(s==="bilinear"||s==="nearest",()=>`method must be bilinear or nearest, but was ${s}`);const c={image:i,boxes:a,boxInd:u},d={method:s,extrapolationValue:o,cropSize:r};return z.runKernel(Vg,c,d)}const f4=O({cropAndResize_:p4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m4(t){const e=N(t,"image","flipLeftRight","float32");T(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const n={image:e};return z.runKernel(oy,n,{})}const g4=O({flipLeftRight_:m4});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y4(t){const e=N(t,"image","grayscaleToRGB"),n=e.rank-1,r=e.shape[n];T(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),T(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const s=new Array(e.rank);return s.fill(1,0,n),s[n]=3,hu(e,s)}const x4=O({grayscaleToRGB_:y4});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v4(t){const e=N(t,"image","RGBToGrayscale"),n=e.rank-1,r=e.shape[n];T(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),T(r===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);const s=e.dtype,o=je(e,"float32"),i=Dt([.2989,.587,.114]);let a;switch(e.rank){case 2:a=xi("ij,j->i",o,i);break;case 3:a=xi("ijk,k->ij",o,i);break;case 4:a=xi("ijkl,l->ijk",o,i);break;case 5:a=xi("ijklm,m->ijkl",o,i);break;case 6:a=xi("ijklmn,n->ijklm",o,i);break;default:throw new Error("Not a valid tensor rank.")}return a=Pn(a,-1),je(a,s)}const w4=O({rgbToGrayscale_:v4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b4(t,e,n=0,r=.5){const s=N(t,"image","rotateWithOffset","float32");T(s.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const o={image:s},i={radians:e,fillValue:n,center:r};return z.runKernel(Bx,o,i)}const C4=O({rotateWithOffset_:b4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pa(t,e,n,r,s,o){r==null&&(r=.5),s==null&&(s=Number.NEGATIVE_INFINITY),o==null&&(o=0);const i=t.shape[0];return n=Math.min(n,i),T(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),T(t.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),T(t.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`),T(e.rank===1,()=>"scores must be a 1D tensor"),T(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`),T(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S4(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const o=N(t,"boxes","nonMaxSuppression","float32"),i=N(e,"scores","nonMaxSuppression","float32"),a=pa(o,i,n,r,s);n=a.maxOutputSize,r=a.iouThreshold,s=a.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return z.runKernel(Wy,{boxes:o,scores:i},u)}const $4=O({nonMaxSuppression_:S4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k4(t,e,n){const r=I4(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function I4(t,e,n){return T4(t,e,n||N4)}function N4(t,e){return t>e?1:t<e?-1:0}function T4(t,e,n){let r=0,s=t.length,o=0,i=!1;for(;r<s;){o=r+(s-r>>>1);const a=n(e,t[o]);a>0?r=o+1:(s=o,i=!a)}return i?r:-r-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a0(t,e,n,r,s){return l0(t,e,n,r,s,0)}function kk(t,e,n,r,s,o){return l0(t,e,n,r,s,0,!1,o,!0)}function u0(t,e,n,r,s,o){return l0(t,e,n,r,s,o,!0)}function l0(t,e,n,r,s,o,i=!1,a=!1,u=!1){const l=[];for(let x=0;x<e.length;x++)e[x]>s&&l.push({score:e[x],boxIndex:x,suppressBeginIndex:0});l.sort(kw);const c=o>0?-.5/o:0,d=[],h=[];for(;d.length<n&&l.length>0;){const x=l.pop(),{score:g,boxIndex:v,suppressBeginIndex:b}=x;if(g<s)break;let S=!1;for(let I=d.length-1;I>=b;--I){const E=E4(t,v,d[I]);if(E>=r){S=!0;break}if(x.score=x.score*R4(r,c,E),x.score<=s)break}x.suppressBeginIndex=d.length,S||(x.score===g?(d.push(v),h.push(x.score)):x.score>s&&k4(l,x,kw))}const p=d.length,f=n-p;a&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const y={selectedIndices:d};return i&&(y.selectedScores=h),u&&(y.validOutputs=p),y}function E4(t,e,n){const r=t.subarray(e*4,e*4+4),s=t.subarray(n*4,n*4+4),o=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),a=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),d=Math.max(s[0],s[2]),h=Math.max(s[1],s[3]),p=(a-o)*(u-i),f=(d-l)*(h-c);if(p<=0||f<=0)return 0;const y=Math.max(o,l),x=Math.max(i,c),g=Math.min(a,d),v=Math.min(u,h),b=Math.max(g-y,0)*Math.max(v-x,0);return b/(p+f-b)}function R4(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function kw(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function _4(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const o=N(t,"boxes","nonMaxSuppressionAsync"),i=N(e,"scores","nonMaxSuppressionAsync"),a=pa(o,i,n,r,s);n=a.maxOutputSize,r=a.iouThreshold,s=a.scoreThreshold;const u=await Promise.all([o.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:d}=a0(l,c,n,r,s);return o!==t&&o.dispose(),i!==e&&i.dispose(),Dt(d,"int32")}const P4=_4;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A4(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const i=N(t,"boxes","nonMaxSuppression"),a=N(e,"scores","nonMaxSuppression"),u=pa(i,a,n,r,s,o);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,o=u.softNmsSigma;const l={boxes:i,scores:a},c={maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:o},d=z.runKernel(Uy,l,c);return{selectedIndices:d[0],selectedScores:d[1]}}const D4=O({nonMaxSuppressionWithScore_:A4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function O4(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const i=N(t,"boxes","nonMaxSuppressionAsync"),a=N(e,"scores","nonMaxSuppressionAsync"),u=pa(i,a,n,r,s,o);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,o=u.softNmsSigma;const l=await Promise.all([i.data(),a.data()]),c=l[0],d=l[1],{selectedIndices:h,selectedScores:p}=u0(c,d,n,r,s,o);return i!==t&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:Dt(h,"int32"),selectedScores:Dt(p)}}const F4=O4;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L4(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const i=N(t,"boxes","nonMaxSuppression"),a=N(e,"scores","nonMaxSuppression"),u=pa(i,a,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,d=u.scoreThreshold,h={boxes:i,scores:a},p={maxOutputSize:l,iouThreshold:c,scoreThreshold:d,padToMaxOutputSize:o},f=z.runKernel(WS,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}const z4=O({nonMaxSuppressionPadded_:L4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function B4(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const i=N(t,"boxes","nonMaxSuppressionAsync"),a=N(e,"scores","nonMaxSuppressionAsync"),u=pa(i,a,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,d=u.scoreThreshold,[h,p]=await Promise.all([i.data(),a.data()]),{selectedIndices:f,validOutputs:y}=kk(h,p,l,c,d,o);return i!==t&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:Dt(f,"int32"),validOutputs:Ie(y,"int32")}}const M4=B4;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V4(t,e,n=!1,r=!1){const s=N(t,"images","resizeBilinear");T(s.rank===3||s.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),T(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),T(r===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=s,i=!1;s.rank===3&&(i=!0,o=H(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const a={images:o},u={alignCorners:n,halfPixelCenters:r,size:e},l=z.runKernel(rx,a,u);return i?H(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const W4=O({resizeBilinear_:V4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U4(t,e,n=!1,r=!1){const s=N(t,"images","resizeNearestNeighbor");T(s.rank===3||s.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),T(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),T(s.dtype==="float32"||s.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),T(r===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=s,i=!1;s.rank===3&&(i=!0,o=H(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const a={images:o},u={alignCorners:n,halfPixelCenters:r,size:e},l=z.runKernel(nx,a,u);return i?H(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const G4=O({resizeNearestNeighbor_:U4});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H4(t,e="binary",n=!1,r=.5){const s=N(t,"image","threshold"),o=.2989,i=.587,a=.114,u=s.shape[0]*s.shape[1];let l=Y(Dt([r]),255),c,d,h,p;if(T(s.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),T(s.shape[2]===3||s.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),T(s.dtype==="int32"||s.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),T(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),s.shape[2]===3){[c,d,h]=Mu(s,[1,1,1],-1);const x=Y(c,o),g=Y(d,i),v=Y(h,a);p=fe(fe(x,g),v)}else p=t;if(e==="otsu"){const x=V$(je(fk(p),"int32"),Mr([]),256);l=j4(x,u)}const f=n?jx(p,l):zd(p,l);return je(Y(f,255),"int32")}function j4(t,e){let n=Dt([-1]),r=Dt([0]),s=Dt([0]),o,i,a,u,l,c;for(let d=0;d<t.size-1;d++){o=ke(t,0,d+1),i=ke(t,d+1),l=Te(qe(o),e),c=Te(qe(i),e);const h=qe(Y(o,zu(0,o.size)));a=Te(h,qe(o));const p=rl(i.shape,o.size),f=fe(zu(0,i.size),p),y=Y(i,f);u=Te(qe(y),qe(i));const x=be(a,u),g=be(a,u),v=Y(l,c);s=Y(Y(v,x),g);const b=zd(s,r);r=Gs(b,s,r),n=Gs(b,Dt([d]),n)}return n}const K4=O({threshold_:H4});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X4(t,e,n="nearest",r="constant",s=0,o){const i=N(t,"image","transform","float32"),a=N(e,"transforms","transform","float32");T(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),T(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),T(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const u={image:i,transforms:a},l={interpolation:n,fillMode:r,fillValue:s,outputShape:o};return z.runKernel(Dx,u,l)}const q4=O({transform_:X4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y4(t,e,n){const r=N(t,"a","bandPart");T(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[o,i]=r.shape.slice(-2);let a,u;typeof e=="number"?(T(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),T(e<=o,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`),a=N(e<0?o:e,"numLower","bandPart")):(T(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=Gs(Of(e,0),o,Lu(e,o))),typeof n=="number"?(T(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),T(n<=i,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`),u=N(n<0?i:n,"numUpper","bandPart")):(T(n.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),u=Gs(Of(n,0),i,Lu(n,i)));const l=H(zu(0,o,1,"int32"),[-1,1]),c=zu(0,i,1,"int32"),d=be(l,c),h=Zc(jx(d,a),Z$(d,Vr(u))),p=ps([o,i],r.dtype);return H(fs(Jo(H(r,[-1,o,i])).map(f=>Gs(h,f,p))),s)}const Q4=O({bandPart_:Y4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z4(t){let e;if(Array.isArray(t)){e=!1,T(t!=null&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const s=t[0].shape[0];for(let o=1;o<t.length;++o)T(t[o].shape[0]===s,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[o].shape[0]} vs. ${s})`)}else e=!0,t=Mu(t,t.shape[0],0).map(s=>Ve(s,[0]));T(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],r=t;for(let s=0;s<t.length;++s)n.push(z.tidy(()=>{let o=r[s];if(s>0)for(let i=0;i<s;++i){const a=Y(qe(Y(n[i],o)),n[i]);o=be(o,a)}return Te(o,Ld(o,"euclidean"))}));return e?fs(n,0):n}const J4=O({gramSchmidt_:Z4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ez(t,e=!1){if(T(t.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`),t.rank===2)return Iw(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((u,l)=>u*l),r=Jo(H(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],o=[];r.forEach(u=>{const[l,c]=Iw(u,e);s.push(l),o.push(c)});const i=H(fs(s,0),t.shape),a=H(fs(o,0),t.shape);return[i,a]}}function Iw(t,e=!1){return z.tidy(()=>{T(t.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],r=t.shape[1];let s=q$(n),o=Us(t);const i=tr([[1]],[1,1]);let a=Us(i);const u=n>=r?r:n;for(let l=0;l<u;++l){const c=o,d=a,h=s;[a,o,s]=z.tidy(()=>{const p=ke(o,[l,l],[n-l,1]),f=Ld(p),y=ke(o,[l,l],[1,1]),x=Gs(zd(y,0),tr([[-1]]),tr([[1]])),g=be(y,Y(x,f)),v=Te(p,g);v.shape[0]===1?a=Us(i):a=St([i,ke(v,[1,0],[v.shape[0]-1,v.shape[1]])],0);const b=Vr(Te(We(x,g),f)),S=ke(o,[l,0],[n-l,r]),I=Y(b,a),E=Ff(a);if(l===0)o=be(S,We(I,We(E,S)));else{const L=be(S,We(I,We(E,S)));o=St([ke(o,[0,0],[l,r]),L],0)}const R=Ff(I),_=ke(s,[0,l],[n,s.shape[1]-l]);if(l===0)s=be(_,We(We(_,a),R));else{const L=be(_,We(We(_,a),R));s=St([ke(s,[0,0],[n,l]),L],1)}return[a,o,s]}),Le([c,d,h])}return!e&&n>r&&(s=ke(s,[0,0],[n,r]),o=ke(o,[0,0],[r,r])),[s,o]})}const tz=O({qr_:ez});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Jt;(function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Jt||(Jt={}));function nz(t,e,n=Jt.SUM_BY_NONZERO_WEIGHTS){const r=N(t,"losses","computeWeightedLoss");let s=null;e!=null&&(s=N(e,"weights","computeWeightedLoss"));const o=s==null?r:Y(r,s);if(n===Jt.NONE)return o;if(n===Jt.SUM)return qe(o);if(n===Jt.MEAN){if(s==null)return Jc(o);{const i=r.size/s.size,a=Te(qe(o),qe(s));return i>1?Te(a,Ie(i)):a}}if(n===Jt.SUM_BY_NONZERO_WEIGHTS){if(s==null)return Te(qe(o),Ie(r.size));{const i=Y(s,No(r.shape)),a=je(qe(uk(i,Ie(0))),"float32");return Te(qe(o),a)}}throw Error(`Unknown reduction: ${n}`)}const ys=O({computeWeightedLoss_:nz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rz(t,e,n,r=Jt.SUM_BY_NONZERO_WEIGHTS){const s=N(t,"labels","absoluteDifference"),o=N(e,"predictions","absoluteDifference");let i=null;n!=null&&(i=N(n,"weights","absoluteDifference")),kn(s.shape,o.shape,"Error in absoluteDifference: ");const a=_n(be(s,o));return ys(a,i,r)}const sz=O({absoluteDifference_:rz});function oz(t,e,n,r,s=Jt.SUM_BY_NONZERO_WEIGHTS){const o=N(t,"labels","cosineDistance"),i=N(e,"predictions","cosineDistance");let a=null;r!=null&&(a=N(r,"weights","cosineDistance")),kn(o.shape,i.shape,"Error in cosineDistance: ");const u=Ie(1),l=be(u,qe(Y(o,i),n,!0));return ys(l,a,s)}const iz=O({cosineDistance_:oz});function az(t,e,n,r=Jt.SUM_BY_NONZERO_WEIGHTS){let s=N(t,"labels","hingeLoss");const o=N(e,"predictions","hingeLoss");let i=null;n!=null&&(i=N(n,"weights","hingeLoss")),kn(s.shape,o.shape,"Error in hingeLoss: ");const a=Ie(1);s=be(Y(Ie(2),s),a);const u=Md(be(a,Y(s,o)));return ys(u,i,r)}const uz=O({hingeLoss_:az});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lz(t,e,n,r=1,s=Jt.SUM_BY_NONZERO_WEIGHTS){const o=N(t,"labels","huberLoss"),i=N(e,"predictions","huberLoss");let a=null;n!=null&&(a=N(n,"weights","huberLoss")),kn(o.shape,i.shape,"Error in huberLoss: ");const u=Ie(r),l=_n(be(i,o)),c=Lu(l,u),d=be(l,c),h=fe(Y(Ie(.5),er(c)),Y(u,d));return ys(h,a,s)}const cz=O({huberLoss_:lz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dz(t,e,n,r=1e-7,s=Jt.SUM_BY_NONZERO_WEIGHTS){const o=N(t,"labels","logLoss"),i=N(e,"predictions","logLoss");let a=null;n!=null&&(a=N(n,"weights","logLoss")),kn(o.shape,i.shape,"Error in logLoss: ");const u=Ie(1),l=Ie(r),c=Vr(Y(o,Fu(fe(i,l)))),d=Y(be(u,o),Fu(fe(be(u,i),l))),h=be(c,d);return ys(h,a,s)}const hz=O({logLoss_:dz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pz(t,e,n,r=Jt.SUM_BY_NONZERO_WEIGHTS){const s=N(t,"labels","meanSquaredError"),o=N(e,"predictions","meanSquaredError");let i=null;n!=null&&(i=N(n,"weights","meanSquaredError")),kn(s.shape,o.shape,"Error in meanSquaredError: ");const a=gk(s,o);return ys(a,i,r)}const fz=O({meanSquaredError_:pz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mz(t,e){const n=N(t,"labels","sigmoidCrossEntropyWithLogits"),r=N(e,"logits","sigmoidCrossEntropyWithLogits");kn(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Md(r),o=Y(r,n),i=ek(ds(Vr(_n(r))));return fe(be(s,o),i)}function gz(t,e,n,r=0,s=Jt.SUM_BY_NONZERO_WEIGHTS){let o=N(t,"multiClassLabels","sigmoidCrossEntropy");const i=N(e,"logits","sigmoidCrossEntropy");let a=null;if(n!=null&&(a=N(n,"weights","sigmoidCrossEntropy")),kn(o.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const l=Ie(r),c=Ie(1),d=Ie(.5);o=fe(Y(o,be(c,l)),Y(d,l))}const u=mz(o,i);return ys(u,a,s)}const yz=O({sigmoidCrossEntropy_:gz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xz(t,e,n=-1){if(n===-1&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return hs((s,o,i)=>{const u=nk(o,[n],!0),l=be(je(o,"float32"),u);i([s,l]);const c=Vr(Y(l,s));return{value:qe(c,[n]),gradFunc:(p,f)=>{const[y,x]=f,g=Nn(p.shape,[n]);return[Y(H(p,g),be(je(y,"float32"),ds(x))),Y(H(p,g),be(ds(x),je(y,"float32")))]}}})(t,e)}function vz(t,e,n,r=0,s=Jt.SUM_BY_NONZERO_WEIGHTS){let o=N(t,"onehotLabels","softmaxCrossEntropy");const i=N(e,"logits","softmaxCrossEntropy");let a=null;if(n!=null&&(a=N(n,"weights","softmaxCrossEntropy")),kn(o.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const l=Ie(r),c=Ie(1),d=Ie(o.shape[1]);o=fe(Y(o,be(c,l)),Te(l,d))}const u=xz(o,i);return ys(u,a,s)}const wz=O({softmaxCrossEntropy_:vz});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bz(t,e,n,r){const s=N(t,"indices","sparseFillEmptyRows","int32"),o=N(e,"values","sparseFillEmptyRows"),i=N(n,"denseShape","sparseFillEmptyRows","int32"),a=N(r,"defaultValue","sparseFillEmptyRows",o.dtype);if(s.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${s.shape}`);if(o.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const u={indices:s,values:o,denseShape:i,defaultValue:a},l=z.runKernel(XS,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}const Cz=O({sparseFillEmptyRows_:bz});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sz(t,e,n){const r=N(t,"inputIndices","sparseReshape","int32"),s=N(e,"inputShape","sparseReshape","int32"),o=N(n,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(s.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(o.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const i={inputIndices:r,inputShape:s,newShape:o},a=z.runKernel(qS,i);return{outputIndices:a[0],outputShape:a[1]}}const $z=O({sparseReshape_:Sz});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kz(t,e,n){const r=N(t,"data","sparseSegmentMean"),s=N(e,"indices","sparseSegmentMean","int32"),o=N(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${s.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${o.shape}`);const i={data:r,indices:s,segmentIds:o};return z.runKernel($x,i)}const Iz=O({sparseSegmentMean_:kz});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nz(t,e,n){const r=N(t,"data","sparseSegmentSum"),s=N(e,"indices","sparseSegmentSum","int32"),o=N(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${s.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${o.shape}`);const i={data:r,indices:s,segmentIds:o};return z.runKernel(kx,i)}const Tz=O({sparseSegmentSum_:Nz});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ez(t,e,n,r,s,o,i,a){const u=N(t,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=N(e,"dataSplits","stringNGrams");if(l.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:o,padWidth:i,preserveShortSequences:a},d={data:u,dataSplits:l},h=z.runKernel(Ex,d,c);return{nGrams:h[0],nGramsSplits:h[1]}}const Rz=O({stringNGrams_:Ez});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _z(t,e,n=!0){const r=N(t,"input","stringSplit","string"),s=N(e,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(s.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const o={skipEmpty:n},i={input:r,delimiter:s},a=z.runKernel(ZS,i,o);return{indices:a[0],values:a[1],shape:a[2]}}const Pz=O({stringSplit_:_z});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Az(t,e){const n=N(t,"input","stringToHashBucketFast","string"),r={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return z.runKernel(JS,s,r)}const Dz=O({stringToHashBucketFast_:Az});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oz(t,e,n,r=!0){const s=N(t,"input","staticRegexReplace","string"),o={pattern:e,rewrite:n,replaceGlobal:r};return z.runKernel(QS,{x:s},o)}const Fz=O({staticRegexReplace_:Oz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lz={fft:r0,ifft:ed,rfft:s0,irfft:mk},zz={hammingWindow:u4,hannWindow:Sk,frame:$k,stft:h4},_o={flipLeftRight:g4,grayscaleToRGB:x4,resizeNearestNeighbor:G4,resizeBilinear:W4,rgbToGrayscale:w4,rotateWithOffset:C4,cropAndResize:f4,nonMaxSuppression:$4,nonMaxSuppressionAsync:P4,nonMaxSuppressionWithScore:D4,nonMaxSuppressionWithScoreAsync:F4,nonMaxSuppressionPadded:z4,nonMaxSuppressionPaddedAsync:M4,threshold:K4,transform:q4},Bz={bandPart:Q4,gramSchmidt:J4,qr:tz},Mz={absoluteDifference:sz,computeWeightedLoss:ys,cosineDistance:iz,hingeLoss:uz,huberLoss:cz,logLoss:hz,meanSquaredError:fz,sigmoidCrossEntropy:yz,softmaxCrossEntropy:wz},Vz={sparseFillEmptyRows:Cz,sparseReshape:$z,sparseSegmentMean:Iz,sparseSegmentSum:Tz},Wz={stringNGrams:Rz,stringSplit:Pz,stringToHashBucketFast:Dz,staticRegexReplace:Fz};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uz=new Map,Gz=new Map;class Hz{getClassName(){return this.constructor.className}static fromConfig(e,n){return new e(n)}}class xo{constructor(){this.classNameMap={}}static getMap(){return xo.instance==null&&(xo.instance=new xo),xo.instance}static register(e){xo.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function jz(t,e,n){T(t.className!=null,()=>"Class being registered does not have the static className property defined."),T(typeof t.className=="string",()=>"className is required to be a string, but got type "+typeof t.className),T(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof n>"u"&&(n=t.className);const r=n,s=e+">"+r;return xo.register(t),Uz.set(s,t),Gz.set(t,s),t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ei extends Hz{minimize(e,n=!1,r){const{value:s,grads:o}=this.computeGradients(e,r);if(r!=null){const i=r.map(a=>({name:a.name,tensor:o[a.name]}));this.applyGradients(i)}else this.applyGradients(o);return Le(o),n?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,n){return PD(e,n)}dispose(){this.iterations_!=null&&Le(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Ie(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(ei,Symbol.hasInstance,{value:t=>t.minimize!=null&&t.computeGradients!=null&&t.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kz extends ei{static get className(){return"Adadelta"}constructor(e,n,r=null){super(),this.learningRate=e,this.rho=n,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],r==null&&(this.epsilon=z.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=z.registeredVariables[r],i=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accum_grad`,variable:xe(()=>Fn(o).variable(i))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${r}/accum_var`,variable:xe(()=>Fn(o).variable(i))});const a=Array.isArray(e)?e[s].tensor:e[r];if(a==null)return;const u=this.accumulatedGrads[s].variable,l=this.accumulatedUpdates[s].variable;xe(()=>{const c=fe(Y(u,this.rho),Y(er(a),1-this.rho)),d=Y(Te(cs(fe(l,this.epsilon)),cs(fe(u,this.epsilon))),a),h=fe(Y(l,this.rho),Y(er(d),1-this.rho));u.assign(c),l.assign(h);const p=fe(Y(d,-this.learningRate),o);o.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Le(this.accumulatedGrads.map(e=>e.variable)),Le(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=e.length/2,r=!1;this.accumulatedGrads=e.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedUpdates=e.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.rho,n.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xz extends ei{static get className(){return"Adagrad"}constructor(e,n=.1){super(),this.learningRate=e,this.initialAccumulatorValue=n,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=z.registeredVariables[r];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accumulator`,variable:xe(()=>rl(o.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(e)?e[s].tensor:e[r];if(i==null)return;const a=this.accumulatedGrads[s].variable;xe(()=>{const u=fe(a,er(i));a.assign(u);const l=fe(Y(Te(i,cs(fe(u,z.backend.epsilon()))),-this.learningRate),o);o.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Le(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=!1;this.accumulatedGrads=e.map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,n){return new e(n.learningRate,n.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qz extends ei{static get className(){return"Adam"}constructor(e,n,r,s=null){super(),this.learningRate=e,this.beta1=n,this.beta2=r,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],xe(()=>{this.accBeta1=Ie(n).variable(),this.accBeta2=Ie(r).variable()}),s==null&&(this.epsilon=z.backend.epsilon())}applyGradients(e){const n=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);xe(()=>{const r=be(1,this.accBeta1),s=be(1,this.accBeta2);n.forEach((o,i)=>{const a=z.registeredVariables[o],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:xe(()=>Fn(a).variable(u))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${o}/v`,variable:xe(()=>Fn(a).variable(u))});const l=Array.isArray(e)?e[i].tensor:e[o];if(l==null)return;const c=this.accumulatedFirstMoment[i].variable,d=this.accumulatedSecondMoment[i].variable,h=fe(Y(c,this.beta1),Y(l,1-this.beta1)),p=fe(Y(d,this.beta2),Y(er(l),1-this.beta2)),f=Te(h,r),y=Te(p,s);c.assign(h),d.assign(p);const x=fe(Y(Te(f,fe(cs(y),this.epsilon)),-this.learningRate),a);a.assign(x)}),this.accBeta1.assign(Y(this.accBeta1,this.beta1)),this.accBeta2.assign(Y(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Le(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Le(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e),xe(()=>{this.accBeta1.assign(Ou(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ou(this.beta2,this.iterations_+1))});const n=e.length/2,r=!1;this.accumulatedFirstMoment=e.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedSecondMoment=e.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yz extends ei{static get className(){return"Adamax"}constructor(e,n,r,s=null,o=0){super(),this.learningRate=e,this.beta1=n,this.beta2=r,this.epsilon=s,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],xe(()=>{this.iteration=Ie(0).variable(),this.accBeta1=Ie(n).variable()}),s==null&&(this.epsilon=z.backend.epsilon())}applyGradients(e){const n=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);xe(()=>{const r=be(1,this.accBeta1),s=Te(-this.learningRate,fe(Y(this.iteration,this.decay),1));n.forEach((o,i)=>{const a=z.registeredVariables[o],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:Fn(a).variable(u)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${o}/v`,variable:Fn(a).variable(u)});const l=Array.isArray(e)?e[i].tensor:e[o];if(l==null)return;const c=this.accumulatedFirstMoment[i].variable,d=this.accumulatedWeightedInfNorm[i].variable,h=fe(Y(c,this.beta1),Y(l,1-this.beta1)),p=Y(d,this.beta2),f=_n(l),y=ik(p,f);c.assign(h),d.assign(y);const x=fe(Y(Te(s,r),Te(h,fe(y,this.epsilon))),a);a.assign(x)}),this.iteration.assign(fe(this.iteration,1)),this.accBeta1.assign(Y(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Le(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Le(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon,n.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ik extends ei{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=Array.isArray(e)?e[s].tensor:e[r];if(o==null)return;const i=z.registeredVariables[r];xe(()=>{const a=fe(Y(this.c,o),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Or(Ie(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,n){return new e(n.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qz extends Ik{static get className(){return"Momentum"}constructor(e,n,r=!1){super(e),this.learningRate=e,this.momentum=n,this.useNesterov=r,this.accumulations=[],this.m=Ie(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=z.registeredVariables[r];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${r}/momentum`,variable:xe(()=>Fn(o).variable(!1))});const i=this.accumulations[s].variable,a=Array.isArray(e)?e[s].tensor:e[r];a!=null&&xe(()=>{let u;const l=fe(Y(this.m,i),a);this.useNesterov?u=fe(Y(this.c,fe(a,Y(l,this.m))),o):u=fe(Y(this.c,l),o),i.assign(l),o.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Le(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=!1;this.accumulations=e.map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,n){return new e(n.learningRate,n.momentum,n.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zz extends ei{static get className(){return"RMSProp"}constructor(e,n=.9,r=0,s=null,o=!1){if(super(),this.learningRate=e,this.decay=n,this.momentum=r,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,s==null&&(this.epsilon=z.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=z.registeredVariables[r],i=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${r}/rms`,variable:xe(()=>Fn(o).variable(i))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${r}/momentum`,variable:xe(()=>Fn(o).variable(i))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${r}/mg`,variable:xe(()=>Fn(o).variable(i))});const a=Array.isArray(e)?e[s].tensor:e[r];if(a==null)return;const u=this.accumulatedMeanSquares[s].variable,l=this.accumulatedMoments[s].variable;xe(()=>{const c=fe(Y(u,this.decay),Y(er(a),1-this.decay));if(this.centered){const d=this.accumulatedMeanGrads[s].variable,h=fe(Y(d,this.decay),Y(a,1-this.decay)),p=Te(Y(a,this.learningRate),cs(be(c,fe(er(h),this.epsilon)))),f=fe(Y(l,this.momentum),p);u.assign(c),d.assign(h),l.assign(f);const y=be(o,f);o.assign(y)}else{const d=fe(Y(u,this.decay),Y(er(a),1-this.decay)),h=fe(Y(l,this.momentum),Te(Y(a,this.learningRate),cs(fe(d,this.epsilon))));u.assign(d),l.assign(h);const p=be(o,h);o.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Le(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Le(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Le(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=this.centered?e.length/3:e.length/2,r=!1;this.accumulatedMeanSquares=e.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedMoments=e.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.centered&&(this.accumulatedMeanGrads=e.slice(n*2,n*3).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,n){return new e(n.learningRate,n.decay,n.momentum,n.epsilon,n.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jz=[Kz,Xz,qz,Yz,Qz,Zz,Ik];function eB(){for(const t of Jz)jz(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tB="model",nB=".json",rB=".weights.bin";function Nw(t){return new Promise(e=>setTimeout(e)).then(t)}class Ho{constructor(e){if(!M().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ho.URL_SCHEME)&&(e=e.slice(Ho.URL_SCHEME.length)),(e==null||e.length===0)&&(e=tB),this.modelJsonFileName=e+nB,this.weightDataFileName=e+rB}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const n=$r.join(e.weightData),r=window.URL.createObjectURL(new Blob([n],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=N$(e,s),i=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=i,await Nw(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const u=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;u.download=this.weightDataFileName,u.href=r,await Nw(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:tl(e)}}}}Ho.URL_SCHEME="downloads://";class sB{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,n)=>{const r=new FileReader;r.onload=s=>{const o=JSON.parse(s.target.result),i=o.modelTopology;if(i==null){n(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(o.weightsManifest==null){n(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:i});return}const u=Wx(o,l=>this.loadWeights(l));e(u)},r.onerror=s=>n(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})}loadWeights(e){const n=[],r=[];for(const i of e)n.push(...i.weights),r.push(...i.paths);const s=this.checkManifestAndWeightFiles(e),o=r.map(i=>this.loadWeightsFile(i,s[i]));return Promise.all(o).then(i=>[n,i])}loadWeightsFile(e,n){return new Promise((r,s)=>{const o=new FileReader;o.onload=i=>{const a=i.target.result;r(a)},o.onerror=i=>s(`Failed to weights data from file of path '${e}'.`),o.readAsArrayBuffer(n)})}checkManifestAndWeightFiles(e){const n=[],r=this.weightsFiles.map(o=>$w(o.name)),s={};for(const o of e)o.paths.forEach(i=>{const a=$w(i);if(n.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(n.push(a),r.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);s[i]=this.weightsFiles[r.indexOf(a)]});if(n.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}}const oB=t=>M().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Ho.URL_SCHEME)?iB(t.slice(Ho.URL_SCHEME.length)):null;st.registerSaveRouter(oB);function iB(t="model"){return new Ho(t)}function aB(t){return new sB(t)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tw(t,e,n,r){i(t),n=n??0,r=r??1,a(n,r);let s=0;const o=u=>(u.then(l=>{const c=n+ ++s/t.length*(r-n);return e(c),l}),u);function i(u){T(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function a(u,l){T(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),T(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),T(l>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${l}`)}return Promise.all(t.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Nk(t,e){e==null&&(e={});const n=e.fetchFunc==null?M().platform.fetch:e.fetchFunc,r=t.map(d=>n(d,e.requestInit,{isBinary:!0})),a=(e.onProgress==null?await Promise.all(r):await Tw(r,e.onProgress,0,.5)).map(d=>d.arrayBuffer());return e.onProgress==null?await Promise.all(a):await Tw(a,e.onProgress,.5,1)}function uB(t,e){var n;const r=e.fetchFunc==null?M().platform.fetch:e.fetchFunc;let s=0,o;return(n=e.onProgress)===null||n===void 0||n.call(e,0),new ReadableStream({pull:async i=>{for(var a;s<t.length;){o||(o=(await r(t[s],e.requestInit,{isBinary:!0})).body.getReader());const{done:u,value:l}=await o.read();if(u){s++,o=void 0,(a=e.onProgress)===null||a===void 0||a.call(e,s/t.length);continue}i.enqueue(l);return}i.close()}})}async function lB(t,e="",n,r){return Tk(i=>Nk(i,{requestInit:r}))(t,e,n)}function Tk(t){return async(e,n="",r)=>{const s=e.map(()=>!1),o={},i=r!=null?r.map(()=>!1):[],a=[];if(e.forEach((p,f)=>{let y=0;p.weights.forEach(x=>{const g="quantization"in x?x.quantization.dtype:x.dtype,v=Mo[g]*U(x.shape),b=()=>{s[f]=!0,o[f]==null&&(o[f]=[]),o[f].push({manifestEntry:x,groupOffset:y,sizeBytes:v})};r!=null?r.forEach((S,I)=>{S===x.name&&(b(),i[I]=!0)}):b(),a.push(x.name),y+=v})}),!i.every(p=>p)){const p=r.filter((f,y)=>!i[y]);throw new Error(`Could not find weights in manifest with names: ${p.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}const u=s.reduce((p,f,y)=>(f&&p.push(y),p),[]),l=[];u.forEach(p=>{e[p].paths.forEach(f=>{const y=n+(n.endsWith("/")?"":"/")+f;l.push(y)})});const c=await t(l),d={};let h=0;return u.forEach(p=>{const f=e[p].paths.length,y=new $r(c.slice(h,h+f));o[p].forEach(g=>{const v=y.slice(g.groupOffset,g.groupOffset+g.sizeBytes),b=$$(v,[g.manifestEntry]);for(const S in b)d[S]=b[S]}),h+=f}),d}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cB="application/octet-stream",dB="application/json";class c0{constructor(e,n){if(this.DEFAULT_METHOD="POST",n==null&&(n={}),this.weightPathPrefix=n.weightPathPrefix,this.weightUrlConverter=n.weightUrlConverter,n.fetchFunc!=null?(T(typeof n.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=n.fetchFunc):this.fetch=M().platform.fetch,T(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&T(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,n.requestInit!=null&&n.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=n.requestInit||{},this.loadOptions=n}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const n=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);n.body=new FormData;const r=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=N$(e,r);if(n.body.append("model.json",new Blob([JSON.stringify(s)],{type:dB}),"model.json"),e.weightData!=null){const i=$r.join(e.weightData);n.body.append("model.weights.bin",new Blob([i],{type:cB}),"model.weights.bin")}const o=await this.fetch(this.path,n);if(o.ok)return{modelArtifactsInfo:tl(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let n;try{n=await e.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const r=n.modelTopology,s=n.weightsManifest;if(r==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return n}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return Wx(e,n=>this.loadWeights(n))}async loadStream(){const e=await this.loadModelJSON(),n=await this.getWeightUrls(e.weightsManifest),r=Tf(e.weightsManifest),s=()=>uB(n,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:r,getWeightStream:s})}async getWeightUrls(e){const n=Array.isArray(this.path)?this.path[1]:this.path,[r,s]=hB(n),o=this.weightPathPrefix||r,i=[],a=[];for(const u of e)for(const l of u.paths)this.weightUrlConverter!=null?a.push(this.weightUrlConverter(l)):i.push(o+l+s);return this.weightUrlConverter&&i.push(...await Promise.all(a)),i}async loadWeights(e){const n=await this.getWeightUrls(e),r=Tf(e),s=await Nk(n,this.loadOptions);return[r,s]}}c0.URL_SCHEME_REGEX=/^https?:\/\//;function hB(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),r=t.substring(0,e),s=n>e?t.substring(n):"";return[r+"/",s]}function Lf(t){return t.match(c0.URL_SCHEME_REGEX)!=null}const Ek=(t,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let n=!0;if(Array.isArray(t)?n=t.every(r=>Lf(r)):n=Lf(t),n)return d0(t,e)}return null};st.registerSaveRouter(Ek);st.registerLoadRouter(Ek);function d0(t,e){return new c0(t,e)}function pB(t,e){return d0(t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class np{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class Rk{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class fB{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=n=>Promise.resolve(e.save(n)))}}function mB(t,e,n,r){const s=arguments;return new fB(_k(...s))}function _k(t,e,n,r){return arguments.length===1?t.modelTopology!=null||t.weightSpecs!=null?new np(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new np({modelTopology:t})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new np({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r}))}function gB(t){return new Rk(t)}function yB(t){return new Rk(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pk=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:$r,browserFiles:aB,browserHTTPRequest:pB,concatenateArrayBuffers:v_,copyModel:V_,decodeWeights:$$,decodeWeightsStream:I$,encodeWeights:p_,fromMemory:mB,fromMemorySync:_k,getLoadHandlers:N_,getModelArtifactsForJSON:Wx,getModelArtifactsForJSONSync:T$,getModelArtifactsInfoForJSON:tl,getSaveHandlers:I_,getWeightSpecs:Tf,http:d0,isHTTPScheme:Lf,listModels:B_,loadWeights:lB,moveModel:W_,registerLoadRouter:k_,registerSaveRouter:$_,removeModel:M_,weightsLoaderFactory:Tk,withSaveHandler:gB,withSaveHandlerSync:yB},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let co,Ew=!1;function xB(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(t==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,o=!1,i=!1,a=!1;if(t.data instanceof Uint8Array)n=!0;else if(typeof ImageData<"u"&&t instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&t instanceof HTMLVideoElement)s=!0;else if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement)o=!0;else if(t.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&t instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);if(Xc(Uc,z.backendName)!=null){const f={pixels:t},y={numChannels:e};return z.runKernel(Uc,f,y)}const[l,c]=s?[t.videoWidth,t.videoHeight]:[t.width,t.height];let d;if(i)d=t.getContext("2d").getImageData(0,0,l,c).data;else if(r||n)d=t.data;else if(o||s||a){if(co==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")co=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else co=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});co.canvas.width=l,co.canvas.height=c,co.drawImage(t,0,0,l,c),d=co.getImageData(0,0,l,c).data}let h;if(e===4)h=new Int32Array(d);else{const f=l*c;h=new Int32Array(f*e);for(let y=0;y<f;y++)for(let x=0;x<e;++x)h[y*e+x]=d[y*4+x]}return xk(h,[c,l,e],"int32")}function vB(t){if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);const e=t.rank===2?1:t.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`)}async function h0(t,e){let n=N(t,"img","toPixels");if(!(t instanceof at)){const l=n;n=je(l,"int32"),l.dispose()}vB(n);const[r,s]=n.shape.slice(0,2),o=n.rank===2?1:n.shape[2],i=await n.data(),a=n.dtype==="float32"?255:1,u=new Uint8ClampedArray(s*r*4);for(let l=0;l<r*s;++l){const c=[0,0,0,255];for(let h=0;h<o;h++){const p=i[l*o+h];if(n.dtype==="float32"){if(p<0||p>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${p}.`)}else if(n.dtype==="int32"&&(p<0||p>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${p}.`);o===1?(c[0]=p*a,c[1]=p*a,c[2]=p*a):c[h]=p*a}const d=l*4;u[d+0]=Math.round(c[0]),u[d+1]=Math.round(c[1]),u[d+2]=Math.round(c[2]),u[d+3]=Math.round(c[3])}if(e!=null){Ew||Xc(LS,z.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),Ew=!0),e.width=s,e.height=r;const l=e.getContext("2d"),c=new ImageData(u,s,r);l.putImageData(c,0,0)}return n!==t&&n.dispose(),u}const Ak=O({fromPixels_:xB});function p0(t,e){const n=t.shape.length,r=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${n}`);if(U(t.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const s=e.shape,o=s[s.length-1];let i=1;for(let d=0;d<s.length-1;++d)i*=s[d];const a=t.shape,u=s.slice();u.pop();let l=1;for(let d=o;d<n;++d)l*=a[d],u.push(a[d]);const c=[...lt(t.shape).map(d=>d/l),1].slice(0,o);return[u,i,l,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zf=-2,wB=-1;function f0(t,e,n){const r=t.shape.length;T(r===e.length,()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`),T(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)T(e[s]+n[s]<=t.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+n[s]}) would overflow input.shape[${s}] (${t.shape[s]})`)}function bB(t){const e=[];let n=0;for(;t>0;)t&1&&e.push(n),t/=2,n++;return e}function m0(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function Dk(t,e,n,r){const s=[...t];for(let o=s.length;o<r.length;o++)s.push(1);for(let o=0;o<n;o++)o===0?s[e]=1:(s.splice(e,0,1),s.pop());return s}function Ok(t,e,n){return n<=t?n:n-(e-1)}function Fk(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function CB(t,e,n,r,s,o,i,a,u){const l=t.length;let c=new Array(l),d=new Array(l),h=new Array(l);if(e.length&&n>0){const p=e[0],f=n+1;c=Lk(i,p,f,r,t),d=zk(a,p,f,s,t),h=Dk(o,p,f,t)}else for(let p=0;p<l;p++)c[p]=Mk(i,r,o,t,p,u),d[p]=Vk(a,s,o,t,p,u),h[p]=Bk(o,p,u);return{begin:c,end:d,strides:h}}function Lk(t,e,n,r,s){const o=[...s],i=Fk(n,e);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=0;else{const u=Ok(e,n,a);let l=r[u];t&1<<u&&(l=0),o[a]=l}return o}function zk(t,e,n,r,s){const o=[...s],i=Fk(n,e);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=Number.MAX_SAFE_INTEGER;else{const u=Ok(e,n,a);let l=r[u];t&1<<u&&(l=Number.MAX_SAFE_INTEGER),o[a]=l}for(let a=0;a<o.length;a++){const u=s[a];o[a]<0&&(o[a]+=u),o[a]=Vc(0,o[a],s[a])}return o}function Bk(t,e,n){let r=t[e];return(n&1<<e||r==null)&&(r=1),r}function Mk(t,e,n,r,s,o){let i=e[s];const a=n[s]||1;(t&1<<s||o&1<<s||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),i=Vc(0,i,u-1),i}function Vk(t,e,n,r,s,o){let i=e[s];const a=n[s]||1;(t&1<<s||o&1<<s||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),a>0?i=Vc(0,i,u):i=Vc(-1,i,u-1),i}function g0(t,e,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function y0(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function x0(t,e,n){let r;const s=t.shape.length;typeof e=="number"?r=[e,...new Array(s-1).fill(0)]:e.length<s?r=e.concat(new Array(s-e.length).fill(0)):r=e.slice(),r.forEach(i=>{T(i!==-1,()=>"slice() does not support negative begin indexing.")});let o;return n==null?o=new Array(s).fill(-1):typeof n=="number"?o=[n,...new Array(s-1).fill(-1)]:n.length<s?o=n.concat(new Array(s-n.length).fill(-1)):o=n,o=o.map((i,a)=>i>=0?i:(T(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),t.shape[a]-r[a])),[r,o]}function v0(t,e,n,r,s,o,i,a,u){let l;if(r==null?(l=new Array(e.length),l.fill(1)):l=r,i!=null&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const d={dims:l.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:l.slice(),beginMask:s,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:u};for(let b=0;b<d.dims;b++)c&&1<<b&a&&d.numAddAxisAfterEllipsis++,1<<b&i&&(c=!0);c||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};SB(d,h);let p=!0,f=!0,y=!0;const x=[],g=[];for(let b=0;b<t.length;++b){if(h.strides[b]===0)throw Error(`strides[${b}] must be non-zero`);const S=!!(h.shrinkAxisMask&1<<b),I=t[b];if(I===-1){x.push(S?1:-1);continue}const E=[h.beginMask&1<<b,h.endMask&1<<b],R=[h.strides[b]>0?0:-1,h.strides[b]>0?I:I-1];if(S&&h.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");y=y&&h.strides[b]===1;const _=!!(h.beginMask&1<<b&&h.endMask&1<<b);if(h.beginValid&&h.endValid){if(S){const j=h.begin[b]<0?I+h.begin[b]:h.begin[b];if(h.begin[b]=j,h.end[b]=h.begin[b]+1,j<0||j>=I)throw Error(`slice index ${h.begin[b]} of dimension ${b} out of bounds.`)}else h.begin[b]=Rw(h.begin[b],0,h.strides[b],I,E,R),h.end[b]=Rw(h.end[b],1,h.strides[b],I,E,R);const V=h.strides[b]===1&&h.begin[b]===0&&h.end[b]===I;p=p&&V,f=f&&(b===0&&h.strides[b]===1||V)}else p=p&&h.strides[b]===1&&_,f=f&&(b===0&&h.strides[b]===1||_);let L,F=!1;if(h.beginValid&&h.endValid?(L=h.end[b]-h.begin[b],F=!0):S?(L=1,F=!0):_&&I>=0&&(h.strides[b]<0?L=-I:L=I,F=!0),F){let V;L===0||L<0!=h.strides[b]<0?V=0:V=Math.trunc(L/h.strides[b])+(L%h.strides[b]!==0?1:0),x.push(V)}else x.push(-1)}for(let b=0;b<h.finalShapeGatherIndices.length;++b){const S=h.finalShapeGatherIndices[b];S>=0?g.push(x[S]):S===zf&&g.push(1)}return{finalShapeSparse:g.filter((b,S)=>h.finalShapeGatherIndices[S]!==zf),finalShape:g,isIdentity:p,sliceDim0:f,isSimpleSlice:y,begin:h.begin,end:h.end,strides:h.strides}}function SB(t,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=t.begin!=null,e.endValid=t.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<t.dims;r++)if(1<<r&t.ellipsisMask){const s=Math.min(e.dims-(t.dims-r)+1+t.numAddAxisAfterEllipsis,e.dims);for(;n<s;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&t.newAxisMask)e.finalShapeGatherIndices.push(zf),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${e.dims} dims, ${e.begin.length}.`);t.begin!=null&&(e.begin[n]=t.begin[r]),t.end!=null&&(e.end[n]=t.end[r]),e.strides[n]=t.strides[r],t.beginMask&1<<r&&(e.beginMask|=1<<n),t.endMask&1<<r&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(wB),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[n]=r,n++}}function Rw(t,e,n,r,s,o){if(s[e])return n>0?o[e]:o[e+1&1];{const i=t<0?r+t:t;return i<o[0]?o[0]:i>o[1]?o[1]:i}}const $B=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:f0,computeFlatOffset:y0,computeOutShape:m0,getNormalizedAxes:CB,isSliceContinous:g0,maskToAxes:bB,parseSliceParams:x0,sliceInfo:v0,startForAxis:Mk,startIndicesWithElidedDims:Lk,stopForAxis:Vk,stopIndicesWithElidedDims:zk,stridesForAxis:Bk,stridesWithElidedDims:Dk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kB=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:t=>t();function IB(){return new Promise(t=>kB(()=>t()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w0(t,e){const n=t[0].length;t.forEach((s,o)=>{T(s.length===n,()=>`Error in concat${n}D: rank of tensors[${o}] must be the same as the rank of the rest (${n})`)}),T(e>=0&&e<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=t[0];t.forEach((s,o)=>{for(let i=0;i<n;i++)T(i===e||s[i]===r[i],()=>`Error in concat${n}D: Shape of tensors[${o}] (${s}) does not match the shape of the rest (${r}) along the non-concatenated axis ${o}.`)})}function or(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var yr;(function(t){t[t.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",t[t.VALUE_ROWIDS=1]="VALUE_ROWIDS",t[t.ROW_LENGTHS=2]="ROW_LENGTHS",t[t.ROW_SPLITS=3]="ROW_SPLITS",t[t.ROW_LIMITS=4]="ROW_LIMITS",t[t.ROW_STARTS=5]="ROW_STARTS"})(yr||(yr={}));function Wk(t,e,n){let r=new Array;if(n==null&&e==null)return r;if(e==null)for(;r.length<t+n.length;)r.push(-1);else r=e.slice();if(n==null)return r;if(t+n.length!==r.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${t+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const o=n[s],i=r[r.length-n.length+s],a=r[i];if(o>=0)if(a>=0){if(a!==o)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${s+t}] = ${o} but shape[${s+t}] = ${a}`)}else r[i]=o}return r}function Uk(t){const e={FIRST_DIM_SIZE:yr.FIRST_DIM_SIZE,VALUE_ROWIDS:yr.VALUE_ROWIDS,ROW_LENGTHS:yr.ROW_LENGTHS,ROW_SPLITS:yr.ROW_SPLITS,ROW_LIMITS:yr.ROW_LIMITS,ROW_STARTS:yr.ROW_STARTS},n=[];for(const r of t)if(r in e)n.push(e[r]);else break;return n}function Gk(t){return t.length===0?0:t[0]===yr.FIRST_DIM_SIZE?t.length-1:t.length}function Hk(t,e){if(t==null||e==null)return;const n=t.length,r=e.length;if(n>=r)throw new Error(`defaultValue.shape=${t} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const o=t[s],i=e[s+1];if(o>=0&&i>=0&&o!==1&&o!==i)throw new Error(`defaultValue.shape=${t}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${s-t.length}] = ${o} but ragged tensor input.flatValues.shape[${s-t.length}] = ${i}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b0=30;function Hd(t){return t<=b0?t:vf(t,Math.floor(Math.sqrt(t)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C0(t,e,n){const r=n*(typeof t=="number"?t:t[0]),s=e*(typeof t=="number"?t:t[1]);return[r,s]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ol(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const o=e.length;for(let i=0;i<o;++i)s=s.concat([t[i+1]/e[i],e[i]]);s=s.concat(t.slice(o+1))}return s}function il(t,e,n=!0){const r=[];if(n){r.push(e);for(let s=e+1;s<t;++s)s<=2*e?(r.push(s),r.push(s-(e+1))):r.push(s)}else{const s=[],o=[];for(let i=1;i<t;++i)i>=e*2+1||i%2===1?o.push(i):s.push(i);r.push(...s),r.push(0),r.push(...o)}return r}function al(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let o=1;o<t.length;++o)o<=e.length?r?s.push(e[o-1]*t[o]):s.push(t[o]/e[o-1]):s.push(t[o]);return s}function S0(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function $0(t,e,n){const r=t.slice(0,1);for(let s=0;s<n;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k0=1.7580993408473768,I0=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N0=.3275911,T0=.254829592,E0=-.284496736,R0=1.421413741,_0=-1.453152027,P0=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vu(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(t.length*2);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function NB(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function TB(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let s=0;s<t.length;s+=4)n[Math.floor(s/4)]=t[s],r[Math.floor(s/4)]=t[s+1];return{real:n,imag:r}}function EB(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let s=2;s<t.length;s+=4)n[Math.floor(s/4)]=t[s],r[Math.floor(s/4)]=t[s+1];return{real:n,imag:r}}function RB(t,e){const n=t[e*2],r=t[e*2+1];return{real:n,imag:r}}function _B(t,e,n,r){t[r*2]=e,t[r*2+1]=n}function PB(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const o=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(o),r[s]=Math.sin(o)}return{real:n,imag:r}}function AB(t,e,n){const r=(n?2:-2)*Math.PI*(t/e),s=Math.cos(r),o=Math.sin(r);return{real:s,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rp="->",DB=/->/g,_w=",",Pw="...";function A0(t,e){t=t.replace(/\s/g,"");const n=(t.length-t.replace(DB,"").length)/rp.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${rp}").`);const[r,s]=t.split(rp);T(r.indexOf(Pw)===-1,()=>`The ellipsis notation ("${Pw}") is not supported yet.`);const o=r.split(_w),i=o.length;if(e!==i)throw new Error(`Expected ${i} input tensors, received ${e}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let h=0;h<s.length;++h){const p=s[h];if(!o.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);a.indexOf(p)===-1&&a.push(p)}for(let h=0;h<r.length;++h){const p=r[h];a.indexOf(p)===-1&&p!==_w&&a.push(p)}const u=new Array(o.length);for(let h=0;h<i;++h){if(new Set(o[h].split("")).size!==o[h].length)throw new Error(`Found duplicate axes in input component ${o[h]}. Support for duplicate axes in input is not implemented yet.`);u[h]=[];for(let p=0;p<o[h].length;++p)u[h].push(a.indexOf(o[h][p]))}const l=a.length,c=s.length,d=[];for(let h=c;h<l;++h)d.push(h);return{allDims:a,summedDims:d,idDims:u}}function D0(t,e){let n=new Array(t);n.fill(-1);for(let s=0;s<e.length;++s)n[e[s]]=s;const r=[];for(let s=0;s<t;++s)n[s]===-1&&r.push(s);return n=n.filter(s=>s!==-1),{permutationIndices:n,expandDims:r}}function O0(t,e,n){const r=new Array(t);for(let s=0;s<n.length;++s){const o=n[s].shape;for(let i=0;i<e[s].length;++i)r[e[s][i]]===void 0?r[e[s][i]]=o[i]:T(r[e[s][i]]===o[i],()=>`Expected dimension ${r[e[s][i]]} at axis ${i} of input shaped ${JSON.stringify(o)}, but got dimension ${o[i]}`)}}function F0(t,e){const n=t,r=[];let s=0;t.length===0&&n.push(-1),s=t.length+1;for(let i=0;i<s;++i)r.push([]);const o=[];for(let i=0;i<n.length;++i){const a=n[i],u=OB(e,a);for(const l of u)o.indexOf(l)===-1&&(r[i].push(l),o.push(l))}return{path:n,steps:r}}function L0(t){return t.every((e,n)=>e===n)}function OB(t,e){const n=[];for(let r=0;r<t.length;++r)(t[r].length===0||t[r].indexOf(e)!==-1||e===-1)&&n.push(r);return n}function z0(t,e,n=0){let r=[];if(typeof e=="number")T(t.shape[n]%e===0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(t.shape[n]/e);else{const s=e.reduce((i,a)=>(a===-1&&(i+=1),i),0);T(s<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const i=e.reduce((a,u)=>u>0?a+u:a);e[o]=t.shape[n]-i}T(t.shape[n]===e.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jk(t){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${t}`}function Kk(t,e){return`indices(${t}, 0) is invalid: ${e} < 0`}function Xk(t,e,n){return`indices(${t}, 0) is invalid: ${e} >= ${n}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qk(t,e){return`only one output dimension may be -1, not both ${t} and ${e}`}function Yk(t,e){return`size ${t} must be non-negative, not ${e}`}function Qk(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Zk(t,e){const n=U(t),r=U(e);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${t} outputShape= ${e}`}function Jk(t,e){const n=U(t),r=U(e);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${r}. inputShape=${t} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bf(){return"segment ids must be >= 0"}function eI(){return"segment ids are not increasing"}function tI(t,e){return`Segment id ${t} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function nI(t,e,n){return`Bad: indices[${t}] == ${e} out of range [0, ${n})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rI(t,e){let n=!1,r;for(t<=b0?(r=t,n=!0):r=vf(t,Math.floor(Math.sqrt(t)));!n;)r>e||r===t?n=!0:r=vf(t,r+1);return r}function B0(t,e,n){const r=[],s=t.length;for(let o=0;o<s;o++)o!==e?r.push(t[o]):r.push(n);return r}function M0(t,e,n,r){const s=e.shape.length,o=t.shape.length;if(r!==0&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>o)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${o}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(t.shape[d]!==e.shape[d])throw new Error(`x.shape[${d}]: ${t.shape[d]} should be equal to indices.shape[${d}]: ${e.shape[d]}.`);const i=t.shape[n],a=[];let u=1,l=1,c=1;for(let d=0;d<r;++d)a.push(t.shape[d]),u*=t.shape[d];for(let d=r;d<n;d++)a.push(t.shape[d]),l*=t.shape[d];for(let d=r;d<s;d++)a.push(e.shape[d]);for(let d=n+1;d<o;d++)a.push(t.shape[d]),c*=t.shape[d];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:a}}const FB=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:M0,computeOutShape:B0,segOpComputeOptimalWindowSize:rI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ys(t){try{return t.map(e=>us(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function sI(t){return t.map(e=>Ws(e))}const LB=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:T0,ERF_A2:E0,ERF_A3:R0,ERF_A4:_0,ERF_A5:P0,ERF_P:N0,PARALLELIZE_THRESHOLD:b0,get RowPartitionType(){return yr},SELU_SCALE:I0,SELU_SCALEALPHA:k0,applyActivation:Ud,assertAndGetBroadcastShape:$e,assertAxesAreInnerMostDims:Tn,assertParamsConsistent:w0,assignToTypedArray:_B,axesAreInnerMostDims:Hx,calculateShapes:Zo,checkEinsumDimSizes:O0,checkPadOnDimRoundingMode:ar,combineLocations:K$,combineRaggedTensorToTensorShapes:Wk,complexWithEvenIndex:TB,complexWithOddIndex:EB,computeConv2DInfo:gt,computeConv3DInfo:ro,computeDefaultPad:Ux,computeDilation2DInfo:nl,computeOptimalWindowSize:Hd,computeOutAndReduceShapes:Vn,computeOutShape:or,computePool2DInfo:ir,computePool3DInfo:gs,convertConv2DDataFormat:kr,decodeEinsumEquation:A0,eitherStridesOrDilationsAreOne:qt,expandShapeToKeepDim:Nn,exponent:AB,exponents:PB,fromStringArrayToUint8:sI,fromUint8ToStringArray:Ys,getAxesPermutation:Lt,getBroadcastDims:ea,getComplexWithIndex:RB,getEinsumComputePath:F0,getEinsumPermutation:D0,getFusedBiasGradient:Wd,getFusedDyActivation:Vd,getImageCenter:C0,getInnerMostAxes:zt,getPermuted:il,getRaggedRank:Gk,getReductionAxes:G$,getReshaped:ol,getReshapedPermuted:al,getRowPartitionTypesHelper:Uk,getSliceBeginCoords:S0,getSliceSize:$0,getSparseFillEmptyRowsIndicesDenseShapeMismatch:jk,getSparseFillEmptyRowsNegativeIndexErrorMessage:Kk,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:Xk,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:Qk,getSparseReshapeInputOutputMismatchErrorMessage:Jk,getSparseReshapeInputOutputMultipleErrorMessage:Zk,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:qk,getSparseReshapeNegativeOutputDimErrorMessage:Yk,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:nI,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Bf,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:eI,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:tI,getUndoAxesPermutation:sl,isIdentityPermutation:L0,log:M3,mergeRealAndImagArrays:Vu,prepareAndValidate:p0,prepareSplitSize:z0,segment_util:FB,shouldFuse:Gd,slice_util:$B,splitRealAndImagArrays:NB,stridesOrDilationsArePositive:Uo,tupleValuesAreOne:Du,upcastType:nn,validateDefaultValueShape:Hk,validateInput:o0,validateUpdateShape:vk,warn:xr},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */eB();/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zB=M();zB.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var pn;(function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_QINT16=15]="DT_QINT16",t[t.DT_QUINT16=16]="DT_QUINT16",t[t.DT_UINT16=17]="DT_UINT16",t[t.DT_COMPLEX128=18]="DT_COMPLEX128",t[t.DT_HALF=19]="DT_HALF",t[t.DT_RESOURCE=20]="DT_RESOURCE",t[t.DT_VARIANT=21]="DT_VARIANT",t[t.DT_UINT32=22]="DT_UINT32",t[t.DT_UINT64=23]="DT_UINT64",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",t[t.DT_QINT16_REF=115]="DT_QINT16_REF",t[t.DT_QUINT16_REF=116]="DT_QUINT16_REF",t[t.DT_UINT16_REF=117]="DT_UINT16_REF",t[t.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",t[t.DT_HALF_REF=119]="DT_HALF_REF",t[t.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",t[t.DT_VARIANT_REF=121]="DT_VARIANT_REF",t[t.DT_UINT32_REF=122]="DT_UINT32_REF",t[t.DT_UINT64_REF=123]="DT_UINT64_REF"})(pn||(pn={}));var Aw;(function(t){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))})(Aw||(Aw={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BB={};function oI(t){return BB[t]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C(t,e,n,r,s){const o=e.inputParams[t];if(o&&o.inputIndexStart!==void 0){const a=o.inputIndexStart,u=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?a+1:o.inputIndexEnd,l=a<0?e.inputNames.length+a:a;if(o.type==="tensor")return It(e.inputNames[l],n,r,s);if(o.type==="tensors"){const h=e.inputs.slice(a,u);return e.inputNames.slice(a,u).filter((f,y)=>{var x;return((x=h[y])===null||x===void 0?void 0:x.op)!=="NoOp"}).map(f=>It(f,n,r,s))}const c=It(e.inputNames[l],n,r,s),d=c.dataSync();return o.type==="number"?d[0]:wf(c.shape,d)}const i=e.attrParams[t];return i&&i.value}function It(t,e,n,r){const[s,o]=fn(t,n);if(r!=null){const a=r.getHashTableHandleByName(s);if(a!=null)return a}const i=n.currentContextIds.find(a=>!!e[td(s,a)]);return i!==void 0?e[td(s,i)][o]:void 0}function Dw(t,e,n){return e[td(t,n.currentContextId)]}function qr(t,e){const[n,r,s]=fn(t,e);return[td(n,e&&e.currentContextId),r,s]}function td(t,e){return e?`${t}-${e}`:t}function fn(t,e){if(t==="")return["",0,void 0];const n=e!=null&&e.parseNodeNameCache!=null;if(n){const o=e.parseNodeNameCache.get(t);if(o!=null)return o}const r=t.split(":");let s;if(r.length===1)s=[t,0,void 0];else{const o=r[0],i=r.length===3?r[1]:void 0,a=Number(r[r.length-1]);s=[o,a,i]}return n&&e.parseNodeNameCache.set(t,s),s}function fc(t,e,n){let r=C("pad",t,e,n);if(r==="explicit"){r=C("explicitPaddings",t,e,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)s[o][0]=r[o*2],s[o][1]=r[o*2+1];return s}return r}function Yr(t){return t.kept?t:Us(t)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MB=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],VB=Object.freeze(Object.defineProperty({__proto__:null,json:MB},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WB=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],UB=Object.freeze(Object.defineProperty({__proto__:null,json:WB},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GB=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],HB=Object.freeze(Object.defineProperty({__proto__:null,json:GB},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jB=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],KB=Object.freeze(Object.defineProperty({__proto__:null,json:jB},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XB=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],qB=Object.freeze(Object.defineProperty({__proto__:null,json:XB},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YB=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],QB=Object.freeze(Object.defineProperty({__proto__:null,json:YB},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZB=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],JB=Object.freeze(Object.defineProperty({__proto__:null,json:ZB},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eM=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],tM=Object.freeze(Object.defineProperty({__proto__:null,json:eM},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nM=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],rM=Object.freeze(Object.defineProperty({__proto__:null,json:nM},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sM=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],oM=Object.freeze(Object.defineProperty({__proto__:null,json:sM},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iM=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],aM=Object.freeze(Object.defineProperty({__proto__:null,json:iM},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uM=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],lM=Object.freeze(Object.defineProperty({__proto__:null,json:uM},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cM=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],dM=Object.freeze(Object.defineProperty({__proto__:null,json:cM},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hM=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],pM=Object.freeze(Object.defineProperty({__proto__:null,json:hM},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fM=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],mM=Object.freeze(Object.defineProperty({__proto__:null,json:fM},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gM=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],yM=Object.freeze(Object.defineProperty({__proto__:null,json:gM},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xM=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],vM=Object.freeze(Object.defineProperty({__proto__:null,json:xM},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wM=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],bM=Object.freeze(Object.defineProperty({__proto__:null,json:wM},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CM=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],SM=Object.freeze(Object.defineProperty({__proto__:null,json:CM},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ow{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[VB,UB,HB,KB,qB,QB,JB,tM,rM,oM,aM,lM,dM,pM,mM,yM,vM,bM,SM],n=[].concat(...e.map(r=>r.json));this.opMappers=n.reduce((r,s)=>(r[s.tfOpName]=s,r),{})}transformGraph(e,n={}){const r=e.node,s=[],o=[],i=[],a=r.reduce((y,x)=>(y[x.name]=this.mapNode(x),x.op.startsWith("Placeholder")?s.push(y[x.name]):x.op==="Const"?o.push(y[x.name]):(x.input==null||x.input.length===0)&&i.push(y[x.name]),y),{});let u=[];const l=[];let c={},d={};n!=null&&(c=this.mapSignatureEntries(n.inputs),d=this.mapSignatureEntries(n.outputs));const h=Object.keys(a);h.forEach(y=>{const x=a[y];x.inputNames.forEach((g,v)=>{const[b,,S]=qr(g),I=a[b];if(I.outputs!=null){const E=I.outputs.indexOf(S);if(E!==-1){const R=`${b}:${E}`;x.inputNames[v]=R}}x.inputs.push(I),I.children.push(x)})}),Object.keys(d).length===0?h.forEach(y=>{const x=a[y];x.children.length===0&&l.push(x)}):Object.keys(d).forEach(y=>{const[x]=qr(y),g=a[x];g!=null&&(g.signatureKey=d[y],l.push(g))}),Object.keys(c).length>0?Object.keys(c).forEach(y=>{const[x]=qr(y),g=a[x];g&&(g.signatureKey=c[y],u.push(g))}):u=s;let p={};e.library!=null&&e.library.function!=null&&(p=e.library.function.reduce((y,x)=>(y[x.signature.name]=this.mapFunction(x),y),{}));const f={nodes:a,inputs:u,outputs:l,weights:o,placeholders:s,signature:n,functions:p};return i.length>0&&(f.initNodes=i),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((n,r)=>(n[e[r].name]=r,n),{})}mapNode(e){const n=oI(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const r={name:e.name,op:e.op,category:n.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.slice(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:n.outputs};return n.inputs!=null&&(r.inputParams=n.inputs.reduce((s,o)=>(s[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},s),{})),n.attrs!=null&&(r.attrParams=n.attrs.reduce((s,o)=>{const i=o.type;let a;switch(o.type){case"string":a=Mf(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=Mf(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":a=Kf(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=Kf(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":a=Wf(e.attr,o.tfName,o.defaultValue||0),a===void 0&&o.tfDeprecatedName&&(a=Wf(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":a=jf(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=jf(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":a=Vf(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=Vf(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":a=qf(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=qf(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":a=Hf(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=Hf(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":a=Xf(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=Xf(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":a=Uf(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=Uf(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":a=Gf(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=Gf(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":a=Fw(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=Fw(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${e.op}`)}return s[o.name]={value:a,type:i},s},{})),r}mapFunction(e){const n=e.nodeDef,r=[],s=[];let o={};n!=null&&(o=n.reduce((d,h)=>(d[h.name]=this.mapNode(h),h.op==="Const"&&s.push(d[h.name]),d),{}));const i=[],a=[];e.signature.inputArg.forEach(d=>{const[h]=qr(d.name),p={name:h,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:V0(d.type),type:"dtype"}},children:[]};p.signatureKey=d.name,i.push(p),o[h]=p}),Object.keys(o).forEach(d=>{const h=o[d];h.inputNames.forEach((p,f)=>{const[y,,x]=qr(p),g=o[y];if(g.outputs!=null){const v=g.outputs.indexOf(x);if(v!==-1){const b=`${y}:${v}`;h.inputNames[f]=b}}h.inputs.push(g),g.children.push(h)})});const l=e.ret;e.signature.outputArg.forEach(d=>{const[h,p]=qr(l[d.name]),f=o[h];f!=null&&(f.defaultOutput=p,a.push(f))});const c=this.mapArgsToSignature(e);return{nodes:o,inputs:i,outputs:a,weights:s,placeholders:r,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((n,r)=>(n[r.name]=this.mapArgToTensorInfo(r),n),{}),outputs:e.signature.outputArg.reduce((n,r)=>(n[r.name]=this.mapArgToTensorInfo(r,e.ret),n),{})}}mapArgToTensorInfo(e,n){let r=e.name;return n!=null&&(r=n[r]),{name:r,dtype:e.type}}}function $M(t){const e=M().global;if(typeof e.atob<"u")return e.atob(t);if(typeof Buffer<"u")return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function iI(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):$M(t);return e?n:n.toLowerCase()}function Mf(t,e,n,r=!1){const s=t[e];return s!=null?iI(s.s,r):n}function Vf(t,e,n){const r=t[e];return r?r.b:n}function Wf(t,e,n){const r=t[e]||{},s=r.i!=null?r.i:r.f!=null?r.f:n;return typeof s=="number"?s:parseInt(s,10)}function V0(t){switch(typeof t=="string"&&(t=pn[t]),t){case pn.DT_FLOAT:case pn.DT_HALF:return"float32";case pn.DT_INT32:case pn.DT_INT64:case pn.DT_INT8:case pn.DT_UINT8:return"int32";case pn.DT_BOOL:return"bool";case pn.DT_DOUBLE:return"float32";case pn.DT_STRING:return"string";case pn.DT_COMPLEX64:case pn.DT_COMPLEX128:return"complex64";default:return null}}function Fw(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function Uf(t,e,n){const r=t[e];return r&&r.type?V0(r.type):n}function Gf(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map(s=>V0(s)):n}function aI(t){if(!t.unknownRank)return t.dim!=null?t.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function Hf(t,e,n){const r=t[e];return r&&r.shape?aI(r.shape):n}function jf(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(s=>typeof s=="number"?s:parseInt(s,10)):n}function Kf(t,e,n,r=!1){const s=t[e];return s&&s.list&&s.list.s?s.list.s.map(o=>iI(o,r)):n}function Xf(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map(s=>aI(s)):n}function qf(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kM{constructor(e,n,r){this.node=e,this.tensorMap=n,this.context=r,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,o)=>(s[o]=this.getAttr(o),s),{}))}getInput(e){return It(e,this.tensorMap,this.context)}getAttr(e,n){const r=this.node.rawAttrs[e];if(r.tensor!=null)return It(e,this.tensorMap,this.context);if(r.i!=null||r.f!=null)return Wf(this.node.rawAttrs,e,n);if(r.s!=null)return Mf(this.node.rawAttrs,e,n);if(r.b!=null)return Vf(this.node.rawAttrs,e,n);if(r.shape!=null)return Hf(this.node.rawAttrs,e,n);if(r.type!=null)return Uf(this.node.rawAttrs,e,n);if(r.list!=null){if(r.list.i!=null||r.list.f!=null)return jf(this.node.rawAttrs,e,n);if(r.list.s!=null)return Kf(this.node.rawAttrs,e,n);if(r.list.shape!=null)return Xf(this.node.rawAttrs,e,n);if(r.list.b!=null)return qf(this.node.rawAttrs,e,n);if(r.list.type!=null)return Gf(this.node.rawAttrs,e,n)}return n}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Et=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:C$,abs:_n,acos:tP,acosh:rP,add:fe,addN:oP,all:aP,any:lP,argMax:z$,argMin:hP,asin:fP,asinh:gP,atan:xP,atan2:wP,atanh:CP,avgPool:B$,avgPool3d:RP,basicLSTMCell:LP,batchNorm:Od,batchNorm2d:WP,batchNorm3d:GP,batchNorm4d:jP,batchToSpaceND:M$,bincount:V$,bitwiseAnd:qP,booleanMaskAsync:PL,broadcastArgs:QP,broadcastTo:du,buffer:Be,cast:je,ceil:eA,clipByValue:W$,clone:Us,complex:Ks,concat:St,concat1d:rA,concat2d:oA,concat3d:aA,concat4d:lA,conv1d:hA,conv2d:Fd,conv2dTranspose:mA,conv3d:yA,conv3dTranspose:bA,cos:SA,cosh:kA,cosineWindow:i0,cumprod:NA,cumsum:EA,denseBincount:_A,depthToSpace:AA,depthwiseConv2d:Gx,diag:FA,dilation2d:zA,div:Te,divNoNan:UA,dot:HA,dropout:HL,einsum:xi,elu:j$,enclosingPowerOfTwo:Ck,ensureShape:qA,equal:H$,erf:QA,euclideanNorm:iD,exp:ds,expandDims:Pn,expm1:cD,eye:q$,fft:r0,fill:rl,floor:Y$,floorDiv:L$,fused:i4,gather:Q$,gatherND:WL,greater:zd,greaterEqual:Z$,ifft:ed,imag:Bd,image:_o,inTopKAsync:KL,irfft:mk,isFinite:vD,isInf:bD,isNaN:SD,leakyRelu:J$,less:Of,lessEqual:jx,linalg:Bz,linspace:ND,localResponseNormalization:ED,log:Fu,log1p:ek,logSigmoid:FD,logSoftmax:BD,logSumExp:nk,logicalAnd:Zc,logicalNot:rk,logicalOr:sk,logicalXor:HD,losses:Mz,lowerBound:KD,matMul:We,max:Vi,maxPool:ok,maxPool3d:YD,maxPoolWithArgmax:ZD,maximum:ik,mean:Jc,meshgrid:tO,min:Df,minimum:Lu,mirrorPad:ak,mod:oO,moments:aO,movingAverage:OL,mul:Y,multiRNNCell:lO,multinomial:dO,neg:Vr,norm:Ld,notEqual:uk,oneHot:fO,ones:No,onesLike:gO,op:O,outerProduct:xO,pad:qs,pad1d:bO,pad2d:SO,pad3d:kO,pad4d:NO,pool:PO,pow:Ou,prelu:ck,print:F$,prod:OO,raggedGather:LO,raggedRange:BO,raggedTensorToTensor:VO,rand:UO,randomGamma:lF,randomNormal:hk,randomStandardNormal:hF,randomUniform:n0,randomUniformInt:mF,range:zu,real:Bu,reciprocal:xF,relu:Md,relu6:pk,reshape:H,reverse:Go,reverse1d:SF,reverse2d:kF,reverse3d:NF,reverse4d:EF,rfft:s0,round:fk,rsqrt:PF,scalar:Ie,scatterND:LL,searchSorted:Kx,selu:DF,separableConv2d:FF,setdiff1dAsync:zF,sigmoid:ts,sign:MF,signal:zz,sin:WF,sinh:GF,slice:ke,slice1d:jF,slice2d:XF,slice3d:YF,slice4d:ZF,softmax:eL,softplus:tk,spaceToBatchND:lk,sparse:Vz,sparseToDense:ML,spectral:Lz,split:Mu,sqrt:cs,square:er,squaredDifference:gk,squeeze:Ve,stack:fs,step:yk,stridedSlice:dL,string:Wz,sub:be,sum:qe,tan:pL,tanh:Af,tensor:Mr,tensor1d:Dt,tensor2d:tr,tensor3d:xk,tensor4d:fL,tensor5d:mL,tensor6d:gL,tensorScatterUpdate:xL,tile:hu,topk:wL,transpose:Ff,truncatedNormal:CL,unique:$L,unsortedSegmentSum:IL,unstack:Jo,upperBound:TL,variable:EL,where:Gs,whereAsync:bk,zeros:ps,zerosLike:Fn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IM=(t,e,n,r=Et)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(C("a",t,e,n),C("b",t,e,n))];case"AddN":return[r.addN(C("tensors",t,e,n))];case"FloorMod":case"Mod":return[r.mod(C("a",t,e,n),C("b",t,e,n))];case"Mul":return[r.mul(C("a",t,e,n),C("b",t,e,n))];case"RealDiv":case"Div":return[r.div(C("a",t,e,n),C("b",t,e,n))];case"DivNoNan":return[r.divNoNan(C("a",t,e,n),C("b",t,e,n))];case"FloorDiv":return[r.floorDiv(C("a",t,e,n),C("b",t,e,n))];case"Sub":return[r.sub(C("a",t,e,n),C("b",t,e,n))];case"Minimum":return[r.minimum(C("a",t,e,n),C("b",t,e,n))];case"Maximum":return[r.maximum(C("a",t,e,n),C("b",t,e,n))];case"Pow":return[r.pow(C("a",t,e,n),C("b",t,e,n))];case"SquaredDifference":return[r.squaredDifference(C("a",t,e,n),C("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NM=(t,e,n,r=Et)=>{switch(t.op){case"Abs":case"ComplexAbs":return[r.abs(C("x",t,e,n))];case"Acos":return[r.acos(C("x",t,e,n))];case"Acosh":return[r.acosh(C("x",t,e,n))];case"Asin":return[r.asin(C("x",t,e,n))];case"Asinh":return[r.asinh(C("x",t,e,n))];case"Atan":return[r.atan(C("x",t,e,n))];case"Atan2":return[r.atan2(C("x",t,e,n),C("y",t,e,n))];case"Atanh":return[r.atanh(C("x",t,e,n))];case"Ceil":return[r.ceil(C("x",t,e,n))];case"Complex":return[r.complex(C("real",t,e,n),C("imag",t,e,n))];case"Cos":return[r.cos(C("x",t,e,n))];case"Cosh":return[r.cosh(C("x",t,e,n))];case"Elu":return[r.elu(C("x",t,e,n))];case"Erf":return[r.erf(C("x",t,e,n))];case"Exp":return[r.exp(C("x",t,e,n))];case"Expm1":return[r.expm1(C("x",t,e,n))];case"Floor":return[r.floor(C("x",t,e,n))];case"Log":return[r.log(C("x",t,e,n))];case"Log1p":return[r.log1p(C("x",t,e,n))];case"Imag":return[r.imag(C("x",t,e,n))];case"Neg":return[r.neg(C("x",t,e,n))];case"Reciprocal":return[r.reciprocal(C("x",t,e,n))];case"Real":return[r.real(C("x",t,e,n))];case"Relu":return[r.relu(C("x",t,e,n))];case"Round":return[r.round(C("x",t,e,n))];case"Selu":return[r.selu(C("x",t,e,n))];case"Sigmoid":return[r.sigmoid(C("x",t,e,n))];case"Sin":return[r.sin(C("x",t,e,n))];case"Sign":return[r.sign(C("x",t,e,n))];case"Sinh":return[r.sinh(C("x",t,e,n))];case"Softplus":return[r.softplus(C("x",t,e,n))];case"Sqrt":return[r.sqrt(C("x",t,e,n))];case"Square":return[r.square(C("x",t,e,n))];case"Tanh":return[r.tanh(C("x",t,e,n))];case"Tan":return[r.tan(C("x",t,e,n))];case"ClipByValue":return[r.clipByValue(C("x",t,e,n),C("clipValueMin",t,e,n),C("clipValueMax",t,e,n))];case"Relu6":return[r.relu6(C("x",t,e,n))];case"Rsqrt":return[r.rsqrt(It(t.inputNames[0],e,n))];case"LeakyRelu":return[r.leakyRelu(C("x",t,e,n),C("alpha",t,e,n))];case"Prelu":return[r.prelu(C("x",t,e,n),C("alpha",t,e,n))];case"IsNan":return[r.isNaN(It(t.inputNames[0],e,n))];case"IsInf":return[r.isInf(It(t.inputNames[0],e,n))];case"IsFinite":return[r.isFinite(It(t.inputNames[0],e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hn(t,e,n=""){if(!(typeof t=="number"||typeof e=="number")){T(t.length===e.length,()=>n+` Shapes ${t} and ${e} must match`);for(let r=0;r<t.length;r++){const s=t[r],o=e[r];T(s<0||o<0||s===o,()=>n+` Shapes ${t} and ${e} must match`)}}}function Lw(t){return!(typeof t=="number"||t.some(e=>e<0))}function Ga(t,e,n){let r=Yf(t,n);const s=!Lw(r);if(s&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&e.forEach(o=>{r=Yf(o.shape,r)}),!Lw(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Yf(t,e){if(typeof t=="number")return e;if(typeof e=="number")return t;if(t.length!==e.length)throw new Error(`Incompatible ranks during merge: ${t} vs. ${e}`);const n=[];for(let r=0;r<t.length;++r){const s=t[r],o=e[r];if(s>=0&&o>=0&&s!==o)throw new Error(`Incompatible shape during merge: ${t} vs. ${e}`);n[r]=s>=0?s:o}return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TM{constructor(e,n,r,s,o,i,a){this.name=e,this.dtype=n,this.maxSize=r,this.elementShape=s,this.identicalElementShapes=o,this.dynamicSize=i,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=Ie(0),Or(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(n=>{(e==null||!e.has(n.tensor.id))&&n.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const n=this.tensors[e];if(n.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(n.cleared=!0),n.read=!0,n.tensor}readMany(e){return e.map(n=>this.read(n))}write(e,n){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const r=this.tensors[e]||{};if(n.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${n.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=n.shape),Hn(this.elementShape,n.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),r.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(r.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);r.tensor=n,Or(n),r.written=!0,this.tensors[e]=r}writeMany(e,n){if(e.length!==n.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${n.length}.`);e.forEach((r,s)=>this.write(r,n[s]))}gather(e,n){if(n&&n!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${n}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return Mr([],[0].concat(this.elementShape));const r=this.readMany(e);return Hn(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),fs(r,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Mr([],[0].concat(this.elementShape));const n=[];for(let s=0;s<this.size();s++)n.push(s);const r=this.readMany(n);return Hn(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),St(r,0)}scatter(e,n){if(n.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`);if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const r=Math.max(...e);if(!this.dynamicSize&&r>=this.maxSize)throw new Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(e,Jo(n,0))}split(e,n){if(n.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`);let r=0;const s=e.map(u=>(r+=u,r));if(r!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${n.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const o=r===0?0:n.size/r,i=[];xe(()=>{n=H(n,[1,r,o]);for(let u=0;u<e.length;++u){const c=[0,u===0?0:s[u-1],0],d=[1,e[u],o];i[u]=H(ke(n,c,d),this.elementShape)}return i});const a=[];for(let u=0;u<e.length;u++)a[u]=u;this.writeMany(a,i)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jo{get id(){return this.idTensor.id}constructor(e,n,r,s=-1){this.tensors=e,this.elementShape=n,this.elementDtype=r,e!=null&&e.forEach(o=>{if(r!==o.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${o.dtype}`);Hn(n,o.shape,"TensorList shape mismatch: "),Or(o)}),this.idTensor=Ie(0),this.maxNumElements=s,Or(this.idTensor)}copy(){return new jo([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(n=>{(e==null||!e.has(n.id))&&n.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,n,r=-1){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);Hn(e,this.elementShape,"TensorList shape mismatch: ");const s=Ga(this.elementShape,this.tensors,e);return xe(()=>{const o=this.tensors.map(i=>H(i,s));return fs(o,0)})}popBack(e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const r=Ga(this.elementShape,this.tensors,e),s=this.tensors.pop();return s.kept=!1,Hn(s.shape,e,"TensorList shape mismatch: "),H(s,r)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Hn(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Or(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const n=new jo([],this.elementShape,this.elementDtype,this.maxNumElements);n.tensors.length=e;for(let r=0;r<Math.min(this.tensors.length,e);++r)n.tensors[r]=this.tensors[r];return n}getItem(e,n,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Hn(this.tensors[e].shape,n,"TensorList shape mismatch: ");const s=Ga(this.elementShape,this.tensors,n);return H(this.tensors[e],s)}setItem(e,n){if(n.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Hn(this.elementShape,n.shape,"TensorList shape mismatch: "),Or(n),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=n}gather(e,n,r){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);Hn(this.elementShape,r,"TensorList shape mismatch: "),e=e.slice(0,this.size());const s=Ga(this.elementShape,this.tensors,r);return e.length===0?Mr([],[0].concat(s)):xe(()=>{const o=e.map(i=>H(this.tensors[i],s));return fs(o,0)})}concat(e,n){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Hn(this.elementShape,n,"TensorList shape mismatch: ");const r=Ga(this.elementShape,this.tensors,n);return this.size()===0?Mr([],[0].concat(r)):xe(()=>{const s=this.tensors.map(o=>H(o,r));return St(s,0)})}}function EM(t,e,n){const r=t.dtype;if(t.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);const s=t.shape.slice(1);Hn(s,e,"TensorList shape mismatch: ");const o=Jo(t);return new jo(o,e,r)}function RM(t,e,n,r){return new jo([],t,e,r)}function _M(t,e,n,r){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(r!=null&&r!==-1&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const o=new jo([],n,t.dtype,r),i=Jo(t,0);return e.forEach((a,u)=>{o.setItem(a,i[u])}),o}function PM(t,e,n){let r=0;const s=e.map(c=>(r+=c,r));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${t.shape}`);const o=t.shape.slice(1),i=Yf(o,n),a=r===0?0:t.size/r,u=xe(()=>{const c=[];t=H(t,[1,r,a]);for(let d=0;d<e.length;++d){const p=[0,d===0?0:s[d-1],0],f=[1,e[d],a];c[d]=H(ke(t,p,f),i)}return t.dispose(),c}),l=new jo([],n,t.dtype,e.length);for(let c=0;c<u.length;c++)l.setItem(c,u[c]);return l}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AM=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const r=C("thenBranch",t,e,n),s=C("elseBranch",t,e,n),o=C("cond",t,e,n),i=C("args",t,e,n);return(await o.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=C("body",t,e,n),s=C("cond",t,e,n),o=C("args",t,e,n),i=await n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap),a=o.map(c=>c.id);let u=await i[0].data();i.forEach(c=>{!c.kept&&a.indexOf(c.id)===-1&&c.dispose()});let l=o;for(;u[0];){const c=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const d=l.map(p=>p.id);c.forEach(p=>{!p.kept&&a.indexOf(p.id)===-1&&d.indexOf(p.id)===-1&&p.dispose()});const h=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await h[0].data(),h.forEach(p=>{!p.kept&&a.indexOf(p.id)===-1&&d.indexOf(p.id)===-1&&p.dispose()})}return l}case"LoopCond":{const r=C("pred",t,e,n);return[Yr(r)]}case"Switch":{const r=C("pred",t,e,n);let s=C("data",t,e,n);return s.kept||(s=Yr(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=t.inputNames.find(s=>It(s,e,n)!==void 0);if(r){const s=It(r,e,n);return[Yr(s)]}return}case"Enter":{const r=C("frameName",t,e,n),s=C("tensor",t,e,n);return n.enterFrame(r),[Yr(s)]}case"Exit":{const r=C("tensor",t,e,n);return n.exitFrame(),[Yr(r)]}case"NextIteration":{const r=C("tensor",t,e,n);return n.nextIteration(),[Yr(r)]}case"TensorArrayV3":{const r=C("size",t,e,n),s=C("dtype",t,e,n),o=C("elementShape",t,e,n),i=C("dynamicSize",t,e,n),a=C("clearAfterRead",t,e,n),u=C("identicalElementShapes",t,e,n),l=C("name",t,e,n),c=new TM(l,s,r,o,u,i,a);return n.addTensorArray(c),[c.idTensor,Ie(1)]}case"TensorArrayWriteV3":{const r=C("tensorArrayId",t,e,n),s=C("index",t,e,n),o=C("tensor",t,e,n),i=n.getTensorArray(r.id);return i.write(s,o),[i.idTensor]}case"TensorArrayReadV3":{const r=C("tensorArrayId",t,e,n),s=C("index",t,e,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=C("tensorArrayId",t,e,n),s=C("indices",t,e,n),o=C("dtype",t,e,n);return[n.getTensorArray(r.id).gather(s,o)]}case"TensorArrayScatterV3":{const r=C("tensorArrayId",t,e,n),s=C("indices",t,e,n),o=C("tensor",t,e,n),i=n.getTensorArray(r.id);return i.scatter(s,o),[i.idTensor]}case"TensorArrayConcatV3":{const r=C("tensorArrayId",t,e,n),s=n.getTensorArray(r.id),o=C("dtype",t,e,n);return[s.concat(o)]}case"TensorArraySplitV3":{const r=C("tensorArrayId",t,e,n),s=C("tensor",t,e,n),o=C("lengths",t,e,n),i=n.getTensorArray(r.id);return i.split(o,s),[i.idTensor]}case"TensorArraySizeV3":{const r=C("tensorArrayId",t,e,n),s=n.getTensorArray(r.id);return[Ie(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=C("tensorArrayId",t,e,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=C("tensorListId",t,e,n),s=C("index",t,e,n),o=C("tensor",t,e,n),i=n.getTensorList(r.id);return i.setItem(s,o),[i.idTensor]}case"TensorListGetItem":{const r=C("tensorListId",t,e,n),s=C("index",t,e,n),o=C("elementShape",t,e,n),i=C("elementDType",t,e,n);return[n.getTensorList(r.id).getItem(s,o,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=C("indices",t,e,n),s=C("tensor",t,e,n),o=C("elementShape",t,e,n),i=C("numElements",t,e,n),a=_M(s,r,o,i);return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=C("elementShape",t,e,n),s=C("elementDType",t,e,n);let o;t.op==="TensorListReserve"?o="numElements":o="maxNumElements";const i=C(o,t,e,n),a=t.op==="TensorListReserve"?-1:i,u=RM(r,s,i,a);return n.addTensorList(u),[u.idTensor]}case"TensorListGather":{const r=C("tensorListId",t,e,n),s=C("indices",t,e,n),o=C("elementShape",t,e,n),i=C("elementDType",t,e,n);return[n.getTensorList(r.id).gather(s,i,o)]}case"TensorListStack":{const r=C("tensorListId",t,e,n),s=C("elementShape",t,e,n),o=C("elementDType",t,e,n),i=C("numElements",t,e,n);return[n.getTensorList(r.id).stack(s,o,i)]}case"TensorListFromTensor":{const r=C("tensor",t,e,n),s=C("elementShape",t,e,n),o=C("elementDType",t,e,n),i=EM(r,s,o);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=C("tensorListId",t,e,n),s=n.getTensorList(r.id),o=C("dtype",t,e,n),i=C("elementShape",t,e,n);return[s.concat(o,i)]}case"TensorListPushBack":{const r=C("tensorListId",t,e,n),s=C("tensor",t,e,n),o=n.getTensorList(r.id);return o.pushBack(s),[o.idTensor]}case"TensorListPopBack":{const r=C("tensorListId",t,e,n),s=C("elementShape",t,e,n),o=C("elementDType",t,e,n);return[n.getTensorList(r.id).popBack(s,o)]}case"TensorListSplit":{const r=C("tensor",t,e,n),s=C("elementShape",t,e,n),o=C("lengths",t,e,n),i=PM(r,o,s);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{const r=C("tensorListId",t,e,n),s=n.getTensorList(r.id);return[Ie(s.size(),"int32")]}case"TensorListResize":{const r=C("tensorListId",t,e,n),s=C("size",t,e,n),i=n.getTensorList(r.id).resize(s);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zw(t,e,n){const[r,s]=C("fusedOps",t,e,n),o=r==="biasadd",i=!o,a=s==="prelu",u=r==="fusedbatchnorm",l=C("numArgs",t,e,n);if(o){if(a&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&o&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=C("strides",t,e,n),d=fc(t,e,n),h=C("dataFormat",t,e,n).toUpperCase(),p=C("dilations",t,e,n);let[f,y]=C("args",t,e,n);i&&(y=f,f=void 0);const x=C("leakyreluAlpha",t,e,n);return{stride:c,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:y,activationFunc:s,leakyreluAlpha:x}}const DM=(t,e,n,r=Et)=>{switch(t.op){case"Conv1D":{const s=C("stride",t,e,n),o=C("pad",t,e,n),i=C("dataFormat",t,e,n).toUpperCase(),a=C("dilation",t,e,n);return[r.conv1d(C("x",t,e,n),C("filter",t,e,n),s,o,i,a)]}case"Conv2D":{const s=C("strides",t,e,n),o=fc(t,e,n),i=C("dataFormat",t,e,n).toUpperCase(),a=C("dilations",t,e,n);return[r.conv2d(C("x",t,e,n),C("filter",t,e,n),[s[1],s[2]],o,i,[a[1],a[2]])]}case"_FusedConv2D":{const{stride:s,pad:o,dataFormat:i,dilations:a,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:d}=zw(t,e,n);return[r.fused.conv2d({x:C("x",t,e,n),filter:C("filter",t,e,n),strides:[s[1],s[2]],pad:o,dataFormat:i,dilations:[a[1],a[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:o,dataFormat:i,dilations:a,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:d}=zw(t,e,n);return[r.fused.depthwiseConv2d({x:C("x",t,e,n),filter:C("filter",t,e,n),strides:[s[1],s[2]],pad:o,dataFormat:i,dilations:[a[1],a[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=C("outputShape",t,e,n),o=C("strides",t,e,n),i=fc(t,e,n);return[r.conv2dTranspose(C("x",t,e,n),C("filter",t,e,n),s,[o[1],o[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=C("strides",t,e,n),o=fc(t,e,n),i=C("dilations",t,e,n),a=C("dataFormat",t,e,n).toUpperCase();return[r.depthwiseConv2d(C("input",t,e,n),C("filter",t,e,n),[s[1],s[2]],o,a,[i[1],i[2]])]}case"Conv3D":{const s=C("strides",t,e,n),o=C("pad",t,e,n),i=C("dataFormat",t,e,n).toUpperCase(),a=C("dilations",t,e,n);return[r.conv3d(C("x",t,e,n),C("filter",t,e,n),[s[1],s[2],s[3]],o,i,[a[1],a[2],a[3]])]}case"AvgPool":{const s=C("strides",t,e,n),o=C("pad",t,e,n),i=C("kernelSize",t,e,n);return[r.avgPool(C("x",t,e,n),[i[1],i[2]],[s[1],s[2]],o)]}case"MaxPool":{const s=C("strides",t,e,n),o=C("pad",t,e,n),i=C("kernelSize",t,e,n);return[r.maxPool(C("x",t,e,n),[i[1],i[2]],[s[1],s[2]],o)]}case"MaxPoolWithArgmax":{const s=C("strides",t,e,n),o=C("pad",t,e,n),i=C("kernelSize",t,e,n),a=C("includeBatchInIndex",t,e,n),{result:u,indexes:l}=r.maxPoolWithArgmax(C("x",t,e,n),[i[1],i[2]],[s[1],s[2]],o,a);return[u,l]}case"AvgPool3D":{const s=C("strides",t,e,n),o=C("pad",t,e,n),i=C("kernelSize",t,e,n);return[r.avgPool3d(C("x",t,e,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],o)]}case"MaxPool3D":{const s=C("strides",t,e,n),o=C("pad",t,e,n),i=C("kernelSize",t,e,n);return[r.maxPool3d(C("x",t,e,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],o)]}case"Dilation2D":{const s=C("strides",t,e,n),o=C("pad",t,e,n),i=C("dilations",t,e,n),a=s[1],u=s[2],l=i[1],c=i[2];return[r.dilation2d(C("x",t,e,n),C("filter",t,e,n),[a,u],o,[l,c],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OM=(t,e,n,r=Et)=>{switch(t.op){case"Fill":{const s=C("shape",t,e,n),o=C("dtype",t,e,n),i=C("value",t,e,n);return[r.fill(s,i,o)]}case"LinSpace":{const s=C("start",t,e,n),o=C("stop",t,e,n),i=C("num",t,e,n);return[r.linspace(s,o,i)]}case"Multinomial":{const s=C("logits",t,e,n),o=C("numSamples",t,e,n),i=C("seed",t,e,n);return[r.multinomial(s,o,i)]}case"OneHot":{const s=C("indices",t,e,n),o=C("depth",t,e,n),i=C("onValue",t,e,n),a=C("offValue",t,e,n),u=C("dtype",t,e,n);return[r.oneHot(s,o,i,a,u)]}case"Ones":return[r.ones(C("shape",t,e,n),C("dtype",t,e,n))];case"OnesLike":return[r.onesLike(C("x",t,e,n))];case"RandomStandardNormal":return[r.randomStandardNormal(C("shape",t,e,n),C("dtype",t,e,n),C("seed",t,e,n))];case"RandomUniform":return[r.randomUniform(C("shape",t,e,n),C("minval",t,e,n),C("maxval",t,e,n),C("dtype",t,e,n))];case"RandomUniformInt":return[r.randomUniformInt(C("shape",t,e,n),C("minval",t,e,n),C("maxval",t,e,n),C("seed",t,e,n))];case"Range":{const s=C("start",t,e,n),o=C("stop",t,e,n),i=C("step",t,e,n);return[r.range(s,o,i,C("dtype",t,e,n))]}case"TruncatedNormal":{const s=C("shape",t,e,n),o=C("mean",t,e,n),i=C("stdDev",t,e,n),a=C("seed",t,e,n);return[r.truncatedNormal(s,o,i,C("dtype",t,e,n),a)]}case"Zeros":return[r.zeros(C("shape",t,e,n),C("dtype",t,e,n))];case"ZerosLike":return[r.zerosLike(C("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sp(t,e,n){const r=C("boxes",t,e,n),s=C("scores",t,e,n),o=C("maxOutputSize",t,e,n),i=C("iouThreshold",t,e,n),a=C("scoreThreshold",t,e,n),u=C("softNmsSigma",t,e,n);return{boxes:r,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:a,softNmsSigma:u}}const FM=async(t,e,n,r,s=Et)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:u,scoreThreshold:l,softNmsSigma:c}=sp(t,e,n),d=await s.image.nonMaxSuppressionWithScoreAsync(o,i,a,u,l,c);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:u,scoreThreshold:l}=sp(t,e,n),c=C("padToMaxOutputSize",t,e,n),d=await s.image.nonMaxSuppressionPaddedAsync(o,i,a,u,l,c);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:u,scoreThreshold:l}=sp(t,e,n);return[await s.image.nonMaxSuppressionAsync(o,i,a,u,l)]}case"Where":{const o=s.cast(C("condition",t,e,n),"bool"),i=[await s.whereAsync(o)];return o.dispose(),i}case"ListDiff":return s.setdiff1dAsync(C("x",t,e,n),C("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LM=(t,e,n,r=Et)=>{switch(t.op){case"LowerBound":{const s=C("sortedSequence",t,e,n),o=C("values",t,e,n);return[r.lowerBound(s,o)]}case"TopKV2":{const s=C("x",t,e,n),o=C("k",t,e,n),i=C("sorted",t,e,n),a=r.topk(s,o,i);return[a.values,a.indices]}case"UpperBound":{const s=C("sortedSequence",t,e,n),o=C("values",t,e,n);return[r.upperBound(s,o)]}case"Unique":{const s=C("x",t,e,n),o=r.unique(s);return[o.values,o.indices]}case"UniqueV2":{const s=C("x",t,e,n),o=C("axis",t,e,n),i=r.unique(s,o);return[i.values,i.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zM=(t,e,n,r=Et)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const s=C("default",t,e,n);return[It(t.name,e,n)||s];case"Placeholder":return[It(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const c=C("x",t,e,n);return[Yr(c)]}case"IdentityN":return C("x",t,e,n).map(c=>Yr(c));case"Snapshot":const o=C("x",t,e,n);return[Yr(o)];case"Shape":return[r.tensor1d(C("x",t,e,n).shape,"int32")];case"ShapeN":return C("x",t,e,n).map(c=>r.tensor1d(c.shape));case"Size":return[r.scalar(C("x",t,e,n).size,"int32")];case"Rank":return[r.scalar(C("x",t,e,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const i=C("x",t,e,n),a=C("data",t,e,n),u=C("message",t,e,n),l=C("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let c=0;c<a.length;c++)console.log(Array.prototype.slice.call(a[c].dataSync()).slice(0,l));return[i];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BM{get id(){return this.handle.id}constructor(e,n){this.keyDType=e,this.valueDType=n,this.handle=Ie(0),this.tensorMap=new Map,Or(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ie(this.size(),"int32")}async import(e,n){this.checkKeyAndValueTensor(e,n);const r=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),xe(()=>{const s=Jo(n),o=r.length,i=s.length;T(o===i,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${i} elements.`);for(let a=0;a<o;a++){const u=r[a],l=s[a];Or(l),this.tensorMap.set(u,l)}return this.handle})}async find(e,n){this.checkKeyAndValueTensor(e,n);const r=await e.data();return xe(()=>{const s=[];for(let o=0;o<r.length;o++){const i=r[o],a=this.findWithDefault(i,n);s.push(a)}return fs(s)})}findWithDefault(e,n){const r=this.tensorMap.get(e);return r??n}checkKeyAndValueTensor(e,n){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(n.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${n.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MM=async(t,e,n,r)=>{switch(t.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(t.name);if(s!=null)return[s];{const o=C("keyDType",t,e,n),i=C("valueDType",t,e,n),a=new BM(o,i);return r.addHashTable(t.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=C("tableHandle",t,e,n,r),o=C("keys",t,e,n),i=C("values",t,e,n);return[await r.getHashTableById(s.id).import(o,i)]}case"LookupTableFind":case"LookupTableFindV2":{const s=C("tableHandle",t,e,n,r),o=C("keys",t,e,n),i=C("defaultValue",t,e,n);return[await r.getHashTableById(s.id).find(o,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=C("tableHandle",t,e,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VM=(t,e,n,r=Et)=>{switch(t.op){case"ResizeBilinear":{const s=C("images",t,e,n),o=C("size",t,e,n),i=C("alignCorners",t,e,n),a=C("halfPixelCenters",t,e,n);return[r.image.resizeBilinear(s,[o[0],o[1]],i,a)]}case"ResizeNearestNeighbor":{const s=C("images",t,e,n),o=C("size",t,e,n),i=C("alignCorners",t,e,n),a=C("halfPixelCenters",t,e,n);return[r.image.resizeNearestNeighbor(s,[o[0],o[1]],i,a)]}case"CropAndResize":{const s=C("image",t,e,n),o=C("boxes",t,e,n),i=C("boxInd",t,e,n),a=C("cropSize",t,e,n),u=C("method",t,e,n),l=C("extrapolationValue",t,e,n);return[r.image.cropAndResize(s,o,i,a,u,l)]}case"ImageProjectiveTransformV3":{const s=C("images",t,e,n),o=C("transforms",t,e,n),i=C("outputShape",t,e,n),a=C("fillValue",t,e,n),u=C("interpolation",t,e,n),l=C("fillMode",t,e,n);return[r.image.transform(s,o,u.toLowerCase(),l.toLowerCase(),a,i)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WM=(t,e,n,r=Et)=>{switch(t.op){case"Equal":return[r.equal(C("a",t,e,n),C("b",t,e,n))];case"NotEqual":return[r.notEqual(C("a",t,e,n),C("b",t,e,n))];case"Greater":return[r.greater(C("a",t,e,n),C("b",t,e,n))];case"GreaterEqual":return[r.greaterEqual(C("a",t,e,n),C("b",t,e,n))];case"Less":return[r.less(C("a",t,e,n),C("b",t,e,n))];case"LessEqual":return[r.lessEqual(C("a",t,e,n),C("b",t,e,n))];case"LogicalAnd":return[r.logicalAnd(C("a",t,e,n),C("b",t,e,n))];case"LogicalNot":return[r.logicalNot(C("a",t,e,n))];case"LogicalOr":return[r.logicalOr(C("a",t,e,n),C("b",t,e,n))];case"Select":case"SelectV2":return[r.where(C("condition",t,e,n),C("a",t,e,n),C("b",t,e,n))];case"BitwiseAnd":return[r.bitwiseAnd(C("a",t,e,n),C("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UM=(t,e,n,r=Et)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(C("a",t,e,n),C("b",t,e,n),C("transposeA",t,e,n),C("transposeB",t,e,n))];case"Einsum":return[r.einsum(C("equation",t,e,n),...C("tensors",t,e,n))];case"Transpose":return[r.transpose(C("x",t,e,n),C("perm",t,e,n))];case"_FusedMatMul":const[s,o]=C("fusedOps",t,e,n),i=s==="biasadd",a=o==="prelu",u=C("numArgs",t,e,n),l=C("leakyreluAlpha",t,e,n);if(i){if(a&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,d]=C("args",t,e,n);return[r.fused.matMul({a:C("a",t,e,n),b:C("b",t,e,n),transposeA:C("transposeA",t,e,n),transposeB:C("transposeB",t,e,n),bias:c,activation:o,preluActivationWeights:d,leakyreluAlpha:l})];case"MatrixBandPart":return[r.linalg.bandPart(C("a",t,e,n),C("numLower",t,e,n),C("numUpper",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GM=(t,e,n,r=Et)=>{switch(t.op){case"EuclideanNorm":return[r.euclideanNorm(C("x",t,e,n),C("axis",t,e,n),C("keepDims",t,e,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm(C("x",t,e,n),C("mean",t,e,n),C("variance",t,e,n),C("offset",t,e,n),C("scale",t,e,n),C("epsilon",t,e,n))];case"FusedBatchNormV3":return[r.batchNorm(C("x",t,e,n),C("mean",t,e,n),C("variance",t,e,n),C("offset",t,e,n),C("scale",t,e,n),C("epsilon",t,e,n))];case"LRN":return[r.localResponseNormalization(C("x",t,e,n),C("radius",t,e,n),C("bias",t,e,n),C("alpha",t,e,n),C("beta",t,e,n))];case"Softmax":return[r.softmax(C("x",t,e,n))];case"LogSoftmax":return[r.logSoftmax(C("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HM=(t,e,n,r=Et)=>{switch(t.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:o}=r.raggedGather(C("paramsNestedSplits",t,e,n),C("paramsDenseValues",t,e,n),C("indices",t,e,n),C("outputRaggedRank",t,e,n));return s.concat(o)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:o}=r.raggedRange(C("starts",t,e,n),C("limits",t,e,n),C("splits",t,e,n));return[s,o]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(C("shape",t,e,n),C("values",t,e,n),C("defaultValue",t,e,n),C("rowPartitionTensors",t,e,n),C("rowPartitionTypes",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jM=(t,e,n,r=Et)=>{switch(t.op){case"Max":{const a=C("axis",t,e,n),u=C("keepDims",t,e,n);return[r.max(C("x",t,e,n),a,u)]}case"Mean":{const a=C("axis",t,e,n),u=C("keepDims",t,e,n);return[r.mean(C("x",t,e,n),a,u)]}case"Min":{const a=C("axis",t,e,n),u=C("keepDims",t,e,n);return[r.min(C("x",t,e,n),a,u)]}case"Sum":{const a=C("axis",t,e,n),u=C("keepDims",t,e,n);return[r.sum(C("x",t,e,n),a,u)]}case"All":{const a=C("axis",t,e,n),u=C("keepDims",t,e,n);return[r.all(C("x",t,e,n),a,u)]}case"Any":{const a=C("axis",t,e,n),u=C("keepDims",t,e,n);return[r.any(C("x",t,e,n),a,u)]}case"ArgMax":{const a=C("axis",t,e,n);return[r.argMax(C("x",t,e,n),a)]}case"ArgMin":{const a=C("axis",t,e,n);return[r.argMin(C("x",t,e,n),a)]}case"Prod":{const a=C("axis",t,e,n),u=C("keepDims",t,e,n);return[r.prod(C("x",t,e,n),a,u)]}case"Cumprod":{const a=C("axis",t,e,n),u=C("exclusive",t,e,n),l=C("reverse",t,e,n);return[r.cumprod(C("x",t,e,n),a,u,l)]}case"Cumsum":{const a=C("axis",t,e,n),u=C("exclusive",t,e,n),l=C("reverse",t,e,n);return[r.cumsum(C("x",t,e,n),a,u,l)]}case"Bincount":const s=C("x",t,e,n),o=C("weights",t,e,n),i=C("size",t,e,n);return[r.bincount(s,o,i)];case"DenseBincount":{const a=C("x",t,e,n),u=C("weights",t,e,n),l=C("size",t,e,n),c=C("binaryOutput",t,e,n);return[r.denseBincount(a,u,l,c)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KM=(t,e,n,r=Et)=>{switch(t.op){case"ConcatV2":case"Concat":{const s=C("n",t,e,n),o=C("axis",t,e,n);let i=C("tensors",t,e,n);return i=i.slice(0,s),[r.concat(i,o)]}case"Gather":{const s=C("x",t,e,n),o=C("indices",t,e,n);return[r.gather(s,r.cast(o,"int32"),0)]}case"GatherV2":{const s=C("axis",t,e,n),o=C("batchDims",t,e,n),i=C("x",t,e,n),a=C("indices",t,e,n);return[r.gather(i,r.cast(a,"int32"),s,o)]}case"Reverse":{const s=C("dims",t,e,n),o=[];for(let a=0;a<s.length;a++)s[a]&&o.push(a);const i=C("x",t,e,n);return[r.reverse(i,o)]}case"ReverseV2":{const s=C("axis",t,e,n),o=C("x",t,e,n);return[r.reverse(o,s)]}case"Slice":{const s=C("begin",t,e,n),o=C("size",t,e,n);return[r.slice(C("x",t,e,n),s,o)]}case"StridedSlice":{const s=C("begin",t,e,n),o=C("end",t,e,n),i=C("strides",t,e,n),a=C("beginMask",t,e,n),u=C("endMask",t,e,n),l=C("ellipsisMask",t,e,n),c=C("newAxisMask",t,e,n),d=C("shrinkAxisMask",t,e,n),h=C("x",t,e,n);return[r.stridedSlice(h,s,o,i,a,u,l,c,d)]}case"Pack":return xe(()=>{const s=C("axis",t,e,n),o=C("tensors",t,e,n),i=o[0].shape,a=r.squeeze(o[0]).shape,u=o.map(l=>{const c=ze(l.shape,i);if(!c&&!ze(r.squeeze(l).shape,a))throw new Error("the input tensors shape does not match");return c?l:r.reshape(l,i)});return[r.stack(u,s)]});case"Unpack":{const s=C("axis",t,e,n),o=C("tensor",t,e,n);return r.unstack(o,s)}case"Tile":{const s=C("reps",t,e,n);return[r.tile(C("x",t,e,n),s)]}case"Split":case"SplitV":{const s=C("axis",t,e,n),o=C("numOrSizeSplits",t,e,n),i=C("x",t,e,n);return r.split(i,o,s)}case"ScatterNd":{const s=C("indices",t,e,n),o=C("values",t,e,n),i=C("shape",t,e,n);return[r.scatterND(s,o,i)]}case"GatherNd":{const s=C("x",t,e,n),o=C("indices",t,e,n);return[r.gatherND(s,o)]}case"SparseToDense":{const s=C("sparseIndices",t,e,n),o=C("outputShape",t,e,n),i=C("sparseValues",t,e,n),a=C("defaultValue",t,e,n);return[r.sparseToDense(s,i,o,i.dtype===a.dtype?a:r.cast(a,i.dtype))]}case"TensorScatterUpdate":{const s=C("indices",t,e,n),o=C("values",t,e,n),i=C("tensor",t,e,n);return[r.tensorScatterUpdate(i,s,o)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XM=(t,e,n,r=Et)=>{switch(t.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:o,emptyRowIndicator:i,reverseIndexMap:a}=r.sparse.sparseFillEmptyRows(C("indices",t,e,n),C("values",t,e,n),C("denseShape",t,e,n),C("defaultValue",t,e,n));return[s,o,i,a]}case"SparseReshape":{const{outputIndices:s,outputShape:o}=r.sparse.sparseReshape(C("inputIndices",t,e,n),C("inputShape",t,e,n),C("newShape",t,e,n));return[s,o]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(C("data",t,e,n),C("indices",t,e,n),C("segmentIds",t,e,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(C("data",t,e,n),C("indices",t,e,n),C("segmentIds",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qM=(t,e,n,r=Et)=>{switch(t.op){case"FFT":return[r.fft(C("x",t,e,n))];case"IFFT":return[r.ifft(C("x",t,e,n))];case"RFFT":return[r.rfft(C("x",t,e,n))];case"IRFFT":return[r.irfft(C("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YM=(t,e,n,r=Et)=>{switch(t.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(C("input",t,e,n),C("pattern",t,e,n),C("rewrite",t,e,n),C("replaceGlobal",t,e,n))];case"StringNGrams":{const{nGrams:s,nGramsSplits:o}=r.string.stringNGrams(C("data",t,e,n),C("dataSplits",t,e,n),C("separator",t,e,n),C("nGramWidths",t,e,n),C("leftPad",t,e,n),C("rightPad",t,e,n),C("padWidth",t,e,n),C("preserveShortSequences",t,e,n));return[s,o]}case"StringSplit":{const{indices:s,values:o,shape:i}=r.string.stringSplit(C("input",t,e,n),C("delimiter",t,e,n),C("skipEmpty",t,e,n));return[s,o,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(C("input",t,e,n),C("numBuckets",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QM=(t,e,n,r=Et)=>{switch(t.op){case"Cast":return[r.cast(C("x",t,e,n),C("dtype",t,e,n))];case"ExpandDims":{const s=C("axis",t,e,n);return[r.expandDims(C("x",t,e,n),s)]}case"Squeeze":{const s=C("axis",t,e,n);return[r.squeeze(C("x",t,e,n),s)]}case"Reshape":return[r.reshape(C("x",t,e,n),C("shape",t,e,n))];case"EnsureShape":return[r.ensureShape(C("x",t,e,n),C("shape",t,e,n))];case"MirrorPad":return[r.mirrorPad(C("x",t,e,n),C("padding",t,e,n),C("mode",t,e,n))];case"PadV2":case"Pad":return[r.pad(C("x",t,e,n),C("padding",t,e,n),C("constantValue",t,e,n))];case"SpaceToBatchND":{const s=C("blockShape",t,e,n),o=C("paddings",t,e,n);return[r.spaceToBatchND(C("x",t,e,n),s,o)]}case"BatchToSpaceND":{const s=C("blockShape",t,e,n),o=C("crops",t,e,n);return[r.batchToSpaceND(C("x",t,e,n),s,o)]}case"DepthToSpace":{const s=C("blockSize",t,e,n),o=C("dataFormat",t,e,n).toUpperCase();return[r.depthToSpace(C("x",t,e,n),s,o)]}case"BroadcastTo":return[r.broadcastTo(C("x",t,e,n),C("shape",t,e,n))];case"BroadcastArgs":return[r.broadcastArgs(C("s0",t,e,n),C("s1",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bw(t,e,n,r,s=xe){const o=((i,a,u)=>{switch(i.category){case"arithmetic":return s(()=>IM(i,a,u));case"basic_math":return s(()=>NM(i,a,u));case"control":return AM(i,a,u);case"convolution":return s(()=>DM(i,a,u));case"creation":return s(()=>OM(i,a,u));case"dynamic":return FM(i,a,u);case"evaluation":return s(()=>LM(i,a,u));case"image":return s(()=>VM(i,a,u));case"graph":return s(()=>zM(i,a,u));case"logical":return s(()=>WM(i,a,u));case"matrices":return s(()=>UM(i,a,u));case"normalization":return s(()=>GM(i,a,u));case"ragged":return s(()=>HM(i,a,u));case"reduction":return s(()=>jM(i,a,u));case"slice_join":return s(()=>KM(i,a,u));case"sparse":return s(()=>XM(i,a,u));case"spectral":return s(()=>qM(i,a,u));case"string":return s(()=>YM(i,a,u));case"transformation":return s(()=>QM(i,a,u));case"hash_table":return MM(i,a,u,r);case"custom":const l=oI(i.op);if(l&&l.customExecutor)return l.customExecutor(new kM(i,a,u));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return Bo(o)?o.then(i=>[].concat(i)):[].concat(o)}class Mw{constructor(e={},n={},r={},s={},o){this.weightMap=e,this.tensorArrayMap=n,this.tensorListMap=r,this.functionMap=s,this.parseNodeNameCache=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,n){return{id:e,frameName:n,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let n=0;n<this.contexts.length-1;n++){const r=this.contexts.slice(0,this.contexts.length-n);e.push(this.contextIdforContexts(r))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(n=>n.id===0&&n.iterationId===0?"":`${n.frameName}-${n.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const n in this.tensorArrayMap)this.tensorArrayMap[n].clearAndClose(e);for(const n in this.tensorListMap)this.tensorListMap[n].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vw(t,e,n,r){const s=new Set,o=[];let i=null,a=null;const u=new Set,l=new Set(Object.keys(t).map(h=>fn(h)[0]));r=r||[];const c=new Set(r.map(h=>fn(h.name)[0])),d=[...e];for(;d.length>0;){const h=d.pop();if((vo(h)||oV(h)||iV(h))&&i==null&&(i=h,a=i.children.map(p=>p.name).filter(p=>s.has(p))),s.add(h.name),n[h.name]==null&&!l.has(h.name)&&!c.has(h.name)){if(h.inputs.length===0){o.push(h.name);continue}h.inputs.forEach(p=>{u.has(p.name)||(u.add(p.name),d.push(p))})}}return{inputs:t,outputs:e,usedNodes:s,missingInputs:o,dynamicNode:i,syncInputs:a}}function ZM(t,e){const{usedNodes:n,inputs:r}=e,s=Object.keys(r).map(x=>fn(x)[0]).map(x=>t.nodes[x]),o=t.initNodes||[],i=x=>n.has(typeof x=="string"?x:x.name);function a(x){return[...new Map(x.map(g=>[g.name,g])).values()]}const u=a([...s,...t.weights,...o]).filter(i),l=a([...u,...Object.values(t.nodes)]).filter(i),c=new Map(l.map(x=>[x.name,x])),d={};for(const x of l){d[x.name]=d[x.name]||0;for(const g of x.children)i(g)||(d[g.name]=Number.POSITIVE_INFINITY),d[g.name]=(d[g.name]||0)+1}const h=Object.entries(d).filter(([,x])=>x===0).map(([x])=>x),p=[...h];for(;h.length>0;){const x=h.pop(),g=c.get(x);for(const v of g.children.filter(i))--d[v.name]===0&&(p.push(v.name),h.push(v.name))}const f=p.map(x=>c.get(x)),y=JM(f,u);return eV(y,u),y}function JM(t,e){const n=new Map(t.map(i=>[i.name,i])),r=e.map(i=>i.name),s=new Set(r);for(;r.length>0;){const i=r.pop(),a=n.get(i);for(const u of a.children)!n.has(u.name)||s.has(u.name)||(s.add(u.name),r.push(u.name))}return t.filter(i=>s.has(i.name))}class Hl extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function eV(t,e){const n=new Map(t.map((a,u)=>[a.name,u])),r=new Set(e.map(a=>a.name)),s=a=>r.has(typeof a=="string"?a:a.name),o=new Set(t.map(a=>a.name)),i=a=>o.has(typeof a=="string"?a:a.name);for(const a of t){for(const u of a.children.filter(i)){if(!n.has(u.name))throw new Hl(`Child ${u.name} of node ${a.name} is unreachable.`);if(n.get(a.name)>n.get(u.name))throw new Hl(`Node ${a.name} is scheduled to run after its child ${u.name}.`)}if(!s(a))for(const u of a.inputs){if(!n.has(u.name))throw new Hl(`Input ${u.name} of node ${a.name} is unreachable.`);if(n.get(u.name)>n.get(a.name))throw new Hl(`Node ${a.name} is scheduled to run before its input ${u.name}.`)}}}function tV(t){const e=new Map(t.map((a,u)=>[a.name,u])),n=Number.MAX_SAFE_INTEGER,r=t.map((a,u)=>vo(a)?n:u),s=a=>{const u=r[e.get(a.name)];return u??-1},o=t.map((a,u)=>a.children.map(s).reduce((l,c)=>Math.max(l,c),r[u])),i=new Map;for(let a=0;a<t.length;++a){const u=o[a];if(u===n)continue;const l=t[a],c=t[u];i.has(c.name)||i.set(c.name,[]),i.get(c.name).push(l)}return i}const nV=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),rV=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),sV=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function vo(t){return nV.has(t.op)}function oV(t){return rV.has(t.op)}function iV(t){return sV.has(t.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nd{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const n=Object.keys(e).map(r=>e[r].map(s=>s.id));this._weightIds=[].concat(...n),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const n=e.signatureKey||e.name;return e.defaultOutput?`${n}:${e.defaultOutput}`:n})}get functions(){return Object.keys(this._functions).reduce((e,n)=>(e[n]=this._functions[n].signature,e),{})}constructor(e,n){this.graph=e,this.parent=n,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(r=>{this._functionExecutorMap[r]=new nd(e.functions[r],this)})}getCompilationKey(e,n){const r=e.map(o=>o.name).sort(),s=n.map(o=>o.name).sort();return r.join(this.SEPARATOR)+"--"+s.join(this.SEPARATOR)}compile(e,n){const r=Vw(e,n,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:o,syncInputs:i}=r;if(o!=null)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(s.length>0){const l=n.map(d=>d.name),c=Object.keys(e);throw new Error(`Cannot compute the outputs [${l}] from the provided inputs [${c}]. Missing the following inputs: [${s}]`)}const a=ZM(this.graph,r),u=tV(a);return{orderedNodes:a,nodeLiveUntilMap:u}}cloneAndKeepTensor(e){if(e==null)return null;const n=e.clone();return Or(n),n}cloneTensorList(e){return e?e.map(r=>this.cloneAndKeepTensor(r)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([n,r])=>[n,this.cloneTensorList(r)]))}execute(e,n){this.disposeIntermediateTensors(),e=this.mapInputs(e);const r=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),n=this.mapOutputs(n),this.checkOutputs(n);const s=r.map(h=>this.graph.nodes[fn(h)[0]]),o=n.map(h=>fn(h)[0]),i=new Set(o);let a=o.map(h=>this.graph.nodes[h]);a.length===0&&(a=this._outputs);const u=this.getCompilationKey(s,a);let l=this.compiledMap.get(u);l==null&&(l=this.compile(e,a),this.compiledMap.set(u,l));try{this.keepIntermediateTensors=M().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const c={},d={};return xe(()=>{const h=new Mw(this.weightMap,c,d,this.functionExecutorMap,this.parseNodeNameCache),p=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(g=>{const[v,b]=fn(g,h),S=[];S[b]=e[g],p[v]=S,this.keepIntermediateTensors&&(this.clonedTensorsMap[v]=this.cloneTensorList(S))});const f=this.getFrozenTensorIds(p),{orderedNodes:y,nodeLiveUntilMap:x}=l;for(const g of y){if(p[g.name])continue;const v=Bw(g,p,h,this._resourceManager);if(Bo(v))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);p[g.name]=v,this.keepIntermediateTensors&&(this.clonedTensorsMap[g.name]=this.cloneTensorList(v)),this.checkTensorForDisposalWithNodeLiveUntilInfo(g,p,h,f,i,x.get(g.name))}return this.parent==null&&h.dispose(f),n.map(g=>It(g,p,h))})}getFrozenTensorIds(e){const n=[].concat.apply([],Object.keys(e).map(r=>e[r]).map(r=>r.map(s=>s.id)));return new Set(n)}checkTensorForDisposal(e,n,r,s,o,i,a){if(!(vo(n)||i.has(e))){for(const u of r[e])u!=null&&(a[u.id]=(a[u.id]||0)+n.children.length);for(const u of n.inputs){if(vo(u))continue;const l=Dw(u.name,r,s);if(l!=null)for(const c of l){if(!c||c.kept||o.has(c.id))continue;const d=a[c.id];d===1?(c.dispose(),delete a[c.id]):d!=null&&a[c.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,n,r,s,o,i){function a(u){return vo(u)||o.has(u.name)}if(!(vo(e)||i==null))for(const u of i){if(a(u))continue;const l=Dw(u.name,n,r);for(const c of l)!c||c.kept||s.has(c.id)||c.dispose()}}async executeAsync(e,n){return this._executeAsync(e,n)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const n of e)n&&!n.isDisposed&&n.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,n,r=!1,s={},o={}){this.disposeIntermediateTensors(),r||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),n=this.mapOutputs(n),this.checkOutputs(n));try{this.keepIntermediateTensors=M().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const i=new Mw(this.weightMap,s,o,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const a=await this.executeWithControlFlow(e,i,n,r),u=n.map(h=>It(h,a,i)),l=u.map(h=>h.id),c=Object.keys(e).map(h=>e[h].id),d=new Set([...l,...c,...this.weightIds]);return Object.values(a).forEach(h=>{h.forEach(p=>{p&&!p.isDisposed&&!d.has(p.id)&&p.dispose()})}),this.parent==null&&i.dispose(d),u}async executeFunctionAsync(e,n,r){const s=e.reduce((o,i,a)=>(o[this.inputs[a].name]=i,o),{});return this._executeAsync(s,this.outputNodes,!0,n,r)}async executeWithControlFlow(e,n,r,s){const o=Object.keys(e),i=o.map(S=>this.graph.nodes[fn(S)[0]]),a=r.map(S=>fn(S)[0]),u=new Set(a);let l=a.map(S=>this.graph.nodes[S]);l.length===0&&(l=this._outputs);const{usedNodes:c,missingInputs:d,dynamicNode:h,syncInputs:p}=Vw(e,l,this.weightMap,this._initNodes),f=[...i,...this.graph.weights,...this._initNodes||[]].map(S=>({node:S,contexts:n.currentContext})),y=Object.assign({},this.weightMap);Object.keys(e).forEach(S=>{const[I,E]=fn(S),R=[];R[E]=e[S],y[I]=R});const x={},g=this.getFrozenTensorIds(y),v={};for(;f.length>0;){const S=this.processStack(i,f,n,y,v,g,u,x,c);await Promise.all(S)}h==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=l.filter(S=>!vo(S)&&!It(S.name,y,n)).map(S=>S.name);if(b.length>0){let S="";throw h!=null&&(S=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${o}]. Consider providing the following inputs: [${d}]. ${S}`)}return y}processStack(e,n,r,s,o,i,a,u,l){const c=[];for(;n.length>0;){const d=n.pop();r.currentContext=d.contexts;let h="";if(d.node.op==="Enter"&&C("isConstant",d.node,s,r)&&([h]=qr(d.node.name,r)),s[d.node.name]==null){const p=Bw(d.node,s,r,this._resourceManager);h||([h]=qr(d.node.name,r));const f=r.currentContext;Bo(p)?c.push(p.then(y=>(s[h]=y,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(y)),r.currentContext=f,this.checkTensorForDisposal(h,d.node,s,r,i,a,u),this.processChildNodes(d.node,n,r,s,o,l),y))):(s[h]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(p)),this.checkTensorForDisposal(h,d.node,s,r,i,a,u),this.processChildNodes(d.node,n,r,s,o,l))}else this.processChildNodes(d.node,n,r,s,o,l)}return c}processChildNodes(e,n,r,s,o,i){e.children.forEach(a=>{const[u]=qr(a.name,r);o[u]||!i.has(a.name)||(a.op==="Merge"?a.inputNames.some(l=>!!It(l,s,r))&&(o[u]=!0,n.push({contexts:r.currentContext,node:a})):a.inputNames.every(l=>!!It(l,s,r))&&(o[u]=!0,n.push({contexts:r.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(n=>n.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(n=>{const r=e[n],[s]=fn(n),o=this.graph.nodes[s];if(o.attrParams.shape&&o.attrParams.shape.value){const i=o.attrParams.shape.value,a=i.length===r.shape.length&&r.shape.every((u,l)=>i[l]===-1||i[l]===u);T(a,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${i}], but was [${r.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&T(r.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(e){var n,r;const s={};for(const o in e){const i=(r=(n=this._signature)===null||n===void 0?void 0:n.inputs)===null||r===void 0?void 0:r[o];i!=null?s[i.name]=e[o]:s[o]=e[o]}return s}checkInputs(e){const n=Object.keys(e).filter(r=>{const[s]=fn(r);return this.graph.nodes[s]==null});if(n.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${n}] that are not part of graph`)}mapOutputs(e){return e.map(n=>{var r,s;const o=(s=(r=this._signature)===null||r===void 0?void 0:r.outputs)===null||s===void 0?void 0:s[n];return o!=null?o.name:n},{})}checkOutputs(e){e.forEach(n=>{const[r]=fn(n);if(!this.graph.nodes[r])throw new Error(`The output '${n}' is not found in the graph`)})}}class aV{constructor(e={},n={}){this.hashTableNameToHandle=e,this.hashTableMap=n}addHashTable(e,n){this.hashTableNameToHandle[e]=n.handle,this.hashTableMap[n.id]=n}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uV="?tfjs-format=file",lV="model.json";class cV{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,n={},r=Pk){this.modelUrl=e,this.loadOptions=n,this.version="n/a",this.io=r,n==null&&(this.loadOptions={}),this.resourceManager=new aV}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const n=this.io.getLoadHandlers(e,this.loadOptions);if(n.length===0)n.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(n.length>1)throw new Error(`Found more than one (${n.length}) load handlers for URL '${[e]}'`);this.handler=n[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Bo(e)?e.then(n=>n.getWeightStream==null?this.loadSync(n):this.loadStreaming(n)):this.loadSync(e)}loadSync(e){const n=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,n)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const n=await I$(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,n)}loadWithWeightMap(e,n){this.artifacts=e;const r=this.artifacts.modelTopology;let s=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const o=this.artifacts.userDefinedMetadata;o.signature!=null&&(s=o.signature),o.structuredOutputKeys!=null&&(this.structuredOutputKeys=o.structuredOutputKeys)}if(this.signature=s,this.version=`${r.versions.producer}.${r.versions.minConsumer}`,this.executor=new nd(Ow.Instance.transformGraph(r,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(n),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const o=Ow.Instance.transformGraph(e.modelInitializer);this.initializer=new nd(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,n){if(typeof e=="string"){const r=this.io.getSaveHandlers(e);if(r.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${e}'`);e=r[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const n=e instanceof at?[e]:e,r={};return n.forEach((s,o)=>r[this.structuredOutputKeys[o]]=s),r}return e}predict(e,n){const r=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(r)}async predictAsync(e,n){const r=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(r)}normalizeInputs(e){var n;if(!(e instanceof at)&&!Array.isArray(e)){const o=(n=this.signature)===null||n===void 0?void 0:n.inputs;if(o!=null)for(const i in o){const a=o[i];a.resourceId!=null&&(e[i]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const r=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+r!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-r} non-resource placeholders, while there are ${e.length} input tensors provided.`);let s=0;return this.inputNodes.reduce((o,i)=>{var a,u,l;const c=(l=(u=(a=this.signature)===null||a===void 0?void 0:a.inputs)===null||u===void 0?void 0:u[i])===null||l===void 0?void 0:l.resourceId;return c!=null?o[i]=this.resourceIdToCapturedInput[c]:o[i]=e[s++],o},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const n=this.initializerSignature.outputs,r=Object.keys(n);for(let s=0;s<r.length;s++){const o=r[s],i=n[o];this.resourceIdToCapturedInput[i.resourceId]=e[s]}}}execute(e,n){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),n=this.normalizeOutputs(n);const r=this.executor.execute(e,n);return r.length>1?r:r[0]}async executeAsync(e,n){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),n=this.normalizeOutputs(n);const r=await this.executor.executeAsync(e,n);return r.length>1?r:r[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((n,r)=>(n[r]=[e[r]],n),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Le(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function ta(t,e={},n=Pk){if(t==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof t=="string"&&(t=dV(t));const r=new cV(t,e,n);return await r.load(),r}function dV(t){return t.endsWith("/")||(t=t+"/"),`${t}${lV}${uV}`}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wn=M();Wn.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Wn.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Wn.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);Wn.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0);Wn.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Wn.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Wn.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Wn.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);Wn.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);Wn.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>-1);Wn.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);Wn.registerFlag("WEBGPU_PRINT_SHADER",()=>"");Wn.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hV{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return this.vendor==="intel"}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pV{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,n,r=!1,s=!0){let o;const i=Ww(e,n);return s?(this.freeBuffers.has(i)||this.freeBuffers.set(i,[]),this.freeBuffers.get(i).length>0?(o=this.freeBuffers.get(i).pop(),this.numFreeBuffers--):(o=this.device.createBuffer({size:e,usage:n,mappedAtCreation:r}),this.numBytesAllocated+=e)):(o=this.device.createBuffer({size:e,usage:n,mappedAtCreation:r}),this.numBytesAllocated+=e),this.usedBuffers.has(i)||this.usedBuffers.set(i,[]),this.usedBuffers.get(i).push(o),this.numUsedBuffers++,this.numBytesUsed+=e,o}releaseBuffer(e,n=!0){if(this.freeBuffers.size===0)return;const r=e.size,s=e.usage,o=Ww(r,s),i=this.usedBuffers.get(o),a=i.indexOf(e);if(a<0)throw new Error("Cannot find the buffer in buffer manager");i[a]=i[i.length-1],i.pop(),this.numUsedBuffers--,this.numBytesUsed-=r,n?(this.freeBuffers.get(o).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=r)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,n)=>{e.forEach(r=>{r.destroy()})}),this.usedBuffers.forEach((e,n)=>{e.forEach(r=>{r.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function Ww(t,e){return`${t}_${e}`}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fV=class{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,n,r,s){const o=Gw(r),i=e*n*o,a=Uw(e,n,r,s);if(this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.usedTextures.has(a)||this.usedTextures.set(a,[]),this.numBytesUsed+=i,this.numUsedTextures++,this.freeTextures.get(a).length>0){this.numFreeTextures--;const l=this.freeTextures.get(a).shift();return this.usedTextures.get(a).push(l),l}this.numBytesAllocated+=i;const u=this.device.createTexture({size:[e,n],format:r,usage:s});return this.usedTextures.get(a).push(u),u}releaseTexture(e){if(this.freeTextures.size===0)return;const n=e.width,r=e.height,s=e.format,o=e.usage,i=Uw(n,r,s,o);this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.freeTextures.get(i).push(e),this.numFreeTextures++,this.numUsedTextures--;const a=this.usedTextures.get(i),u=a.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");a.splice(u,1);const l=Gw(s),c=n*r*l;this.numBytesUsed-=c}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,n)=>{e.forEach(r=>{r.destroy()})}),this.usedTextures.forEach((e,n)=>{e.forEach(r=>{r.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function Uw(t,e,n,r){return`${t}_${e}_${n}_${r}`}function Gw(t){if(t==="rgba8unorm")return 16;throw new Error(`${t} is not supported!`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mV(t,e){if(Math.max(...t)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");const n=t.length,r="xyzwuv",s=t.map(i=>`${e}.${r[i]}`),o=new Array(n-1);o[n-2]=s[n-1];for(let i=n-3;i>=0;--i)o[i]=`(${o[i+1]} * ${s[i+1]})`;return o}const so=(t,e,n)=>n==="int32"?`atomicAdd(${t}, bitcast<i32>(${e}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${e});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${t}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`;/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var na;(function(t){t[t.FROM_PIXELS=0]="FROM_PIXELS",t[t.DRAW=1]="DRAW"})(na||(na={}));const gV=(t,e,n,r,s)=>{const o={dtype:r.dtype,shape:r.shape},i=xV(n,o,e),a=t.createShaderModule({code:i,label:e.constructor.name});let u=M().get("WEBGPU_PRINT_SHADER");if(u!==""){u=u.toLowerCase();const l=u.split(",");(u==="all"||l.some(c=>e.shaderKey.toLowerCase().includes(c)))&&(console.group(e.shaderKey),console.debug(i),console.groupEnd())}return s?t.createComputePipelineAsync({compute:{module:a,entryPoint:"_start"},label:e.constructor.name,layout:"auto"}):t.createComputePipeline({compute:{module:a,entryPoint:"_start"},label:e.constructor.name,layout:"auto"})},Se=(t,e="f32")=>{switch(t){case 1:return`${e}`;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${t}-component ${e} is not supported.`)}};function pt(t){if(t<=1)return"i32";if(t===2)return"vec2<i32>";if(t===3)return"vec3<i32>";if(t===4)return"vec4<i32>";if(t===5)return"vec5";if(t===6)return"vec6";throw Error(`GPU for rank ${t} is not yet supported`)}function ns(t){if(t===0)return"x";if(t===1)return"y";if(t===2)return"z";if(t===3)return"w";if(t===4)return"u";if(t===5)return"v";throw Error(`Index ${t} is not yet supported`)}function ee(...t){let e;switch(t.length){case 0:e=`
        fn main()
      `;break;case 1:e=`
        fn main(${t[0]} : i32)
      `;break;default:throw Error("Unreachable")}return e}function Hw(t,e){let n;return n=`
     ${yV(e)}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${t?"main(getGlobalIndex());":"main();"};
      }
    `,n}function yV(t){return`
  @compute @workgroup_size(${t.workgroupSize[0]}, ${t.workgroupSize[1]}, ${t.workgroupSize[2]})
`}function xV(t,e,n){const r=[],s=n.workgroupSize[0]*n.workgroupSize[1]*n.workgroupSize[2];if(n.outputComponent=n.outputComponent?n.outputComponent:1,r.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${uI(n)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${s}u +
                localIndex);
        `}
      }
    `),n.pixelsOpType!=null){const f=n.pixelsOpType===na.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${wo(e.dtype,n.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${wo(t[0].dtype,n.outputComponent)}>;`,y=e.shape.length===3?"vec2<i32>":"i32";r.push(`
        struct Uniform {
          outShapeStrides : ${y},
          size            : i32,
          numChannels     : i32,
          alpha           : f32,
        };

        ${f}
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);const x=Kw(n);return[jw,r.join(`
`),mc(e.shape),n.getUserCode(),Hw(x,n)].join(`
`)}let o,i,a="struct Uniforms { NAN : f32, INFINITY : f32, ";n.variableNames.forEach((f,y)=>{const x=pt(t[y].shape.length);a+=`${f.charAt(0).toLowerCase()+f.slice(1)}Shape : ${x}, `,o=t[y].shape.length-1,i=pt(o),a+=`${f.charAt(0).toLowerCase()+f.slice(1)}ShapeStrides: ${i}, `});const u=pt(e.shape.length);a+=`outShape : ${u}, `,o=e.shape.length-1,i=pt(o),a+=`
         outShapeStrides: ${i}, `,n.size&&(a+="size : i32, "),n.uniforms&&(a+=n.uniforms),a+="};",a=NV(a),r.push(a),n.atomic?r.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):r.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${wo(e.dtype,n.outputComponent)}>;
    `),n.variableNames.forEach((f,y)=>{r.push(`
      @group(0) @binding(${1+y}) var<storage, read> ${f}: array<${n.variableComponents?wo(t[y].dtype,n.variableComponents[y]):wo(t[y].dtype,n.outputComponent)}>;
        `)}),a!==""&&r.push(`
      @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);const l=$V(e.shape,n.dispatchLayout),c=[jw,r.join(`
`)+wV,mc(e.shape),l,kV(e.shape.length)];n.atomic||c.push(IV(e.shape,e.dtype,n.outputComponent)),n.variableNames.forEach((f,y)=>{c.push(`${mc(t[y].shape,f)}`)});const d=t.map((f,y)=>SV(f,e.shape,n.variableComponents?n.variableComponents[y]:n.outputComponent,n.dispatchLayout.x.length===e.shape.length)).join(`
`);c.push(d),c.push(n.getUserCode());const h=Kw(n);return c.push(Hw(h,n)),c.join(`
`)}function vV(t,e,n){let r=t.shaderKey;if(t.pixelsOpType!=null)return r;const s=[],o=[];e.forEach(c=>{s.push(c.shape),o.push(c.dtype)}),s.push(n.shape),o.push(n.dtype);const i=e.map(c=>ea(c.shape,n.shape)),a=e.map(c=>ze(c.shape,n.shape)).join("_"),u=i.map(c=>c.join("_")).join(";"),l=uI(t)?"flatDispatch":"";return r+="_"+(t.workgroupSize?t.workgroupSize.join(","):"")+s.map(c=>c.length).join(",")+o.join(",")+t.variableNames.join(",")+u+a+l,r}const jw=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,wV=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function mc(t,e=""){const n=t.length,r=e!==""?`get${e.charAt(0).toUpperCase()+e.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",s=e!==""?`${e.charAt(0).toLowerCase()+e.slice(1)}ShapeStrides`:"outShapeStrides";if(n<=1)return`fn ${r}(index : i32) -> i32 { return index; }`;const o=lt(t),i=pt(n),a=[];for(let l=0;l<n;l++)a.push(`d${l}`);if(o.length===1)return`    fn ${r}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${s}; let d1 = index - d0 * uniforms.${s};
      return vec2<i32>(d0, d1);
    }`;let u;return u="var index2 = index;"+o.map((l,c)=>{const d=`let ${a[c]} = index2 / uniforms.${s}.${ns(c)}`,h=c===o.length-1?`let ${a[c+1]} = index2 - ${a[c]} * uniforms.${s}.${ns(c)}`:`index2 = index2 - ${a[c]} * uniforms.${s}.${ns(c)}`;return`${d}; ${h};`}).join(""),`
    fn ${r}(index : i32) -> ${i} {
      ${u}
      return ${i}(${a.join(",")});
    }
  `}function bV(t,e){const n=t.name,r=t.shape.length,s=pt(r),o="get"+n.charAt(0).toUpperCase()+n.slice(1),i=["d0","d1","d2","d3","d4","d5"].slice(0,r),a=i.map(c=>`${c} : i32`).join(", ");if(r<1)return`
      fn ${o}() -> ${Se(e)} {
        return ${Se(e)}(${n}[0]);
      }
    `;const u=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`;let l=`${r}D`;return r===0&&(l="1D"),`
    fn ${o}(${a}) -> ${Se(e)} {
      return ${Se(e)}(${n}[getIndexFromCoords${l}(${s}(${i.join(",")}),
        ${u})${e===1?"":` / ${e}`}]);
    }
   `}function CV(t,e,n,r){const s=t.name,o=s.charAt(0).toUpperCase()+s.slice(1),i="get"+o+"ByOutput",a=t.shape.length,u=e.length,l=pt(u);if(ze(t.shape,e)&&r)return`
    fn ${i}Index(globalIndex : i32) -> ${Se(n)} {
      return ${Se(n)}(${s}[globalIndex]);
    }

    fn ${i}Coords(coords : ${l}) -> ${Se(n)} {
      return ${Se(n)}(${s}[${u>1?"getOutputIndexFromCoords(coords)":"coords"}${n===1?"":` / ${n}`}]);
    }
    `;const c=ea(t.shape,e),d=u-a;let h="";if(a===0)return`
    fn ${i}Index(globalIndex : i32) -> ${Se(n)}{
      return get${o}();
    }

    fn ${i}Coords(coords : ${l}) -> ${Se(n)}{
      return get${o}();
    }
  `;u<2&&c.length>=1?h="coords = 0;":h=c.map(x=>`coords.${ns(x+d)} = 0;`).join(`
`);let p="";if(u<2&&a>0)p="coords";else if(u>1){const x=pt(a),g=t.shape.map((v,b)=>`coords.${ns(b+d)}`).join(", ");p=`${x}(${g})`}else p="coords";const f=`uniforms.${s.charAt(0).toLowerCase()+s.slice(1)}Shape`,y=`${a}D`;return`
  fn ${i}Index(globalIndex : i32) -> ${Se(n)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${h}
    return ${Se(n)}(${s}[getIndexFromCoords${y}(${p}, ${f})${n===1?"":` / ${n}`}]);
  }

  fn ${i}Coords(coordsIn : ${l}) -> ${Se(n)} {
    var coords = coordsIn;
    ${h}
    return ${Se(n)}(${s}[getIndexFromCoords${y}(${p}, ${f})${n===1?"":` / ${n}`}]);
  }
`}function SV(t,e,n,r){let s=bV(t,n);return t.shape.length<=e.length&&(s+=CV(t,e,n,r)),s}function $V(t,e){const{x:n,y:r=[],z:s=[]}=e,o=t.length,i=n.length+r.length+s.length;if(i!==o)return"";if(n.length===o)return`fn getOutputCoords() -> ${pt(o)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let a="";const u=[n,r,s];for(let h=0;h<u.length;h++){const p=u[h];if(p.length!==0)if(p.length===1)a+=`let d${p[0]} = i32(globalId[${h}]);`;else{const f=mV(p,"uniforms.outShape");a+=`var index${h} = i32(globalId[${h}]);`;for(let y=0;y<f.length;y++)a+=`let d${p[y]} = index${h} / ${f[y]};`,y===f.length-1?a+=`let d${p[y+1]} = index${h} - d${p[y]} * ${f[y]};`:a+=`index${h} = index${h} - d${p[y]} * ${f[y]};`}}const l=[];for(let h=0;h<i;h++)l.push(`d${h}`);const c=pt(i);let d=`fn getOutputCoords() -> ${c} {
  ${a}
`;return l.length===0?d+=`return ${c}(0); }`:d+=`return ${c}(${l.join(",")}); }`,d}function kV(t){let e="";switch(t){case 0:case 1:e+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:e+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:e+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:e+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:e+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:T(!1,()=>`Unsupported ${t}D shape`);break}return e}function uI(t){return t.dispatch[1]===1&&t.dispatch[2]===1}function wo(t,e=1){if(t==="float32")return Se(e,"f32");if(t==="int32"||t==="bool")return Se(e,"i32");throw new Error(`type ${t} is not supported.`)}function IV(t,e,n){const r=t.length,s=wo(e,n);let o=`fn setOutputAtIndex(flatIndex : i32, value : ${Se(n)}) {
      result[flatIndex] = ${s}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${Se(n,"i32")}) {
      result[flatIndex] = ${s}(value);
    }
    `;if(r>=2){const i=["d0","d1","d2","d3","d4","d5"].slice(0,r),a=pt(r);o+=`
      fn setOutputAtCoords(${i.map(u=>`${u} : i32`).join(", ")}, value : ${Se(n)}) {
        let flatIndex = getOutputIndexFromCoords(${a}(${i.join(", ")}));
        setOutputAtIndex(flatIndex${n===1?"":` / ${n}`}, value);
      }
      fn setOutputAtCoordsI32(${i.map(u=>`${u} : i32`).join(", ")}, value : ${Se(n,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${a}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex${n===1?"":` / ${n}`}, value);
      }
    `}return o}function NV(t){const e=/(\w+)\s*:\s*vec(5|6)/g;t=t.replace(e,r=>"@align(16) "+r);const n=/vec(5|6)\s*,\s*(\w+)/g;return t=t.replace(n,(r,s,o)=>`vec${s}, @align(16) ${o}`),t}function Kw(t){return!(t.dispatchLayout.hasOwnProperty("y")&&t.dispatchLayout.y.length!==0||t.dispatchLayout.hasOwnProperty("z")&&t.dispatchLayout.z.length!==0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Po=t=>{let e=1;for(let n=0;n<t.length;n++)e*=t[n];return e};function te(t,e,n=[1,1,1],r=[1,1,1]){const[s,o,i]=[Math.ceil(Po(t.x.map(a=>e[a]))/(n[0]*r[0])),t.y?Math.ceil(Po(t.y.map(a=>e[a]))/(n[1]*r[1])):1,t.z?Math.ceil(Po(t.z.map(a=>e[a]))/(n[2]*r[2])):1];return[s,o,i]}function TV(t,e,n,r=!1){const s=[8,8,1],o=[4,4,1];return r||(t<=8&&(o[1]=1),e<=16&&n<=16&&(s[0]=4)),{workgroupSize:s,elementsPerThread:o}}function lI(t,e,n=!1){if(n)return[8,8,1];const r=Po(t.x.map(o=>e[o])),s=Po(t.y.map(o=>e[o]));return r<=4?[4,16,1]:s<=4?[16,4,1]:[16,16,1]}function cI(t,e,n=!1){if(n)return[4,4,1];const r=Po(t.x.map(o=>e[o])),s=Po(t.y.map(o=>e[o]));return r<=4?[1,2,1]:s<=4?[2,1,1]:[2,2,1]}function ae(t){return{x:t.map((e,n)=>n)}}function Xw(t){if(t==="float32"||t==="int32"||t==="bool"||t==="string")return 4;if(t==="complex64")return 8;throw new Error(`Unknown dtype ${t}`)}function dI(){return!!(typeof globalThis<"u"&&globalThis.navigator&&globalThis.navigator.gpu)}function hI(t,e){Array.isArray(t)||(t=[t]),t.forEach(n=>{n!=null&&T(n.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGPU backend.`)})}var Ar;(function(t){t[t.MatMulReduceProgram=0]="MatMulReduceProgram",t[t.MatMulSplitKProgram=1]="MatMulSplitKProgram",t[t.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",t[t.MatMulPackedProgram=3]="MatMulPackedProgram",t[t.MatMulMax=4]="MatMulMax"})(Ar||(Ar={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EV=M().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),RV=(t,e)=>{const n=t.limits.maxComputeWorkgroupsPerDimension,r=e.dispatchLayout,s=e.dispatch;if(s.every(i=>i<=n))return s;T(s[0]>n&&r.y===void 0&&r.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let o=Math.ceil(Math.sqrt(s[0]));return o>n?(o=Math.ceil(Math.cbrt(s[0])),T(o<=n,()=>"Total dispatch size exceeds WebGPU maximum."),[o,o,o]):[o,o,1]};class fa extends sg{nextDataId(){return fa.nextDataId++}constructor(e,n){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!dI())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new hV(n),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new pV(this.device),this.textureManager=new fV(this.device),this.tensorMap=new kS(this,mn()),M().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e,n=!1){if(!this.tensorMap.has(e))return!0;const r=this.tensorMap.get(e);return n?r.refCount=0:r.refCount--,r.refCount>0?!1:(r.complexTensorInfos!=null&&(this.disposeData(r.complexTensorInfos.real.dataId),this.disposeData(r.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){const n=this.tensorMap.get(e);if(!(!n||!n.resource)){if(n.external){n.resource=null;return}n.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(n.resource):n.resource instanceof GPUTexture&&this.textureManager.releaseTexture(n.resource),n.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){const n=this.tensorMap.get(e);n.refCount++}decRef(e){if(this.tensorMap.has(e)){const n=this.tensorMap.get(e);n.refCount--}}write(e,n,r){if(r==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.tensorMap.set(s,{dtype:r,shape:n,values:e,refCount:1}),s}move(e,n,r,s,o){if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:s,shape:r,values:n,refCount:o})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(n){throw new Error(n.message)}Object.keys(this.pipelineCache).map((n,r)=>{this.pipelineCache[n]=e[r]})}async getBufferData(e){if(M().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;const n=e.size,r=this.bufferManager.acquireBuffer(n,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,r,0,n),this.submitQueue(),await r.mapAsync(GPUMapMode.READ);const s=r.getMappedRange().slice(0);return r.unmap(),r!=null&&this.bufferManager.releaseBuffer(r),M().getBool("WEBGPU_USE_PROFILE_TOOL")&&(T(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),s}convertAndCacheOnCPU(e,n){const r=this.tensorMap.get(e);return r.values=n,r.values}readSync(e){const n=this.tensorMap.get(e),{values:r,complexTensorInfos:s}=n;if(r!=null||n.dtype==="string")return r;if(n.dtype==="complex64"){const y=this.readSync(s.real.dataId),x=this.readSync(s.imag.dataId),g=Qh(Vu(y,x).buffer,"float32");return this.convertAndCacheOnCPU(e,g),g}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));const o=["opaque","premultiplied"],i=n.resource,a=i.size;T(a%4===0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");const u=a/4,l=new ArrayBuffer(a),c=256,d=256,h=o.map(y=>new OffscreenCanvas(c,d)),p=new OffscreenCanvas(c,d);this.endComputePassEncoder(),h.map((y,x)=>{const g=y.getContext("webgpu");return g.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:o[x]}),g.getCurrentTexture()}).map((y,x)=>{const g=c*4,v=(_,L,F)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:i,bytesPerRow:g,offset:F},{texture:y},{width:_,height:L}),this.submitQueue();const V=p.getContext("2d",{willReadFrequently:!0});V.clearRect(0,0,_,L),V.drawImage(h[x],0,0);const j=V.getImageData(0,0,_,L).data,K=o[x],Z=new Uint8ClampedArray(l,F,_*L*4);for(let ne=0;ne<Z.length;ne+=4)if(K==="premultiplied")Z[ne+3]=j[ne+3];else{const ce=j[ne];Z[ne]=j[ne+2],Z[ne+1]=j[ne+1],Z[ne+2]=ce}},b=Math.floor(u/(c*d));let S=c,I=d,E=0;for(let _=0;_<b;_++)v(S,I,E),E+=c*d*4;const R=u%(c*d);I=Math.floor(R/c),I>0&&(v(S,I,E),E+=I*(c*4)),S=R%c,S>0&&v(S,1,E)});const f=Qh(l,n.dtype);return this.convertAndCacheOnCPU(e,f),f}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);const n=this.tensorMap.get(e),{values:r}=n;if(r!=null)return r;let s;if(n.dtype==="complex64"){const o=await Promise.all([this.read(n.complexTensorInfos.real.dataId),this.read(n.complexTensorInfos.imag.dataId)]),i=o[0],a=o[1];s=Vu(i,a)}else{const o=await this.getBufferData(n.resource);s=Qh(o,n.dtype)}return this.convertAndCacheOnCPU(e,s),s}copyBuffer(e){const n=e.size,r=e.usage,s=this.bufferManager.acquireBuffer(n,r);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,s,0,n),this.submitQueue(),s}createTensorFromGPUData(e,n,r){let s=e.buffer;if(r==="complex64")throw new Error("Cannot write to a complex64 dtype. ");const o={id:this.nextDataId()};this.tensorMap.set(o,{dtype:r,shape:n,values:null,refCount:1,external:e.zeroCopy});const i=this.tensorMap.get(o),a=Xw(i.dtype)*U(i.shape);if(e.buffer.size<a)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${a})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return e.zeroCopy!==!0&&(s=this.copyBuffer(s)),i.resource=s,mn().makeTensorFromDataId(o,n,r,this)}readToGPU(e){const n=this.tensorMap.get(e),{values:r,dtype:s,shape:o,resource:i}=n;if(s==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(i==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const a=i,u=a.size,l=a.usage,c=this.bufferManager.acquireBuffer(u,l);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(i,0,c,0,u),this.submitQueue();const d=this.makeTensorInfo(o,s),h=mn().makeTensorFromTensorInfo(d),p=this.tensorMap.get(d.dataId);return p.resource=c,{tensorRef:h,buffer:c}}bufferSync(e){const n=this.readSync(e.dataId);if(e.dtype==="string")try{const r=n.map(s=>us(s));return Be(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Be(e.shape,e.dtype,n)}async time(e){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);const n=this.activeTimers,r=[];let s=!1;this.programTimersStack==null?(this.programTimersStack=r,s=!0):this.activeTimers.push(r),this.activeTimers=r,e();const o=ls(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=ls(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=n,s&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},u=await Promise.all(o);return a.kernelMs=IS(u),a.getExtraProfileInfo=()=>u.map((l,c)=>({name:i[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,a}makeTensorInfo(e,n,r){return n==="string"&&r!=null&&r.length>0&&el(r[0])&&(r=r.map(o=>Ws(o))),{dataId:this.write(r,e,n),shape:e,dtype:n}}tensorToBinding(e){if(!e)return null;const r=this.tensorMap.get(e.dataId).resource;return r instanceof GPUBuffer?{buffer:r}:r instanceof GPUTexture?r.createView():r}uploadToGPU(e){const n=this.tensorMap.get(e);if(n.resource!=null)return;const r=Xw(n.dtype)*U(n.shape);let s;const o=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(n.values){if(s=this.bufferManager.acquireBuffer(r,o,!0),s.mapState==="unmapped"){const i=this.bufferManager.acquireBuffer(r,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),a=i.getMappedRange();n.dtype==="int32"||n.dtype==="bool"?new Int32Array(a).set(n.values):new Float32Array(a).set(n.values),i.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(i,0,s,0,r),this.stagingPendingDisposal.push(i)}else{const i=s.getMappedRange();n.dtype==="int32"||n.dtype==="bool"?new Int32Array(i).set(n.values):new Float32Array(i).set(n.values),s.unmap()}n.values=null}else s=this.bufferManager.acquireBuffer(r,o);n.resource=s}makeUniforms(e){let n=0,r=0;const s=[];let o=1;e.forEach(u=>{u.data.length===0&&(u.data=[1]);let l;switch(u.data.length){case 1:l=4;break;case 2:l=8;break;case 3:l=16;break;case 4:l=16;break;case 5:l=16;break;case 6:l=16;break;default:T(!1,()=>`Unsupported ${u.data.length}D shape`)}(r===5||r===6)&&(l=16),l>o&&(o=l),n=Math.ceil(n/l)*l,r=u.data.length,s.push(n),n+=u.data.length*4}),n=Math.ceil(n/o)*o;const i=new ArrayBuffer(n);e.forEach((u,l)=>{const c=s[l];u.type==="int32"?new Int32Array(i,c,u.data.length).set(u.data):u.type==="uint32"?new Uint32Array(i,c,u.data.length).set(u.data):new Float32Array(i,c,u.data.length).set(u.data)});const a=this.bufferManager.acquireBuffer(n,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(a,0,i,0,n),this.uniformPendingDisposal.push(a),{offset:0,size:n,buffer:a}}runWebGPUProgram(e,n,r,s,o){if(o||(o=this.makeTensorInfo(e.outputShape,r)),U(o.shape)===0)return this.tensorMap.get(o.dataId).values=Ur(o.dtype,0),o;this.uploadToGPU(o.dataId),e.dispatch=RV(this.device,e);const i=n.map((u,l)=>{if(u.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(u.dataId),{dtype:this.tensorMap.get(u.dataId).dtype,shape:u.shape,name:e.variableNames[l]}});e.shaderKey=vV(e,i,o);const a=M().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=gV(this.device,e,i,o,a)),e.pipeline=this.pipelineCache[e.shaderKey],a||this.recordAndSubmit(e,o,n,s),o}recordAndSubmit(e,n,r,s){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let o=[],i=[];const a="int32";if(e.pixelsOpType==null){o.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),i=r.concat(n).map(p=>p.shape);const h="int32";i.map(p=>{o.push({type:h,data:p});const f=lt(p);o.push({type:h,data:f})})}else{const h=lt(n.shape);o.push({type:a,data:h})}if(e.size){const h=U(e.outputShape);o.push({type:a,data:[e.outputComponent?h/e.outputComponent:h]})}s&&(o=[...o,...s]);const u=[this.tensorToBinding(n),...r.map(h=>this.tensorToBinding(h)),this.makeUniforms(o)];r.forEach(h=>{this.commandQueueOwnedIds.add(h.dataId)}),this.commandQueueOwnedIds.add(n.dataId);const l=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:u.map((h,p)=>({binding:p,resource:h}))}),c=this.activeTimers!=null;this.ensureCommandEncoderReady();const d={};c&&this.supportTimestampQuery?(this.endComputePassEncoder(),this.querySet==null&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),d.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(d)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(d)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,l),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(c||M().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===na.DRAW)&&(this.endComputePassEncoder(),c?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;this.queryResolveBuffer==null&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);const e=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.querySetCount*8),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);const n=new BigUint64Array(e.getMappedRange()),r=Number(n[1]-n[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),r}shouldExecuteOnCPU(e,n=EV){return M().getBool("WEBGPU_CPU_FORWARD")&&e.every(r=>this.tensorMap.get(r.dataId).resource==null&&U(r.shape)<n)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.querySet!=null&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}fa.nextDataId=0;/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dI()&&S$("webgpu",async()=>{const t={powerPreference:M().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(t),n={},r=[];e.features.has("timestamp-query")&&r.push("timestamp-query"),e.features.has("bgra8unorm-storage")&&r.push(["bgra8unorm-storage"]),n.requiredFeatures=r;const s=e.limits;n.requiredLimits={maxComputeWorkgroupStorageSize:s.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:s.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:s.maxStorageBufferBindingSize,maxBufferSize:s.maxBufferSize,maxComputeWorkgroupSizeX:s.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:s.maxComputeInvocationsPerWorkgroup};const o=await e.requestDevice(n),i="info"in e?e.info:"requestAdapterInfo"in e?await e.requestAdapterInfo():void 0;return new fa(o,i)},3);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ye;(function(t){t[t.ADD=0]="ADD",t[t.ATAN2=1]="ATAN2",t[t.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",t[t.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",t[t.DIV=4]="DIV",t[t.ELU_DER=5]="ELU_DER",t[t.EQUAL=6]="EQUAL",t[t.FLOOR_DIV=7]="FLOOR_DIV",t[t.GREATER=8]="GREATER",t[t.GREATER_EQUAL=9]="GREATER_EQUAL",t[t.LESS=10]="LESS",t[t.LESS_EQUAL=11]="LESS_EQUAL",t[t.LOGICAL_AND=12]="LOGICAL_AND",t[t.LOGICAL_OR=13]="LOGICAL_OR",t[t.MAX=14]="MAX",t[t.MIN=15]="MIN",t[t.MOD=16]="MOD",t[t.MUL=17]="MUL",t[t.NOT_EQUAL=18]="NOT_EQUAL",t[t.POW=19]="POW",t[t.PRELU=20]="PRELU",t[t.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",t[t.SUB=22]="SUB"})(ye||(ye={}));const _V="let resultTemp = a + b;",PV="let resultTemp = atan2(a, b);",AV="let resultTemp = areal * breal - aimag * bimag;",DV="let resultTemp = areal * bimag + aimag * breal;",OV="let resultTemp = a / b;",FV="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",LV=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a == b);
`,zV=`
  let remainder =
      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));
  let quotient = (a - remainder) / b;
  let resultTemp =
      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));
`,BV=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a > b);
`,MV=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a >= b);
`,VV=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a < b);
`,WV=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a <= b);
`,UV="return f32(a >= 1.0 && b >= 1.0);",GV=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,HV="return f32(a >= 1.0 || b >= 1.0);",jV=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,KV="let resultTemp = max(a, b);",XV="let resultTemp = min(a, b);",qV=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,YV=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,QV="let resultTemp = a * b;",ZV=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,JV=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,eW=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,tW=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,nW="if (a < 0.0) { return b * a; }  return a;",rW=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,sW="let resultTemp = (a - b) * (a - b);",oW="let resultTemp = a - b;";function W0(t,e){let n;do{switch(t){case ye.ATAN2:n=PV;break;case ye.MAX:n=KV;break;case ye.MIN:n=XV;break;case ye.MOD:n=e?YV:qV;break;case ye.NOT_EQUAL:n=e?JV:ZV;break;case ye.POW:n=e?tW:eW;break;default:continue}let r,s,o;return e?(r="isnanVec4",s="vec4<f32>",o="vec4<bool>"):(r="isnan",s="f32",o="bool"),`
      let aIsNaN = ${r}(a);
      let aPostLegalization = select(a, ${s}(42), aIsNaN);
      let bIsNaN = ${r}(b);
      let bPostLegalization = select(b, ${s}(42), bIsNaN);
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        let a = aPostLegalization;
        let b = bPostLegalization;
        ${n}
        return select(
            resultTemp, ${s}(valueForNaN),
            ${o}(isNaN) | aIsNaN | bIsNaN);
      }
    `}while(!1);switch(t){case ye.ADD:n=_V;break;case ye.COMPLEX_MULTIPLY_IMAG:n=DV;break;case ye.COMPLEX_MULTIPLY_REAL:n=AV;break;case ye.DIV:n=OV;break;case ye.ELU_DER:n=FV;break;case ye.EQUAL:n=LV;break;case ye.FLOOR_DIV:n=zV;break;case ye.GREATER:n=BV;break;case ye.GREATER_EQUAL:n=MV;break;case ye.LESS:n=VV;break;case ye.LESS_EQUAL:n=WV;break;case ye.LOGICAL_AND:return e?GV:UV;case ye.LOGICAL_OR:return e?jV:HV;case ye.MUL:n=QV;break;case ye.PRELU:return e?rW:nW;case ye.SQUARED_DIFFERENCE:n=sW;break;case ye.SUB:n=oW;break}return`
    ${n}
    return resultTemp;
  `}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var J;(function(t){t[t.ABS=0]="ABS",t[t.ACOS=1]="ACOS",t[t.ACOSH=2]="ACOSH",t[t.ASIN=3]="ASIN",t[t.ASINH=4]="ASINH",t[t.ATAN=5]="ATAN",t[t.ATANH=6]="ATANH",t[t.CEIL=7]="CEIL",t[t.COS=8]="COS",t[t.COSH=9]="COSH",t[t.ELU=10]="ELU",t[t.ERF=11]="ERF",t[t.EXP=12]="EXP",t[t.EXPM1=13]="EXPM1",t[t.FLOOR=14]="FLOOR",t[t.IS_FINITE=15]="IS_FINITE",t[t.IS_INF=16]="IS_INF",t[t.IS_NAN=17]="IS_NAN",t[t.LINEAR=18]="LINEAR",t[t.LOG=19]="LOG",t[t.LOG1P=20]="LOG1P",t[t.LOGICAL_NOT=21]="LOGICAL_NOT",t[t.NEG=22]="NEG",t[t.RELU=23]="RELU",t[t.RELU6=24]="RELU6",t[t.LEAKYRELU=25]="LEAKYRELU",t[t.RECIPROCAL=26]="RECIPROCAL",t[t.ROUND=27]="ROUND",t[t.RSQRT=28]="RSQRT",t[t.SELU=29]="SELU",t[t.SIGMOID=30]="SIGMOID",t[t.SIGN=31]="SIGN",t[t.SIN=32]="SIN",t[t.SINH=33]="SINH",t[t.SOFTPLUS=34]="SOFTPLUS",t[t.SQRT=35]="SQRT",t[t.SQUARE=36]="SQUARE",t[t.STEP=37]="STEP",t[t.TAN=38]="TAN",t[t.TANH=39]="TANH",t[t.TO_INT=40]="TO_INT"})(J||(J={}));const iW="return abs(a);",aW=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,uW=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,lW=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,cW="return asinh(a);",dW=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,hW=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,pW="return ceil(a);",fW="return cos(a);",mW=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,gW="return exp(a) - 1.0;",yW="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",xW=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,vW=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${N0};
  let a1 = ${T0};
  let a2 = ${E0};
  let a3 = ${R0};
  let a4 = ${_0};
  let a5 = ${P0};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,wW="return exp(a);",bW="return floor(a);",CW="return f32(!isnan(a) && !isinf(a));",SW="return f32(isinf(a));",$W="return f32(isnan(a));",kW="return a;",IW=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,NW=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,TW="return f32(!(a >= 1.0));",EW="return -a;",RW="if (a < 0.0) { return uniforms.alpha * a; } return a;",_W=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,PW="return 1.0 / a;",AW="return select(a, 0.0, a < 0.0);",DW="return clamp(a, 0.0, 6.0);",OW="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",FW=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,LW="return round(a);",zW="return inverseSqrt(a);",BW=`
  if (a >= 0.0) {
    return ${I0} * a;
  } else {
    return ${k0} * (exp(a) - 1.0);
  }
`,MW="return 1.0 / (1.0 + exp(-1.0 * a));",VW="return sign(a);",WW="return sin(a);",UW=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,GW=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,HW="return sqrt(a);",jW="return a * a;",KW=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,XW="return tan(a);",qW=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,YW="return f32(i32((a)));";function go(t,e){switch(t){case J.ABS:return iW;case J.ACOS:return aW;case J.ACOSH:return uW;case J.ASIN:return lW;case J.ASINH:return cW;case J.ATAN:return dW;case J.ATANH:return hW;case J.COS:return fW;case J.COSH:return mW;case J.CEIL:return pW;case J.ELU:return e?xW:yW;case J.ERF:return vW;case J.EXP:return wW;case J.EXPM1:return gW;case J.FLOOR:return bW;case J.IS_FINITE:return CW;case J.IS_INF:return SW;case J.IS_NAN:return $W;case J.LINEAR:return kW;case J.LOG:return IW;case J.LOG1P:return NW;case J.LOGICAL_NOT:return TW;case J.NEG:return EW;case J.LEAKYRELU:return e?_W:RW;case J.RECIPROCAL:return PW;case J.RELU:return e?FW:AW;case J.RELU6:return e?OW:DW;case J.ROUND:return LW;case J.RSQRT:return zW;case J.SELU:return BW;case J.SIGMOID:return MW;case J.SIGN:return VW;case J.SIN:return WW;case J.SINH:return UW;case J.SOFTPLUS:return GW;case J.SQRT:return HW;case J.SQUARE:return jW;case J.STEP:return KW;case J.TAN:return XW;case J.TANH:return qW;case J.TO_INT:return YW;default:throw new Error(`BinaryType ${t} is not implemented!`)}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xs(t,e=!1,n=!1,r=3){if(t===null)return"";let s="";if(t==="linear")s=go(J.LINEAR);else if(t==="relu")s=go(J.RELU,n);else if(t==="elu")s=go(J.ELU,n);else if(t==="relu6")s=go(J.RELU6,n);else if(t==="prelu")s=W0(ye.PRELU,n);else if(t==="sigmoid")s=go(J.SIGMOID,n);else if(t==="leakyrelu")s=go(J.LEAKYRELU,n);else throw new Error(`Activation ${t} has not been implemented for the WebGPU backend.`);const i=Se(n?4:1);let a="";return e?a=`
      fn activation(a : ${i}, coords : vec${r}<i32>) -> ${i} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${s}
      }`:a=`
      fn activation(a : ${i}, coords : vec${r}<i32>) -> ${i} {
        ${s}
      }`,a}function ti(t,e){return`
      ${t?"value = value + getBiasByOutputCoords(coords);":""}
      ${e?"value = activation(value, coords);":""}
      `}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pI(t,e,n=!1,r=!1,s=!1,o=1){T(t&&o===1||!t,()=>`transposeA ${t} is not compatible with component size ${o}`);const i=`
      ${t?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,a=e?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batch: i32, row: i32, col: i32) -> ${Se(o)} {
    var value = ${Se(o)}(0.0);
    ${n&&s?i:`
    ${t?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${i}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, col: i32) -> ${Se(o)} {
    var value = ${Se(o)}(0.0);
    ${a}
    return value;
  }
  `}function U0(t,e,n,r,s=!1,o=!1,i=!1,a=1){return`
  ${pI(n,r,s,o,i,a)}
  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${Se(a)}) {
    ${s&&o?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${ti(t,e)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}const QW=(t,e)=>t?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol * ${e});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart + inputCol * ${e});
        `,ZW=(t,e,n,r)=>{if(t)return`
      for (var k = 0; k < ${r}; k++) {
        let BCached0 = mm_Bsub[k][tileCol];
        let ACached0 = mm_Asub[k][localRow];
        for (var i = 0; i < ${n}; i++) {
          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);
        }
      }`;{let s="",o="";for(let i=0;i<e;i++)s+=`let BCached${i} = mm_Bsub[k * ${e} + ${i}][tileCol];`,o+=`acc[i] = fma(BCached${i}, vec4<f32>(ACached[${i}]), acc[i]);`;return`
      for (var k = 0; k < ${r/e}; k++) {
        ${s}
        for (var i = 0; i < ${n}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          ${o}
        }
      }`}};function jd(t,e,n=!1,r=32,s=!1,o=32,i=!1){const a=e[1]*t[1],u=e[0]*t[0],l=n?a:r,c=n?r:a,d=l/e[0],h=r/e[1],p=t[1],f=t[0];return T((n&&d===4&&t[1]===4||!n&&(d===3||d===4))&&l%e[0]===0&&r%e[1]===0&&t[0]===4,()=>`If transposeA ${n} is true, innerElementSize ${d} and workPerThread[1] ${t[1]} must be 4.
          Otherwise, innerElementSize ${d} must be 3 or 4.
      tileAWidth ${l} must be divisible by workgroupSize[0]${e[0]}. tileInner ${r} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${t[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${d}<f32>, ${l/d}>, ${c}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${u/t[0]}>, ${r}>;

  ${ee()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${p};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${p};
    let globalCol = i32(globalId.x) * ${f};
    let batch = ${s?"0":"i32(globalId.z)"};
    let batchA = ${s||!i?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${s||!i?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${a};

    let numTiles = ${s?`${Math.ceil(o/r)}`:`(uniforms.dimInner - 1) / ${r} + 1`};
    var kStart = ${s?`i32(globalId.z) * ${o}`:"0"};

    var acc: array<vec4<f32>, ${p}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${h};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${p}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${QW(n,d)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${h}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${r};
        workgroupBarrier();

        // Compute acc values for a single thread.
        ${ZW(n,d,p,r)}
        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${p}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}const qw=t=>t?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,JW=t=>t?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function Kd(t,e,n=!1,r=32,s=!1,o=32,i=!1,a=!1){const u=t[1]*e[1],l=t[0]*e[0],c=n?u:r,d=n?r:u;T(d%e[1]===0&&c%e[0]===0&&r%e[1]===0,()=>`tileAHight ${d} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${e[0]}, tileInner ${r} must be divisible by workgroupSize[1]${e[1]}`);const h=d/e[1],p=c/e[0],f=r/e[1],y=t[1],x=t[0],g=i?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${u};
      let globalColStart = i32(workgroupId.x) * ${l};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${d}; inputRow = inputRow + ${e[1]}) {
          for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${e[0]}) {
            ${qw(n)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${r}; inputRow = inputRow + ${e[1]}) {
              for (var inputCol = localCol; inputCol < ${l}; inputCol = inputCol + ${e[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${r};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${x}>;
        for (var k = 0; k < ${r}; k++) {
          for (var inner = 0; inner < ${x}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
          }
          for (var innerRow = 0; innerRow < ${y}; innerRow++) {
            let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
            for (var innerCol = 0; innerCol < ${x}; innerCol++) {
              acc[innerRow][innerCol] =
                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${y}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${e[1]};
        for (var innerCol = 0; innerCol < ${x}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${e[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${y};
  let tileCol = i32(localId.x) * ${x};

  let globalRow = i32(globalId.y) * ${y};
  let globalCol = i32(globalId.x) * ${x};
  let globalRowStart = i32(workgroupId.y) * ${u};

  let tileRowA = i32(localId.y) * ${h};
  let tileColA = i32(localId.x) * ${p};
  let tileRowB = i32(localId.y) * ${f};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${h}; innerRow++) {
      for (var innerCol = 0; innerCol < ${p}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${qw(n)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${f}; innerRow++) {
      for (var innerCol = 0; innerCol < ${x}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${r};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${x}>;
    for (var k = 0; k < ${r}; k++) {
      for (var inner = 0; inner < ${x}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${y}; innerRow++) {
        ${JW(n)}
        for (var innerCol = 0; innerCol < ${x}; innerCol++) {
          acc[innerRow][innerCol] =
              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${y}; innerRow++) {
    for (var innerCol = 0; innerCol < ${x}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${c}>, ${d}>;
    var<workgroup> mm_Bsub : array<array<f32, ${l}>, ${r}>;

    ${ee()} {
      let batch = ${s?"0":"i32(globalId.z)"};
      let batchA = ${s||!a?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${s||!a?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${s?`${Math.ceil(o/r)}`:`(uniforms.dimInner - 1) / ${r} + 1`};
      var kStart = ${s?`i32(globalId.z) * ${o}`:"0"};

      var acc : array<array<f32, ${x}>, ${y}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${y}; innerRow++) {
        for (var innerCol = 0; innerCol < ${x}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${g}
    }
  `}const eU=t=>t?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `;function tU(t,e=!1){T(t[1]===1&&t[2]===1,()=>`A linear work group size is required. But got ${t}.`);const n=t[0]*4;return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${t[0]}>;

    ${ee()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${n} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${eU(e)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${n/4}; k++) {
          let rowB = t * ${n} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}let nU=class{constructor(e,n,r=!1,s=!1,o=null,i=null,a=null,u=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]};const l=r?e[1]:e[2];if(this.isVec4=(l%4===0&&!r||n[1]%4===0&&r)&&n[2]%4===0&&!s,this.outputComponent=this.isVec4?4:1,this.isVectorA=n[1]===1&&!r,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{const h=TV(n[1],l,n[2],r);this.workgroupSize=h.workgroupSize,this.elementsPerThread=h.elementsPerThread}this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);const c=o!=null,d=a!=null;c&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=u,this.transposeA=r,this.transposeB=s,this.addBias=c,this.activation=i,this.hasPreluActivationWeights=d,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(n[1],n[2],l),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${r}_${s}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,n,r){const s=this.workgroupSize[1]*this.elementsPerThread[1],o=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workgroupSize[0]*4:this.tileInner=o;const i=e%s===0,a=n%o===0,u=r%this.tileInner===0;return[i,a,u]}getUserCode(){return`
      ${xs(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${U0(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?jd(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?tU(this.workgroupSize,this.transposeA):Kd(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rU(t){return`
    var<workgroup> sumValues : array<f32, ${t}>;
    ${ee()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${t}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${t/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}class sU{constructor(e,n=!1,r=!1,s=null,o=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize);const a=s!=null,u=i!=null;a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.transposeA=n,this.transposeB=r,this.addBias=a,this.activation=o,this.hasPreluActivationWeights=u,this.shaderKey=`matMulReduce_${this.activation}_${n}_${r}`}getUserCode(){return`
      ${xs(this.activation,this.hasPreluActivationWeights)}
      ${U0(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${rU(this.workgroupSize[0])}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oU(t){const e=t[1],n=t[0],r=e>n?e:n;return`
  var<workgroup> mm_Asub : array<array<f32, ${r}>, ${e}>;
  var<workgroup> mm_Bsub : array<array<f32, ${n}>, ${r}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${ee()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${r} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${r};
    globalRowB = globalRowB + ${r};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${r};
      globalRowB = globalRowB + ${r};

      for (var k = 0; k < ${r}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}class iU{constructor(e,n,r,s=!1,o=!1,i=null,a=null,u=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=r,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(r[2]/this.workgroupSize[0]),Math.ceil(r[1]/this.workgroupSize[1]),r[0]];const l=i!=null;l&&this.variableNames.push("bias");const c=u!=null;c&&this.variableNames.push("preluActivationWeights"),this.transposeA=s,this.transposeB=o,this.addBias=l,this.activation=a,this.hasPreluActivationWeights=c,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${s}_${o}`}getUserCode(){return`
      ${xs(this.activation,this.hasPreluActivationWeights)}
      ${U0(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${oU(this.workgroupSize)}
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aU{constructor(e,n,r=!1,s=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,T(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};const o=(r&&this.outputShape[1]%4===0||!r&&n%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=o?4:1,o||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=te(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],n],this.workgroupSize,this.elementsPerThread),this.transposeA=r,this.transposeB=s,this.shaderKey=`matMulSplitK_${r}_${s}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){const e=this.outputComponent;return`
      ${pI(!1,this.transposeB,!1,!1,!1,e)}
      fn mm_write(batch: i32, row : i32, col : i32, value : ${Se(e)}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${e}; i = i + 1) {
            ${so("&result[flatIndex + i]",`${e>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${e===4?jd(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):Kd(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}}class uU{constructor(e,n=null,r=null,s=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=n!=null,this.hasPreluActivationWeights=s!=null,this.activation=r,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${r}`}getUserCode(){return`
    ${xs(this.activation,this.hasPreluActivationWeights)}
    ${ee("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${ti(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let lU=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${ee("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tn(t){const{backend:e,attrs:n}=t,{shape:r,value:s}=n;let{dtype:o}=n;if(o=o||da(s),o==="string"){const i=xt(o,U(r));return i.fill(s),e.makeTensorInfo(r,o,i)}else{const i=new lU(r),a=[{type:"float32",data:[s]}];return e.runWebGPUProgram(i,[],o,a)}}const cU={kernelName:sy,backendName:"webgpu",kernelFunc:tn};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function he(t){const{inputs:e,attrs:n}=t,{x:r}=e,{shape:s}=n,o=U(r.shape),i=NS(s,o),a=U(i);return T(o===a,()=>`The new shape (${i}) has ${a} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),t.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}const dU={kernelName:tx,backendName:"webgpu",kernelFunc:he};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xd({a:t,b:e,transposeA:n,transposeB:r,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:u=null}){const l=t.shape.length,c=e.shape.length,d=n?t.shape[l-2]:t.shape[l-1],h=r?e.shape[c-1]:e.shape[c-2],p=n?t.shape[l-1]:t.shape[l-2],f=r?e.shape[c-2]:e.shape[c-1],y=t.shape.slice(0,-2),x=e.shape.slice(0,-2),g=U(y),v=U(x),S=$e(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);T(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${r} must match.`);const I=n?[g,d,p]:[g,p,d],E=r?[v,f,h]:[v,h,f],R=he({inputs:{x:t},backend:s,attrs:{shape:I}}),_=he({inputs:{x:e},backend:s,attrs:{shape:E}}),L=[R,_],F=Math.max(g,v),V=[R,_],j=[{type:"int32",data:[p]},{type:"int32",data:[f]},{type:"int32",data:[d]}];let K,Z;const ne=[F,p,f];let ce=M().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(ce<0){const X=M().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),ie=X>0?X:s.thresholdToIncreaseWorkgroups,me=F*Math.ceil(p/32)*Math.ceil(f/32);me<=ie||p<=8&&me<=ie*2?F*p*f<=128?ce=Ar.MatMulReduceProgram:F===1&&h>=2e3?ce=Ar.MatMulSplitKProgram:ce=Ar.MatMulSmallOutputSizeProgram:ce=Ar.MatMulPackedProgram}switch(ce){case Ar.MatMulReduceProgram:K=new sU(ne,n,r,o,u,i);break;case Ar.MatMulSplitKProgram:{if(Z=tn({backend:s,attrs:{shape:ne,value:0,dtype:t.dtype}}),K=new aU(ne,h,n,r),o||u){Z=s.runWebGPUProgram(K,V,t.dtype,j,Z);const ie=new uU(Z.shape,o,u,i);let me=null;const Ne=[Z];o&&Ne.push(o),i&&Ne.push(i),u==="leakyrelu"&&(me=[{type:"float32",data:[a]}],ie.uniforms+=" alpha : f32,");const Me=s.runWebGPUProgram(ie,Ne,Z.dtype,me);L.push(Z);const un=he({inputs:{x:Me},backend:s,attrs:{shape:S}});L.push(Me);for(const ln of L)s.disposeData(ln.dataId);return un}break}case Ar.MatMulSmallOutputSizeProgram:K=new iU(I,E,ne,n,r,o,u,i);break;case Ar.MatMulPackedProgram:const X=s.adapterInfo.isIntel();K=new nU(I,ne,n,r,o,u,i,X);break;default:throw new Error(`Unsupported MatMulProgramType ${ce}.`)}o&&V.push(o),i&&V.push(i),u==="leakyrelu"&&(j.push({type:"float32",data:[a]}),K.uniforms+=" alpha : f32,"),Z=s.runWebGPUProgram(K,V,t.dtype,j,Z);const Ce=he({inputs:{x:Z},backend:s,attrs:{shape:S}});L.push(Z);for(const X of L)s.disposeData(X.dataId);return Ce}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hU(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:o,bias:i,preluActivationWeights:a}=e,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r;return Xd({a:s,b:o,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:a,leakyreluAlpha:d,activation:c})}const pU={kernelName:Gc,backendName:"webgpu",kernelFunc:hU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Yw=class{constructor(e,n,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=$e(n,r),this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${W0(this.op,!1)}
      }

      ${ee("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let rd=class{constructor(e,n,r){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=$e(n,r),this.dispatchLayout=ae(this.outputShape),this.op=e,this.useSharedMemoryWithA=n.length<=1&&r.length>1&&n[0]<128,this.useSharedMemoryWithB=r.length<=1&&n.length>1&&r[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?r[0]:n[0],this.shaderKey=`binary_${e}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{const s=n.length>0&&n[n.length-1]%4===0,o=r.length>0&&r[r.length-1]%4===0;s&&o?(this.outputComponent=4,this.variableComponents=[4,4]):s&&(aw(r)||r[r.length-1]===1)||o&&(aw(n)||n[n.length-1]===1)?(this.outputComponent=4,this.variableComponents=s?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${e}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e;const n=this.outputComponent===4?"vec4<f32>":"f32",r=`
    fn binaryOperation(a : ${n}, b : ${n}) -> ${n} {
      ${W0(this.op,this.outputComponent===4)}
    };
    `;if(this.type==="shared"){const s=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",o=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${s}];`:`let a = sharedBuf[${s}];
          let b = getBByOutputIndex(index);`;e=`
        ${r}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${ee("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${o}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else e=`
       ${r}
       ${ee("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${n}(getAByOutputCoords(coords));
           let b = ${n}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return e}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sn(t){const{inputs:e}=t,{x:n}=e;return t.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const fU={kernelName:Rd,backendName:"webgpu",kernelFunc:Sn};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ni(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,o=n.makeTensorInfo(r.shape,"complex64"),i=n.tensorMap.get(o.dataId),a=Sn({inputs:{x:r},backend:n}),u=Sn({inputs:{x:s},backend:n});return i.complexTensorInfos={real:a,imag:u},o}const mU={kernelName:Eg,backendName:"webgpu",kernelFunc:ni};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ma=class{constructor(e,n,r=""){this.variableNames=["A"],this.size=!0;const s=128;this.workgroupSize=[s,1,1],this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=n,r!==""&&(this.uniforms=r),this.shaderKey=`unary_${n}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${go(this.op,!1)}
      }
      ${ee("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ae({opType:t,cpuKernelImpl:e,dtype:n}){return({inputs:r,backend:s})=>{const{x:o}=r,i=s,a=n||o.dtype;if(i.shouldExecuteOnCPU([o])&&e!=null){const l=i.tensorMap.get(o.dataId),c=e(l.values,a);return i.makeTensorInfo(o.shape,a,c)}const u=new ma(o.shape,t);return i.runWebGPUProgram(u,[o],a)}}function $t({opType:t,cpuKernelImpl:e,supportsComplex:n=!1,dtype:r}){return({inputs:s,backend:o})=>{const{a:i,b:a}=s,u=o;if(n&&i.dtype==="complex64"){const d=u.tensorMap.get(i.dataId),h=u.tensorMap.get(a.dataId);let p,f;if(t!==ye.MUL)[p,f]=[[d.complexTensorInfos.real,h.complexTensorInfos.real],[d.complexTensorInfos.imag,h.complexTensorInfos.imag]].map(x=>{const[g,v]=x,b={dataId:g.dataId,dtype:g.dtype,shape:i.shape},S={dataId:v.dataId,dtype:v.dtype,shape:a.shape},I=new rd(t,i.shape,a.shape);return u.runWebGPUProgram(I,[b,S],nn(g.dtype,v.dtype))});else{const x=new Yw(ye.COMPLEX_MULTIPLY_REAL,i.shape,a.shape),g=new Yw(ye.COMPLEX_MULTIPLY_IMAG,i.shape,a.shape),v=[{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:i.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:h.complexTensorInfos.real.dataId,dtype:h.complexTensorInfos.real.dtype,shape:a.shape},{dataId:h.complexTensorInfos.imag.dataId,dtype:h.complexTensorInfos.imag.dtype,shape:a.shape}];p=u.runWebGPUProgram(x,v,"float32"),f=u.runWebGPUProgram(g,v,"float32")}const y=ni({inputs:{real:p,imag:f},backend:u});return u.disposeData(p.dataId),u.disposeData(f.dataId),y}const l=r||nn(i.dtype,a.dtype);if((i.dtype==="string"||a.dtype==="string"||u.shouldExecuteOnCPU([i,a]))&&e!=null){const d=u.tensorMap.get(i.dataId).values,h=u.tensorMap.get(a.dataId).values,p=i.dtype==="string"?Ys(d):d,f=i.dtype==="string"?Ys(h):h,[y,x]=e(i.shape,a.shape,p,f,l);return u.makeTensorInfo(x,l,y)}const c=new rd(t,i.shape,a.shape);return u.runWebGPUProgram(c,[i,a],l)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gU(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function an(t){return(e,n,r,s,o)=>{const i=$e(e,n),a=i.length,u=lt(i),l=U(i),c=Ur(o,l),d=e.length,h=n.length,p=lt(e),f=lt(n),y=ea(e,i),x=ea(n,i);if(y.length+x.length===0)for(let g=0;g<c.length;++g)c[g]=t(r[g%r.length],s[g%s.length]);else for(let g=0;g<c.length;++g){const v=ig(g,a,u),b=v.slice(-d);y.forEach(R=>b[R]=0);const S=bf(b,d,p),I=v.slice(-h);x.forEach(R=>I[R]=0);const E=bf(I,h,f);c[g]=t(r[S],s[E])}return[c,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yU(t,e,n,r){if(r==="int32"){const s=Int32Array.from(t);return[e,"int32",s]}if(r==="bool"){const s=Ad([0],n),[o,i]=an((a,u)=>a!==u?1:0)(e,[],t,s,"bool");return[i,"bool",o]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xU=an((t,e)=>t+e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vU(t,e,n,r,s){const o=U(r),i=as(s,n);for(let a=0;a<t.length;a++){const u=t[a];if(u<0)throw new Error("Input x must be non-negative!");u>=s||(o>0?i[u]+=e[a]:i[u]+=1)}return i}function wU(t,e,n,r=!1){const s=t.shape[0],o=t.shape[1],i=Be([s,n],e.dtype);for(let a=0;a<s;a++)for(let u=0;u<o;u++){const l=t.get(a,u);if(l<0)throw new Error("Input x must be non-negative!");l>=n||(r?i.set(1,a,l):e.size>0?i.set(i.get(a,l)+e.get(a,u),a,l):i.set(i.get(a,l)+1,a,l))}return i}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bU=an((t,e)=>t&e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vs(t){return(e,n,r)=>{const s=xt(n,e.length);for(let o=0;o<e.length;++o)s[o]=t(e[o],r);return s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CU=vs(t=>Math.ceil(t));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SU(t,e,n,r){const s=xt(n,U(e));if(r&&n!=="string"){let o=0;t.forEach(i=>{const a=U(i.shape);s.set(i.vals,o),o+=a})}else{let o=0;t.forEach(i=>{const a=n==="string"?Ys(i.vals):i.vals;let u=0;for(let l=0;l<i.shape[0];++l){const c=l*e[1]+o;for(let d=0;d<i.shape[1];++d)s[c+d]=a[u++]}o+=i.shape[1]})}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $U=an((t,e)=>t===e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kU=vs(t=>Math.exp(t));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IU=vs(t=>Math.expm1(t));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NU=vs(t=>Math.floor(t));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TU=an((t,e)=>Math.floor(t/e));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EU(t,e,n,r,s,o,i,a,u){const l=Be([r,o],n);for(let c=0;c<r;c++){const d=[];let h=0;for(let p=0;p<s;p++){const f=t[c*s+p];h+=f*i[p],d.push(f)}if(h<0||h>=u/o)throw new Error(`Invalid indices: ${d} does not index into ${a}`);for(let p=0;p<o;p++)l.values[c*o+p]=e.get(...e.indexToLoc(h*o+p))}return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RU(t,e,n){const r=Be(n,t.dtype);for(let s=0;s<r.size;++s){const i=r.indexToLoc(s).slice(),a=i[0],u=i[2],l=e.locToIndex([a,u]);i[2]=e.values[l];const c=t.locToIndex(i);0<=c&&c<t.values.length&&(r.values[s]=t.values[c])}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _U=an((t,e)=>t>e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PU=an((t,e)=>t>=e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AU=an((t,e)=>t<e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DU=an((t,e)=>t<=e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OU(t,e,n){const r=(e-t)/(n-1),s=as(n,"float32");s[0]=t;for(let o=1;o<s.length;o++)s[o]=s[o-1]+r;return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FU=vs(t=>Math.log(t));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LU(t,e,n,r){const s=Ur(r,U(n));for(let o=0;o<s.length;++o){const i=o*e;let a=t[i];for(let u=0;u<e;++u){const l=t[i+u];(Number.isNaN(l)||l>a)&&(a=l)}s[o]=a}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zU=an((t,e)=>Math.max(t,e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BU=an((t,e)=>Math.min(t,e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fI=an((t,e)=>t*e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MU(t,e,n){const r=ha(-1,n);return fI([],e,r,t,n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VU=an((t,e)=>t!==e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WU(t,e,n,r,s){const o=e.length,i=U(e),a=lt(e),u=lt(s),l=Ur(n,U(s));for(let c=0;c<i;++c){const d=ig(c,o,a),h=new Array(d.length);for(let f=0;f<h.length;f++)h[f]=d[r[f]];const p=bf(h,o,u);l[p]=t[c]}return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UU(t,e,n,r){const[s,o]=Vn(t,r),i=nn(e,"int32"),a=as(U(s),i),u=U(o);for(let l=0;l<a.length;++l){const c=l*u;let d=1;for(let h=0;h<u;++h)d*=n[c+h];a[l]=d}return{outVals:a,outShape:s,outDtype:i}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GU(t,e,n){t.forEach((r,s)=>{if(r<0||r>=n){const o=ig(s,e.length,lt(e)).join(",");throw new Error(`indices[${o}] = ${r} is not in [0, ${n})`)}})}function HU(t,e){for(let n=0;n<t.length;++n){const r=t[n],s=n===t.length-1?e:t[n+1].length;if(r.length===0)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let o=1;o<r.length;++o)if(r[o-1]>r[o])throw new Error("Ragged splits must be sorted in ascending order")}}function jU(t,e,n,r){const s=[];let o=0;const i=e.length-1+n.length,a=new Array(i).fill(null).map(()=>[0]);HU(n,r);let u=1;for(let l=0;l<e.length-1;++l){u*=e[l];const c=e[l+1];for(let d=1;d<u+1;++d)a[l].push(d*c)}for(let l=0;l<t.length;++l){let c=t[l],d=t[l]+1;for(let h=0;h<n.length;++h){const p=n[h],f=h+e.length-1;if(f>=0){const y=a[f],x=y[y.length-1]-p[c];for(let g=c;g<d;++g)a[f].push(p[g+1]+x)}c=p[c],d=p[d]}d!==c&&(s.push([c,d]),o+=d-c)}return{outSplits:a,valueSlices:s,numValues:o}}function KU(t){const e=[];for(let n=0;n<t.length;++n){const r=t[n].length,s=xt("int32",r);e.push(s),t[n].forEach((o,i)=>s[i]=o)}return e}function Qw(t,e){const n=t.slice(0,e);for(;n.length<e;)n.push(1);for(let r=e;r<t.length;r++)n[e-1]*=t[r];return n}function XU(t,e,n,r,s,o){const i=Qw(e,2)[1],a=Qw(o,2)[1];let u=0;for(const l of n)for(let c=l[0];c<l[1];++c){for(let d=0;d<r;++d)s[u*a+d]=t[c*i+d];++u}}function qU(t,e,n,r,s){const o=e.slice();o[0]=s;const i=xt(n,U(o)),a=t.length,u=a===0?0:a/e[0];return XU(t,e,r,u,i,o),[i,o]}function YU(t,e,n,r,s,o,i,a){if(t.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const u=e[0][0]-1;if(GU(o,i,u),r.length===0)throw new Error("params.rank must be nonzero");const l=r[0],{outSplits:c,valueSlices:d,numValues:h}=jU(o,i,t,l),p=KU(c),f=qU(n,r,s,d,h);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zw=2147483647;function QU(t,e,n,r,s,o,i){if(e.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const a=e.length===0,u=s.length===0,l=i.length===0,c=[];a||c.push(e[0]),u||c.push(s[0]),l||c.push(i[0]);for(let x=1;x<c.length;++x)if(c[x]!==c[x-1])throw new Error("starts, limits, and deltas must have the same shape");const d=c.length===0?1:c[0],h=xt("int32",d+1);h[0]=0;for(let x=0;x<d;++x){const g=a?t[0]:t[x],v=u?r[0]:r[x],b=l?o[0]:o[x];if(b===0)throw new Error("Requires delta != 0");let S;if(b>0&&v<g||b<0&&v>g)S=0;else if(S=Math.ceil(Math.abs((v-g)/b)),S>Zw)throw new Error(`Requires ((limit - start) / delta) <= ${Zw}`);h[x+1]=h[x]+S}const p=h[d],f=xt(n,p);let y=0;for(let x=0;x<d;++x){const g=h[x+1]-h[x];let v=a?t[0]:t[x];const b=l?o[0]:o[x];for(let S=0;S<g;++S)f[y++]=v,v+=b}return[h,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Gn=yr;class sd{constructor(e,n,r,s,o,i,a,u,l,c){this.shape=e,this.shapeShape=n,this.values=r,this.valuesShape=s,this.valuesDType=o,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=u,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=Uk(c),this.raggedRank=Gk(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Gn.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Gn.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const n=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Gn.VALUE_ROWIDS:return sd.getMaxWidthValueRowID(n);case Gn.ROW_SPLITS:return sd.getMaxWidthRowSplit(n);default:throw new Error(`Cannot handle partition type ${Gn[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const n=e.length;if(n===0||n===1)return 0;let r=0;for(let s=0;s<n-1;++s){const o=e[s+1]-e[s];o>r&&(r=o)}return r}static getMaxWidthValueRowID(e){const n=e.length;if(n===0)return 0;let r=0,s=e[0],o=0;for(let i=1;i<n;++i){const a=e[i];a!==s&&(s=a,o=Math.max(i-r,o),r=i)}return Math.max(n-r,o)}tensorShapeFromTensor(e,n,r=!0){if(n.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return e2(e,r)}calculateOutputSize(e){const n=this.valuesShape,r=this.defaultValueShape;Hk(r,n);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=Wk(this.raggedRank,s,n);i[0]<0&&(i[0]=e);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(e,n,r){const s=Math.min(e,r),o=[];let i=0;for(let a=0;a<s;++a,i+=n)o.push(i);for(let a=s;a<e;++a)o.push(-1);return T(o.length===e,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(e,n,r,s){const o=e.length,i=[];for(let a=0;a<o-1;++a){const u=e[a+1]-e[a];let l=Math.min(s,u),c=n[a];c===-1&&(l=0);for(let d=0;d<l;++d)i.push(c),c+=r;for(let d=0;d<u-l;++d)i.push(-1)}if(o>0&&i.length!==e[o-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,n,r,s){const o=e.length,i=[];if(o===0)return[];let a=0,u=e[0];if(u>=n.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${n.length}`);let l=n[u];i.push(l);for(let c=1;c<o;++c){const d=e[c];if(d===u)l>=0&&(++a,a<s?l+=r:l=-1);else{if(a=0,u=d,d>=n.length)throw new Error(`Got nextValueRowId=${d} which is not less than ${n.length}`);l=n[d]}i.push(l)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,n,r,s){const o=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case Gn.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,n,r,s);case Gn.ROW_SPLITS:if(o.length-1>n.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${n.length}`);return this.calculateOutputIndexRowSplit(o,n,r,s);default:throw new Error(`Unsupported partition type: ${Gn[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const n=this.rowPartitionTypes[0];switch(n){case Gn.FIRST_DIM_SIZE:return e[0];case Gn.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Gn.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Gn[n]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const n=this.getFirstDimensionSize(),r=this.calculateOutputSize(n),s=new Array(this.raggedRank+1);s[s.length-1]=1;for(let u=s.length-2;u>=0;--u)s[u]=s[u+1]*r[u+1];const o=e2(r,!1),i=xt(this.valuesDType,U(o));if(s[0]*r[0]>0){let u=this.calculateFirstParentOutputIndex(n,s[0],r[0]);for(let l=1;l<=this.raggedRank;++l)u=this.calculateOutputIndex(l-1,u,s[l],r[l]);this.setOutput(this.raggedRank,u,i,o)}return[o,i]}setOutput(e,n,r,s){if(r.length===0)return;const o=this.values,i=r;let a=s.slice();a=a.slice(e+1);const u=U(a),l=n.length;let c=this.defaultValue;if(c.length!==u&&c.length!==1){const f=this.defaultValueShape;xe(()=>{const y=H(c,f);c=du(y,a).dataSync()})}let d=0,h=0,p=0;for(let f=0;f<=l;++f){let y=f<l?n[f]:-1;if(y===p){++p;continue}if(h<p){const x=o.subarray(d*u),g=i.subarray(h*u),v=(p-h)*u;Jw(g,x,v)}if(f>=l){const x=r.length;y=Math.floor(x/u)}if(y>p)if(this.defaultValue.length===1)i.subarray(p*u,y*u).fill(this.defaultValue[0]),p=y;else for(;y>p;){const x=i.slice(p*u);Jw(x,c,u),++p}y<0?(d=f+1,h=p):(d=f,h=p,p=h+1)}}}function Jw(t,e,n){for(let r=0;r<n;r++)t[r]=e[r]}function e2(t,e){const n=[];for(let r of t){if(r<0){if(!e)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function ZU(t,e,n,r,s,o,i,a,u,l){return new sd(t,e,n,r,s,o,i,a,u,l).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JU(t,e,n,r){const s=t===e,o=t<e&&n<0,i=e<t&&n>1;if(s||o||i)return as(0,r);const a=Math.abs(Math.ceil((e-t)/n)),u=as(a,r);e<t&&n===1&&(n=-1),u[0]=t;for(let l=1;l<u.length;l++)u[l]=u[l-1]+n;return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eG=vs(t=>1/Math.sqrt(t));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tG(t,e,n,r,s,o,i,a,u,l){const c=[r/s,s],d=t.values,h=e.values;if(r===0)return Be(n,e.dtype);const p=u instanceof Qi?u:Be(c,e.dtype);typeof u=="string"||typeof u=="number"?p.values.fill(u):typeof u=="boolean"&&p.values.fill(+u);for(let f=0;f<o;f++){const y=[];let x=0;for(let g=0;g<i;g++){const v=d[f*i+g];y.push(v),x+=v*a[g]}if(x<0||x>=r/s)throw new Error(`Invalid indices: ${y} does not index into ${n}`);for(let g=0;g<s;g++)l?p.values[x*s+g]+=h[f*s+g]:p.values[x*s+g]=e.rank===0?h[0]:h[f*s+g]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nG=vs(t=>1/(1+Math.exp(-t)));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rG(t,e,n,r,s){const o=g0(r,e,n),i=U(n),a=lt(r);if(o){const d=y0(e,a);return s==="string"?t.slice(d,d+i):t.subarray(d,d+i)}const u=s==="string"?Ys(t):t,l=Be(r,s,u),c=Be(n,s);for(let d=0;d<c.size;++d){const h=c.indexToLoc(d),p=h.map((f,y)=>f+e[y]);c.set(l.get(...p),...h)}return s==="string"?sI(c.values):c.values}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sG(t,e,n,r,s,o,i){const a=e[0],u=o[0],l=new Array(u),c=new Array(a),d=e[1];if(u===0){if(a!==0)throw new Error(jk(a));const x=xt(n,0),g=xt(s,0);return[x,[0,d],g,l,c]}let h=!0,p=0;const f=new Array(u).fill(0);for(let x=0;x<a;++x){const g=t[x*d];if(g<0)throw new Error(Kk(x,g));if(g>=u)throw new Error(Xk(x,g,u));++f[g],h=h&&g>=p,p=g}let y=!0;for(let x=0;x<u;++x){const g=f[x]===0;l[x]=g,y=y&&!g,f[x]=Math.max(f[x],1),x>0&&(f[x]+=f[x-1])}if(y&&h){const x=t,g=r;for(let v=0;v<a;++v)c[v]=v;return[x,[a,d],g,l,c]}else{const x=f[u-1],g=xt(n,x*d),v=xt(s,x),b=new Array(u).fill(0);for(let S=0;S<a;++S){const I=t[S*d],E=b[I],R=(I===0?0:f[I-1])+E;b[I]++;for(let _=0;_<d;++_)g[R*d+_]=t[S*d+_];v[R]=r[S],c[S]=R}for(let S=0;S<u;++S)if(b[S]===0){const E=S===0?0:f[S-1];g[E*d+0]=S;for(let R=1;R<d;++R)g[E*d+R]=0;v[E]=i}return[g,[x,d],v,l,c]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oG(t,e,n,r,s){const o=U(r),i=e[0],a=s.length,u=[];let l=1,c=-1;for(let x=0;x<a;++x){const g=s[x];if(g===-1){if(c!==-1)throw new Error(qk(c,x));c=x,u.push(1)}else{if(g<0)throw new Error(Yk(x,g));l*=g,u.push(g)}}if(c!==-1){if(l<=0)throw new Error(Qk());const x=Math.trunc(o/l);if(l*x!==o)throw new Error(Zk(r,u));u[c]=x}if(U(u)!==o)throw new Error(Jk(r,u));const h=r.length,p=[];if(h>0){p[h-1]=1;for(let x=h-2;x>=0;--x)p[x]=p[x+1]*r[x+1]}const f=[];if(a>0){f[a-1]=1;for(let x=a-2;x>=0;--x)f[x]=f[x+1]*u[x+1]}const y=xt(n,i*a);for(let x=0;x<i;++x){let g=0;for(let v=0;v<h;++v)g+=t[x*h+v]*p[v];for(let v=0;v<a;++v)y[x*a+v]=Math.trunc(g/f[v]),g%=f[v]}return[y,[i,a],u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iG(t,e,n,r,s,o=!1,i=0){const a=r.length,u=[e[0],t.length/e[0]],l=u[1],d=a>0?s[a-1]+1:0;if(d<0)throw new Error(Bf());const h=e.slice();h[0]=d;const p=h.reduce((b,S)=>b*S,1),f=xt(n,p);if(a===0)return d>0&&f.fill(i),[f,h];if(d<=0)throw new Error(Bf());let y=0,x=1,g=0,v=s[y];for(;;){let b=0;if(x<a){if(b=s[x],v===b){++x;continue}if(v>=b)throw new Error(eI())}if(v<0||v>=d)throw new Error(tI(v,d));v>g&&f.fill(i,g*l,v*l);for(let S=y;S<x;++S){const I=r[S];if(I<0||I>=u[0])throw new Error(nI(S,r[S],u[0]));for(let E=0;E<l;E++)f[v*l+E]+=t[I*l+E]}if(o)for(let S=0;S<l;S++)f[v*l+S]/=x-y;if(y=x,++x,g=v+1,v=b,x>a)break}return g<d&&f.fill(i,g*l,d*l),[f,h]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aG=vs(t=>Math.sqrt(t));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uG=an((t,e)=>{const n=t-e;return n*n});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lG=vs((t,e)=>{const{pattern:n,replaceGlobal:r,rewrite:s}=e;return t.replace(new RegExp(n,r?"g":""),s)});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cG(t,e,n,r){const s=Be(t,e.dtype);for(let o=0;o<s.size;o++){const i=s.indexToLoc(o),a=new Array(i.length);for(let u=0;u<a.length;u++)a[u]=i[u]*n[u]+r[u];s.set(e.get(...a),...i)}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dG{constructor(e,n,r,s,o,i){this.separator=Ws(e),this.nGramWidths=n,this.leftPad=Ws(r),this.rightPad=Ws(s),this.padWidth=o,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,n){const r=this.getPadWidth(n);return Math.max(0,e+2*r-n+1)}createNGrams(e,n,r,s,o,i){for(let a=0;a<o;++a){const u=this.getPadWidth(i),l=Math.max(0,u-a),c=Math.max(0,u-(o-(a+1))),d=i-(l+c),h=n+(l>0?0:a-u);let p=0;p+=l*this.leftPad.length;for(let v=0;v<d;++v)p+=e[h+v].length;p+=c*this.rightPad.length;const f=l+c+d-1;p+=f*this.separator.length,r[s+a]=new Uint8Array(p);const y=r[s+a];let x=0;const g=v=>v.forEach(b=>y[x++]=b);for(let v=0;v<l;++v)g(this.leftPad),g(this.separator);for(let v=0;v<d-1;++v)g(e[h+v]),g(this.separator);if(d>0){g(e[h+d-1]);for(let v=0;v<c;++v)g(this.separator),g(this.rightPad)}else{for(let v=0;v<c-1;++v)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,n){const r=e.length,s=n.length;if(s>0){let u=n[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let l=1;l<s;++l){let c=n[l]>=u;if(c=c&&n[l]<=r,!c)throw new Error(`Invalid split value ${n[l]}, must be in [${u}, ${r}]`);u=n[l]}if(u!==r)throw new Error(`Last split value must be data size. Expected ${r}, got ${u}`)}const o=s-1,i=xt("int32",s);if(r===0||s===0){const u=new Array(r);for(let l=0;l<=o;++l)i[l]=0;return[u,i]}i[0]=0;for(let u=1;u<=o;++u){const l=n[u]-n[u-1];let c=0;this.nGramWidths.forEach(d=>{c+=this.getNumNGrams(l,d)}),this.preserveShort&&l>0&&c===0&&(c=1),i[u]=i[u-1]+c}const a=new Array(i[o]);for(let u=0;u<o;++u){const l=n[u];let c=i[u];if(this.nGramWidths.forEach(d=>{const h=n[u+1]-n[u],p=this.getNumNGrams(h,d);this.createNGrams(e,l,a,c,p,d),c+=p}),this.preserveShort&&c===i[u]){const d=n[u+1]-n[u];if(d===0)continue;const h=d+2*this.padWidth;this.createNGrams(e,l,a,c,1,h)}}return[a,i]}}function hG(t,e,n,r,s,o,i,a){return new dG(n,r,s,o,i,a).compute(t,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pG(t,e,n,r){if(!t.length)return;if(e.length===0){for(let o=0;o<t.length;++o)r.push(t.subarray(o,o+1));return}if(e.length===1){const o=e[0];let i=t.indexOf(o);for(;i!==-1;){const a=t.subarray(0,i);(!n||a.length!==0)&&r.push(a),t=t.subarray(i+1),i=t.indexOf(o)}(!n||t.length!==0)&&r.push(t);return}let s=0;for(let o=0;o<t.length+1;o++)if(o===t.length||e.indexOf(t[o])!==-1){const i=t.subarray(s,o);(!n||i.length!==0)&&r.push(i),s=o+1}}function fG(t,e,n){const r=t.length,s=[];let o=0,i=0;const a=new Array(r);for(let h=0;h<r;++h){const p=s.length;pG(t[h],e,n,s);const f=s.length-p;a[h]=f,o+=f,i=Math.max(i,f)}const u=xt("int32",o*2),l=new Array(o),c=[r,i];let d=0;for(let h=0;h<r;++h)for(let p=0;p<a[h];++p)u[d*2]=h,u[d*2+1]=p,l[d]=s[d],++d;return[u,l,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mG(t,e){const n=xt("int32",t.length);for(let r=0;r<t.length;++r)n[r]=X3(t[r]).modulo(e).getLowBitsUnsigned();return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gG=an((t,e)=>t-e);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yG(t,e){const n=new Array(t.rank);for(let s=0;s<n.length;s++)n[s]=t.shape[s]*e[s];const r=Be(n,t.dtype);for(let s=0;s<r.values.length;++s){const o=r.indexToLoc(s),i=new Array(t.rank);for(let u=0;u<i.length;u++)i[u]=o[u]%t.shape[u];const a=t.locToIndex(i);r.values[s]=t.values[a]}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Za=(t,e)=>{const n=e.value-t.value;return n===0?t.index-e.index:n};function mI(t,e,n=0,r=t.length-1){for(;r>n;){if(r-n>600){const a=r-n+1,u=e-n+1,l=Math.log(a),c=.5*Math.exp(2*l/3),d=.5*Math.sqrt(l*c*(a-c)/a)*Math.sign(u-a/2),h=Math.max(n,Math.floor(e-u*c/a+d)),p=Math.min(r,Math.floor(e+(a-u)*c/a+d));mI(t,e,h,p)}const s=t[e];let o=n,i=r;for(Wa(t,n,e),Za(t[r],s)>0&&Wa(t,n,r);o<i;){for(Wa(t,o,i),o++,i--;Za(t[o],s)<0;)o=o+1;for(;Za(t[i],s)>0;)i=i-1}Za(t[n],s)===0?Wa(t,n,i):(i=i+1,Wa(t,i,r)),i<=e&&(n=i+1),e<=i&&(r=i-1)}}function xG(t,e,n,r,s){const o=e[e.length-1],[i,a]=[t.length/o,o],u=Ur(n,i*r),l=Ur("int32",i*r);for(let d=0;d<i;d++){const h=d*a,p=t.subarray(h,h+a);let f=new Array(p.length);p.forEach((v,b)=>f[b]={value:v,index:b}),r<f.length&&(mI(f,r),f=f.slice(0,r)),s&&f.sort(Za);const y=d*r,x=u.subarray(y,y+r),g=l.subarray(y,y+r);for(let v=0;v<r;v++)x[v]=f[v].value,g[v]=f[v].index}const c=e.slice();return c[c.length-1]=r,[Be(c,n,u),Be(c,"int32",l)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vG(t,e,n,r){const s=Je(e,n)[0],o=[1,n[0],1];for(let f=0;f<s;f++)o[0]*=n[f];o[1]=n[s];for(let f=s+1;f<n.length;f++)o[2]*=n[f];const i=new Map,a=new Int32Array(n[s]),u=new Qi(o,r,t),l=[],c=o[0]===1&&o[2]===1;for(let f=0;f<n[s];f++){let y;if(c)y=t[f].toString();else{const g=[];for(let v=0;v<o[0];v++)for(let b=0;b<o[2];b++)g.push(u.get(v,f,b));y=g.join(",")}const x=i.get(y);if(x!=null)a[f]=x;else{const g=i.size;i.set(y,g),a[f]=g,l.push(f)}}const d=o.slice();d[1]=i.size;const h=new Qi(d,r);l.forEach((f,y)=>{for(let x=0;x<o[0];x++)for(let g=0;g<o[2];g++)h.set(u.get(x,f,g),x,y,g)});const p=n.slice();return p[s]=d[1],{outputValues:h.values,outputShape:p,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gI=Object.freeze(Object.defineProperty({__proto__:null,addImpl:xU,bincountImpl:vU,bincountReduceImpl:wU,bitwiseAndImpl:bU,castImpl:yU,ceilImpl:CU,concatImpl:SU,equalImpl:$U,expImpl:kU,expm1Impl:IU,floorDivImpl:TU,floorImpl:NU,gatherNdImpl:EU,gatherV2Impl:RU,greaterEqualImpl:PU,greaterImpl:_U,lessEqualImpl:DU,lessImpl:AU,linSpaceImpl:OU,logImpl:FU,maxImpl:LU,maximumImpl:zU,minimumImpl:BU,multiplyImpl:fI,negImpl:MU,notEqualImpl:VU,prodImpl:UU,raggedGatherImpl:YU,raggedRangeImpl:QU,raggedTensorToTensorImpl:ZU,rangeImpl:JU,rsqrtImpl:eG,scatterImpl:tG,sigmoidImpl:nG,simpleAbsImpl:gU,sliceImpl:rG,sparseFillEmptyRowsImpl:sG,sparseReshapeImpl:oG,sparseSegmentReductionImpl:iG,sqrtImpl:aG,squaredDifferenceImpl:uG,staticRegexReplaceImpl:lG,stridedSliceImpl:cG,stringNGramsImpl:hG,stringSplitImpl:fG,stringToHashBucketFastImpl:mG,subImpl:gG,tileImpl:yG,topKImpl:xG,transposeImpl:WU,uniqueImpl:vG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:wG,castImpl:bG,ceilImpl:CG,concatImpl:SG,equalImpl:$G,expImpl:kG,expm1Impl:IG,floorImpl:NG,floorDivImpl:TG,gatherNdImpl:EG,gatherV2Impl:RG,greaterEqualImpl:_G,greaterImpl:PG,lessEqualImpl:AG,lessImpl:DG,logImpl:OG,maxImpl:FG,maximumImpl:LG,minimumImpl:zG,multiplyImpl:BG,negImpl:MG,notEqualImpl:VG,prodImpl:WG,rangeImpl:UG,rsqrtImpl:GG,scatterImpl:HG,simpleAbsImpl:jG,sliceImpl:KG,stridedSliceImpl:XG,stringNGramsImpl:qG,subImpl:YG,tileImpl:QG,topKImpl:ZG,transposeImpl:JG}=gI;/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eH=Ae({opType:J.ABS,cpuKernelImpl:jG}),tH={kernelName:ug,backendName:"webgpu",kernelFunc:eH};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nH=Ae({opType:J.ACOS}),rH={kernelName:lg,backendName:"webgpu",kernelFunc:nH};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sH=Ae({opType:J.ACOSH}),oH={kernelName:cg,backendName:"webgpu",kernelFunc:sH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iH=$t({opType:ye.ADD,cpuKernelImpl:wG,supportsComplex:!0}),aH={kernelName:Td,backendName:"webgpu",kernelFunc:iH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let uH=class{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((n,r)=>`T${r}`),this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach(s=>{e.push(`let v${s} = get${s}ByOutputCoords(coords);`)});const n=this.variableNames.map(s=>`v${s}`).join(" + ");return`
      ${ee("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${n});
          }
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lH(t){const{inputs:e,backend:n}=t,r=e;if(r.length===1)return Sn({inputs:{x:r[0]},backend:n});const s=r.map(a=>a.dtype).reduce((a,u)=>nn(a,u)),o=r.map(a=>a.shape),i=new uH(o);return n.runWebGPUProgram(i,r,s)}const cH={kernelName:dg,backendName:"webgpu",kernelFunc:lH};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dH{constructor(e,n){this.variableNames=["A"],this.workgroupSize=[16,16,1];const r=new Array(e.length);for(let s=0;s<r.length;s++)r[s]=e[n[s]];this.outputShape=r,this.dispatchLayout={x:[0],y:[1]},this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){T(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);const e=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${ee()} {
        var x = i32(workgroupId.x) * ${e} + i32(localId.x);
        var y = i32(workgroupId.y) * ${e} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${e} + i32(localId.x);
        y = i32(workgroupId.x) * ${e} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let hH=class{constructor(e,n){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;const r=new Array(e.length);for(let s=0;s<r.length;s++)r[s]=e[n[s]];this.outputShape=r,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=n,this.shaderKey=`transpose_${n}`}getUserCode(){const e=pt(this.outputShape.length),n=yI(this.newDim);return`
      ${ee("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${n}), uniforms.aShape)]);
          }
        }
      }
    `}};function yI(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=new Array(e);for(let r=0;r<t.length;r++)n[t[r]]=`coords.${ns(r)}`;return n.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gr(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{perm:o}=r,i=n,a=s.shape.length,u=new Array(a);for(let c=0;c<u.length;c++)u[c]=s.shape[o[c]];if(n.shouldExecuteOnCPU([s])){const d=i.tensorMap.get(s.dataId).values,h=JG(d,s.shape,s.dtype,o,u);return n.makeTensorInfo(u,s.dtype,h)}if(s.shape.length===2&&ze(o,[1,0])){const c=new dH(s.shape,o);return i.runWebGPUProgram(c,[s],s.dtype)}const l=new hH(s.shape,o);return i.runWebGPUProgram(l,[s],s.dtype)}const pH={kernelName:cu,backendName:"webgpu",kernelFunc:Gr};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fH=class{constructor(e,n,r){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[s]=Vn(this.inputShape,[1]);this.outputShape=s.length===0?[1]:s,e.inSize>=32768&&r>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=n,this.shaderKey=`reduce_${n}`}getUserCode(){let e="",n="0.0";const r=this.workgroupSize[0];this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,n="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"?(e=" bestValue = bestValue * candidate; ",n="1.0"):this.reduceType==="all"?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",n="1.0"):this.reduceType==="any"&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",n="0.0");const s=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${r}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${ee("index")} {
         let outputIndex = index / ${r};
         let offset = getOffset(outputIndex);
         var bestValue = ${n};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${r}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${r}) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${r}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${s}
        }
       }
     `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mH={mean:"float32",all:"bool",any:"bool"};function ri(t,e,n,r,s){const o=t.shape.length,i=[],a=Je(e,t.shape);let u=a;const l=Lt(u,o);let c=t;l!=null&&(c=Gr({inputs:{x:t},attrs:{perm:l},backend:s}),u=zt(u.length,o),i.push(c)),Tn(r,u,o);const[d,h]=Vn(c.shape,u);let p=d;n&&(p=Nn(d,a));let f;if((r==="max"||r==="prod")&&s.shouldExecuteOnCPU([c])){const y=s.tensorMap.get(c.dataId).values;switch(r){case"max":const x=FG(y,U(h),p,t.dtype);f=s.makeTensorInfo(p,t.dtype,x);break;case"prod":const{outVals:g,outShape:v,outDtype:b}=WG(c.shape,c.dtype,y,u);f=s.makeTensorInfo(v,b,g);break;default:throw new Error(`${r} CPU implementation is not yet supported.`)}}else{const y=U(h),g=U(c.shape)/y,v={windowSize:y,inSize:y,batchSize:g,outSize:1},b=mH[r]||Dd(t.dtype),S=[{type:"int32",data:[y]}],I=new fH(v,r,s.device.limits.maxComputeWorkgroupSizeX),E=s.runWebGPUProgram(I,[c],b,S);i.push(E),f=he({inputs:{x:E},attrs:{shape:p},backend:s})}return i.forEach(y=>s.disposeData(y.dataId)),f}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gH(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{keepDims:o,axis:i}=r;return ri(s,i,o,"all",n)}const yH={kernelName:hg,backendName:"webgpu",kernelFunc:gH};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xH(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{keepDims:o,axis:i}=r;return ri(s,i,o,"any",n)}const vH={kernelName:pg,backendName:"webgpu",kernelFunc:xH};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let xI=class{constructor(e,n,r){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;const s=[n];this.op=r==="min"?"<":">";const[o,i]=Vn(e,s);this.outputShape=o.length===0?[1]:o,this.dispatchLayout=ae(this.outputShape),U(i)<32?(this.type="plain",this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=te(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){const e=this.workgroupSize[0],n=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${ns(this.inputShape.length-1)}`,r=()=>{let s="";if(this.outputShape.length===1)this.inputShape.length!==1&&(s+="outputCoords,");else for(let o=0;o<this.outputShape.length;o++)s+=`outputCoords.${ns(o)},`;return s};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${e}>;
      var<workgroup> xBestValues : array<f32, ${e}>;
    `}

      ${ee("index")} {
        let outputIndex = index / ${e};
        let reduceLength = ${n()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${e}) {
          let candidate = getX(${r()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${e}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${ee("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${r()} 0);
          let reduceLength = ${n()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${r()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wH(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o}=r;let i=Je(o,s.shape);const a=Lt(i,s.shape.length);let u=s;const l=[];a!=null&&(u=Gr({inputs:{x:s},backend:n,attrs:{perm:a}}),l.push(u),i=zt(i.length,u.shape.length)),Tn("argMax",[i[0]],u.shape.length);const c=new xI(u.shape,i[0],"max"),d=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],h=n.runWebGPUProgram(c,[u],"int32",d);return l.forEach(p=>n.disposeData(p.dataId)),h}const bH={kernelName:fg,backendName:"webgpu",kernelFunc:wH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CH(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o}=r;let i=Je(o,s.shape);const a=Lt(i,s.shape.length);let u=s;const l=[];a!=null&&(u=Gr({inputs:{x:s},backend:n,attrs:{perm:a}}),l.push(u),i=zt(i.length,u.shape.length)),Tn("argMin",[i[0]],u.shape.length);const c=new xI(u.shape,i[0],"min"),d=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],h=n.runWebGPUProgram(c,[u],"int32",d);return l.forEach(p=>n.disposeData(p.dataId)),h}const SH={kernelName:mg,backendName:"webgpu",kernelFunc:CH};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $H=Ae({opType:J.ASIN}),kH={kernelName:gg,backendName:"webgpu",kernelFunc:$H};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IH=Ae({opType:J.ASINH}),NH={kernelName:yg,backendName:"webgpu",kernelFunc:IH};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TH=Ae({opType:J.ATAN}),EH={kernelName:xg,backendName:"webgpu",kernelFunc:TH};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RH=$t({opType:ye.ATAN2}),_H={kernelName:wg,backendName:"webgpu",kernelFunc:RH};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PH=Ae({opType:J.ATANH}),AH={kernelName:vg,backendName:"webgpu",kernelFunc:PH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DH{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${ee("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Wu=class{constructor(e,n,r=!1,s=!1,o=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,n==="avg"&&r)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=n,this.computePositions=r,this.flattenPositions=s,this.includeBatchIndex=o,this.shaderKey=`pool2D_${n}_${r}_${s}_${o}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue = resultValue + value; count = count + 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};
      }`:e="resultValue = max(value, resultValue);";let n="resultValue";return this.poolType==="avg"&&(n="resultValue / max(count, 1.0)"),`
      ${ee("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${e}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${n});`}
        }
      }
    `}},G0=class{constructor(e,n,r=!1,s=!1,o=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,n==="avg"&&r)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=n,this.computePositions=r,this.flattenPositions=s,this.includeBatchIndex=o,this.shaderKey=`pool3D_${n}_${r}_${s}_${o}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue += value; count += 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};
      }`:e="resultValue = max(value, resultValue);";let n="resultValue";return this.poolType==="avg"&&(n="resultValue / max(count, 1.0)"),`
      ${ee("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${e}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${n});`}
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vI(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reductionIndices:o,keepDims:i}=r;return ri(s,o,i,"max",n)}const OH={kernelName:Ty,backendName:"webgpu",kernelFunc:vI};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wI(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{keepDims:o,axis:i}=r;return ri(s,i,o,"mean",n)}const FH={kernelName:Ay,backendName:"webgpu",kernelFunc:wI};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bI(t,e,n,r){if(e.filterWidth===1&&e.filterHeight===1&&ze(e.inShape,e.outShape))return Sn({inputs:{x:t},backend:r});if(e.filterWidth===e.inWidth&&e.filterHeight===e.inHeight&&e.batchSize===1&&e.padInfo.type==="VALID"){const i=t.shape.length,a=he({inputs:{x:t},backend:r,attrs:{shape:[t.shape[i-3]*t.shape[i-2],t.shape[i-1]]}});let u;n==="avg"?u=wI({inputs:{x:a},backend:r,attrs:{axis:0,keepDims:!1}}):(T(n==="max",()=>`Invalid pool type ${n}`),u=vI({inputs:{x:a},backend:r,attrs:{reductionIndices:0,keepDims:!1}}));const l=he({inputs:{x:u},backend:r,attrs:{shape:e.outShape}});return r.disposeData(a.dataId),r.disposeData(u.dataId),l}let s;const o=[{type:"int32",data:[e.strideHeight,e.strideWidth]}];return e.filterHeight===1&&e.filterWidth===1?s=new DH(e):(n==="avg"?s=new Wu(e,"avg"):(T(n==="max",()=>`Invalid pool type ${n}`),s=new Wu(e,"max")),o.push({type:"int32",data:[e.padInfo.top,e.padInfo.left]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]},{type:"int32",data:[e.inHeight,e.inWidth]},{type:"int32",data:[e.effectiveFilterHeight,e.effectiveFilterWidth]})),r.runWebGPUProgram(s,[t],t.dtype,o)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LH(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:u}=r,c=ir(s.shape,o,i,1,a,u);return bI(s,c,"avg",n)}const zH={kernelName:bg,backendName:"webgpu",kernelFunc:LH};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BH(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:o,strides:i,pad:a,dataFormat:u,dimRoundingMode:l}=r,c=[1,1,1],d=gs(s.shape,o,i,c,a,l,u),h=new G0(d,"avg"),p=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];return n.runWebGPUProgram(h,[s],s.dtype,p)}const MH={kernelName:Cg,backendName:"webgpu",kernelFunc:BH};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let VH=class{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${ee("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},WH=class{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${ee("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UH(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,i=o,{filterSize:a,strides:u,pad:l,dimRoundingMode:c}=r,d=gs(i.shape,a,u,1,l,c),h=new WH(d),p=1/(d.filterDepth*d.filterHeight*d.filterWidth),f=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterDepth-1-d.padInfo.front,d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"float32",data:[p]}];return n.runWebGPUProgram(h,[s],i.dtype,f)}const GH={kernelName:DS,backendName:"webgpu",kernelFunc:UH};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HH(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,i=o;hI([s,o],"avgPoolGrad");const{filterSize:a,strides:u,pad:l}=r,c=ir(i.shape,a,u,1,l),d=new VH(c),h=1/(c.filterHeight*c.filterWidth),p=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.effectiveFilterHeight-1-c.padInfo.top,c.effectiveFilterWidth-1-c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"float32",data:[h]}];return n.runWebGPUProgram(d,[s],i.dtype,p)}const jH={kernelName:AS,backendName:"webgpu",kernelFunc:HH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KH(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:o}=e,{transposeA:i,transposeB:a}=r;return Xd({a:s,b:o,transposeA:i,transposeB:a,backend:n})}const XH={kernelName:Sg,backendName:"webgpu",kernelFunc:KH};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let qH=class{constructor(e,n){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n,this.rank=n.length,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${pt(e.length)}, `,this.shaderKey="slice"}getUserCode(){const e=pt(this.rank),n=YH(this.rank);let r;return this.start.length===1?r=this.outputShape.map((o,i)=>"sourceLoc = uniforms.start + coords;"):r=this.outputShape.map((o,i)=>`sourceLoc.${Qf[i]} = uniforms.start.${ns(i)} + coords.${Qf[i]};`),`
      ${ee("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${r.join(`
`)}
          setOutputAtIndex(index, getSource(${n}));
        }
      }
    `}};const Qf=["x","y","z","w","u","v"];function YH(t){if(t===1)return"sourceLoc";if(t<=6)return Qf.slice(0,t).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ga(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:o,size:i}=r,[a,u]=x0(s,o,i);if(f0(s,a,u),n.shouldExecuteOnCPU([s])||s.dtype==="string"){const d=n.tensorMap.get(s.dataId),h=KG(d.values,a,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,h)}if(U(u)===0)return n.makeTensorInfo(u,s.dtype,[]);const l=new qH(a,u),c=[{type:"int32",data:a}];return n.runWebGPUProgram(l,[s],s.dtype,c)}const QH={kernelName:px,backendName:"webgpu",kernelFunc:ga};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZH=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:o,crops:i}=r;T(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");const a=o.reduce((v,b)=>v*b),u=ol(s.shape,o,a),l=il(u.length,o.length),c=al(s.shape,o,a),d=S0(i,o.length),h=$0(c,i,o.length),p=[],f=he({inputs:{x:s},backend:n,attrs:{shape:u}}),y=Gr({inputs:{x:f},backend:n,attrs:{perm:l}}),x=he({inputs:{x:y},backend:n,attrs:{shape:c}}),g=ga({inputs:{x},backend:n,attrs:{begin:d,size:h}});return p.push(f),p.push(y),p.push(x),p.forEach(v=>n.disposeData(v.dataId)),g},JH={kernelName:$g,backendName:"webgpu",kernelFunc:ZH};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e6=`
  fn bincount_write(index: i32, value: f32) {
    ${so("&result[index]","value","float32")}
  }
`,t6=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`;class CI{constructor(e,n,r=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=r,r&&(this.atomic=!1),this.hasWeights=n,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?t6:e6}
  ${ee("index")} {
    ${this.rank===1?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n6(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:o}=e,{size:i}=r,a=U(s.shape),l=U(o.shape)>0,c=[i],d=o.dtype,h=tn({backend:n,attrs:{shape:c,value:0,dtype:d}}),p=new CI([a],l),f=[{type:"int32",data:[i]}],y=l?[s,o]:[s];return n.runWebGPUProgram(p,y,d,f,h)}const r6={kernelName:kg,backendName:"webgpu",kernelFunc:n6};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class s6{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${ee("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o6(t){const{inputs:e,backend:n}=t,{s0:r,s1:s}=e;if(n.shouldExecuteOnCPU([r,s])){const c=n.tensorMap.get(r.dataId),d=n.tensorMap.get(s.dataId),h=c.values,p=d.values,f=$e(Array.from(h),Array.from(p));return n.makeTensorInfo([f.length],"int32",Int32Array.from(f))}const o=U(r.shape),i=U(s.shape),a=Math.max(o,i),u=new s6(a),l=[{type:"int32",data:[o]},{type:"int32",data:[i]}];return n.runWebGPUProgram(u,[r,s],"int32",l)}const i6={kernelName:Ig,backendName:"webgpu",kernelFunc:o6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SI=$t({opType:ye.NOT_EQUAL,dtype:"bool",cpuKernelImpl:VG}),a6={kernelName:Vy,backendName:"webgpu",kernelFunc:SI};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ul(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.tensorMap.get(r.dataId);return Sn({inputs:{x:s.complexTensorInfos.real},backend:n})}const u6={kernelName:Zy,backendName:"webgpu",kernelFunc:ul};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l6(t,e){const n=new ma(t.shape,J.TO_INT),r=e.runWebGPUProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zf(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dtype:o}=r;if(o==="complex64"){if(s.dtype==="complex64")return Sn({inputs:{x:s},backend:n});const i=ps(s.shape),a=Zf({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=ni({inputs:{real:a,imag:i},backend:n});return i.dispose(),n.disposeData(a.dataId),u}if(s.dtype==="complex64"){const i=ul({inputs:{input:s},backend:n}),a=Zf({inputs:{x:i},backend:n,attrs:{dtype:o}});return n.disposeData(i.dataId),a}if(!TS(s.dtype,o)){const i=Sn({inputs:{x:s},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:o}}if(n.shouldExecuteOnCPU([s])){const i=n.tensorMap.get(s.dataId).values,[a,u,l]=bG(i,s.shape,s.dtype,o);return n.makeTensorInfo(a,u,l)}if(o==="int32")return l6(s,n);if(o==="bool"){const i=n.makeTensorInfo([],"bool",Ur("bool",1)),u=SI({inputs:{a:s,b:i},backend:n});return n.disposeData(i.dataId),u}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${o}`)}const c6={kernelName:Ed,backendName:"webgpu",kernelFunc:Zf};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d6=Ae({opType:J.CEIL,cpuKernelImpl:CG}),h6={kernelName:Ng,backendName:"webgpu",kernelFunc:d6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class p6{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${ee("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let f6=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${ee("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m6(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{clipValueMin:o,clipValueMax:i}=r;let a;const u=[{type:"float32",data:[o]},{type:"float32",data:[i]}];return U(s.shape)%4===0?a=new p6(s.shape):a=new f6(s.shape),n.runWebGPUProgram(a,[s],s.dtype,u)}const g6={kernelName:Tg,backendName:"webgpu",kernelFunc:m6};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let y6=class{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`
    ${ee("index")} {
      if (index < uniforms.size) {
        let re = abs(getRealByOutputIndex(index));
        let im = abs(getImagByOutputIndex(index));
        let mx = max(re, im);

        // The length function in wgsl may be not underflow-safe on some GPUs.
        // So the safe solution is to ensure underflow-safety in all cases.
        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));
      }
    }
  `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t2(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}function x6(t){const{inputs:e,backend:n}=t,{x:r}=e,s=n.tensorMap.get(r.dataId),o=new y6(r.shape),i=[t2(r,s.complexTensorInfos.real),t2(r,s.complexTensorInfos.imag)];return n.runWebGPUProgram(o,i,i[0].dtype)}const v6={kernelName:Rg,backendName:"webgpu",kernelFunc:x6};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let w6=class{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=or(e,1),this.variableNames=e.map((n,r)=>`T${r}`),this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let n=0;n<this.offsetLength;n++)this.uniforms+=`offset${n} : i32,`;this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let o=1;o<this.offsetLength;o++)e.push(`else if (yC < uniforms.offset${[o]}){ setOutputAtCoords(coords.x, coords.y, getT${o}(yR, yC - uniforms.offset${o-1})); }`);const r=this.offsetLength,s=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${r}(yR, yC - uniforms.offset${s})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${ee("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qd(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.tensorMap.get(r.dataId);return Sn({inputs:{x:s.complexTensorInfos.imag},backend:n})}const b6={kernelName:fy,backendName:"webgpu",kernelFunc:qd};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ja(t,e,n){const r=t[0].dtype;if(r==="complex64"){const f=t.map(b=>ul({inputs:{input:b},backend:n})),y=t.map(b=>qd({inputs:{input:b},backend:n})),x=Ja(f,e,n),g=Ja(y,e,n),v=ni({inputs:{real:x,imag:g},backend:n});return f.forEach(b=>n.disposeData(b.dataId)),y.forEach(b=>n.disposeData(b.dataId)),n.disposeData(x.dataId),n.disposeData(g.dataId),v}let s=n.shouldExecuteOnCPU(t);if(r==="string"&&(s=!0),s){const f=t.map(I=>{const R=[-1,U(I.shape.slice(e))];return he({inputs:{x:I},backend:n,attrs:{shape:R}})}),y=f.map(I=>({vals:n.readSync(I.dataId),shape:I.shape})),x=or(f.map(I=>I.shape),1),g=f[0].shape[0]===1,v=SG(y,x,r,g),b=or(t.map(I=>I.shape),e),S=n.makeTensorInfo(b,r,v);return f.forEach(I=>n.disposeData(I.dataId)),S}const o=n.device.limits.maxStorageBuffersPerShaderStage-1;if(t.length>o){const f=[];for(let x=0;x<t.length;x+=o){const g=t.slice(x,x+o);f.push(Ja(g,e,n))}const y=Ja(f,e,n);for(const x of f)n.disposeData(x.dataId);return y}const{tensors2D:i,outShape:a}=C6(t,e,n),u=i.map(f=>f.shape),l=new w6(u),c=[],d=new Array(u.length-1);if(d.length>0){d[0]=u[0][1],c.push({type:"int32",data:[d[0]]});for(let f=1;f<d.length;f++)d[f]=d[f-1]+u[f][1],c.push({type:"int32",data:[d[f]]})}const h=n.runWebGPUProgram(l,i,i[0].dtype,c);i.forEach(f=>n.disposeData(f.dataId));const p=he({inputs:{x:h},backend:n,attrs:{shape:a}});return n.disposeData(h.dataId),p}function C6(t,e,n){const r=or(t.map(o=>o.shape),e);return{tensors2D:t.map(o=>he({inputs:{x:o},backend:n,attrs:{shape:[U(o.shape.slice(0,e)),U(o.shape.slice(e))]}})),outShape:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $I(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,o=Je(s,e[0].shape)[0],i=e.map(l=>l.shape);w0(i,o);const a=or(e.map(l=>l.shape),o);if(U(a)===0)return n.makeTensorInfo(a,e[0].dtype,[]);const u=e.filter(l=>U(l.shape)>0);return u.length===1?Sn({inputs:{x:u[0]},backend:n}):Ja(u,o,n)}const S6={kernelName:_g,backendName:"webgpu",kernelFunc:$I};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $6(t,e,n,r,s=!1,o=null,i=!1,a=4,u=4,l=4){const c=L=>{switch(L){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error(`innerElementSize ${L} is not supported.`)}},d=L=>{switch(L){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error(`innerElementSize ${L} is not supported.`)}},h=t?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,p=t?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=t?"uniforms.xShape[1]":"uniforms.xShape[2]",y=t?"uniforms.xShape[2]":"uniforms.xShape[3]",x=t?"row":"col",g=t?"col":"row",v=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${t?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${x} / outWidth;
      let outCol = ${x} % outWidth;

      let WRow = ${g} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${g} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${g} % inChannels;
      var resData = ${Se(a)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${y}) {
        ${h}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${c(a)}
      }
      return resData;`,b=t?e&&r?`
      ${v}`:`
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${v}
      }
      return ${Se(a)}(0.0);`:r&&n?`
      ${v}`:`
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${v}
      }
      return ${Se(a)}(0.0);`,S=`${d(u)}`,I=Se(l),E=Se(t?a:u),R=Se(t?u:a);return`
      ${xs(o,i,l===4,4)}
      fn mm_readA(batch: i32, row : i32, col : i32) -> ${E} {
        ${t?b:S}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> ${R} {
        ${t?S:b}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${I}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${t?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${p}
        ${ti(s,o)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}class k6{constructor(e,n,r,s,o=!1,i=null,a=!1,u=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=lI(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=cI(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),o&&(this.variableNames.push("bias"),this.variableComponents.push(4)),a&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],o&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=u,this.addBias=o,this.activation=i,this.hasPreluActivationWeights=a,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=n%this.tileAOuter===0,this.fitBOuter=r%this.tileBOuter===0,this.fitInner=s%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){const e=this.isVec4?jd(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):Kd(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),n=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${$6(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,n[0],n[1],n[2])}
    ${e}
  `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class I6{constructor(e,n=!1,r=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=n,this.activation=r,this.hasPreluActivationWeights=s,n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${xs(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${ti(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${ee("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class N6{constructor(e,n){this.variableNames=["x"],this.uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=n,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?1:2,n=this.isChannelsLast?2:3,r=this.isChannelsLast?"coords[1]":"coords[2]",s=this.isChannelsLast?"coords[2]":"coords[1]",o=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${ee("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${r};
        let col = ${s};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${n}] && xCol >= 0) {
            value = ${o};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function od(t,e){const n=t.length;return n>=3?e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]:!e&&n===1&&t[0]>1?[t[0],1]:null}function T6({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const u=n.dataFormat==="channelsLast",l=!u,c=!1,d=u&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID",h=[];let p,f;if(d){const g=n.inHeight*n.inWidth*n.inChannels;p=he({inputs:{x:t},backend:r,attrs:{shape:[1,n.batchSize,g]}}),f=he({inputs:{x:e},backend:r,attrs:{shape:[1,g,n.outChannels]}})}else p=he({inputs:{x:t},backend:r,attrs:{shape:u?[n.batchSize,n.inHeight*n.inWidth,n.inChannels]:[n.batchSize,n.inChannels,n.inHeight*n.inWidth]}}),f=he({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});if(h.push(p),h.push(f),o!=null){const g=od(o.shape,u);g!=null&&(o=he({inputs:{x:o},backend:r,attrs:{shape:g}}),h.push(o))}if(s!=null){const g=od(s.shape,u);g!=null&&(s=he({inputs:{x:s},backend:r,attrs:{shape:g}}),h.push(s))}const y=Xd({a:u?p:f,b:u?f:p,transposeA:l,transposeB:c,backend:r,bias:s,activation:a,preluActivationWeights:o,leakyreluAlpha:i}),x=he({inputs:{x:y},backend:r,attrs:{shape:n.outShape}});h.push(y);for(const g of h)r.disposeData(g.dataId);return x}function E6({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const{filterWidth:u,filterHeight:l,inChannels:c,strideWidth:d,strideHeight:h,padInfo:p,outWidth:f,outHeight:y,dilationWidth:x,dilationHeight:g,dataFormat:v}=n,b=v==="channelsLast",S=u*l*c,I=y*f,E=b?[n.batchSize,I,S]:[n.batchSize,S,I],R=new N6(E,b),_=[{type:"int32",data:[p.top,p.left]},{type:"int32",data:[h,d]},{type:"int32",data:[g,x]},{type:"int32",data:[f]},{type:"int32",data:[c*u]},{type:"int32",data:[c]}],L=r.runWebGPUProgram(R,[t],t.dtype,_),F=[];F.push(L);const V=he({inputs:{x:e},backend:r,attrs:{shape:[1,S,-1]}});if(F.push(V),o!=null){const ce=od(o.shape,b);ce!=null&&(o=he({inputs:{x:o},backend:r,attrs:{shape:ce}}),F.push(o))}if(s!=null){const ce=od(s.shape,b);ce!=null&&(s=he({inputs:{x:s},backend:r,attrs:{shape:ce}}),F.push(s))}const Z=Xd({a:b?L:V,b:b?V:L,transposeA:!b,transposeB:!1,backend:r,bias:s,activation:a,preluActivationWeights:o,leakyreluAlpha:i}),ne=he({inputs:{x:Z},backend:r,attrs:{shape:n.outShape}});F.push(Z);for(const ce of F)r.disposeData(ce.dataId);return ne}function kI({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const u=s!=null,l=o!=null,c=n.dataFormat==="channelsLast",d=c&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID",h=M().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!h&&(d||n.filterHeight===1&&n.filterWidth===1&&n.dilationHeight===1&&n.dilationWidth===1&&n.strideHeight===1&&n.strideWidth===1&&(n.padInfo.type==="SAME"||n.padInfo.type==="VALID")))return T6({x:t,filter:e,convInfo:n,backend:r,bias:s,activation:a,preluActivationWeights:o,leakyreluAlpha:i});const p=M().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),f=p>-1?p:r.thresholdToIncreaseWorkgroups,y=n.batchSize*Math.ceil(n.outHeight*n.outWidth/32)*Math.ceil(n.outChannels/32);if(M().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||y<=f)return E6({x:t,filter:e,convInfo:n,backend:r,bias:s,preluActivationWeights:o,leakyreluAlpha:i,activation:a});let x;const g=[n.padInfo.top,n.padInfo.left],v=[{type:"int32",data:[n.filterHeight,n.filterWidth]},{type:"int32",data:[...g]},{type:"int32",data:[n.strideHeight,n.strideWidth]},{type:"int32",data:[n.dilationHeight,n.dilationWidth]}];if(h)x=new I6(n,u,a,l);else{const E=c?n.outHeight*n.outWidth:n.outChannels,R=c?n.outChannels:n.outHeight*n.outWidth,_=n.filterHeight*n.filterWidth*n.inChannels;v.push({type:"int32",data:[E]},{type:"int32",data:[R]},{type:"int32",data:[_]});const L=r.adapterInfo.isIntel();x=new k6(n,E,R,_,u,a,l,L)}const b=[],S=[t,e];u&&(!c&&s.shape.length===1&&(s=he({inputs:{x:s},backend:r,attrs:{shape:[s.shape[0],1,1]}}),b.push(s)),S.push(s)),l&&(!c&&o.shape.length===1&&(o=he({inputs:{x:o},backend:r,attrs:{shape:[o.shape[0],1,1]}}),b.push(o)),S.push(o)),a==="leakyrelu"&&(v.push({type:"float32",data:[i]}),x.uniforms+=" alpha : f32,");const I=r.runWebGPUProgram(x,S,t.dtype,v);for(const E of b)r.disposeData(E.dataId);return I}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R6(t){const{inputs:e,attrs:n,backend:r}=t,{x:s,filter:o}=e,{strides:i,pad:a,dataFormat:u,dilations:l,dimRoundingMode:c}=n,d=kr(u),h=gt(s.shape,o.shape,i,l,a,c,!1,d);return kI({x:s,filter:o,convInfo:h,backend:r})}const _6={kernelName:Pg,backendName:"webgpu",kernelFunc:R6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let P6=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=this.isChannelsLast&&e.outChannels%4===0&&e.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){const e=this.isChannelsLast?1:2,n=this.isChannelsLast?2:3,r=this.isChannelsLast?3:1,s=`
    ${ee()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${s}
    `:`
    ${ee("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${r}];

        let dyCorner = vec2<i32>(coords[${e}], coords[${n}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},A6=class{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${ee("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},D6=class{constructor(e){this.variableNames=["x","dy"],this.uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${ee("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},O6=class{constructor(e){this.variableNames=["dy","W"],this.uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${ee("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F6(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:i,pad:a,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,d=kr(u),h=gt(s.shape,c,i,1,a,l,!1,d),p=new A6(h),f=[{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.batchSize]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.inHeight]},{type:"int32",data:[h.inWidth]}];return n.runWebGPUProgram(p,[s,o],s.dtype,f)}const L6={kernelName:Ag,backendName:"webgpu",kernelFunc:F6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z6(t=4){const e=o=>{switch(o){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${o} is not supported.`)}},r=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${Se(t)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${Se(t)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${t}];`}
      }
      return ${Se(t)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, col : i32) -> ${Se(t)} {
    ${r}
  }

  fn mm_readB(batch: i32, row : i32, col : i32) -> ${Se(t)} {
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${e(t)}
    }
    return ${Se(t)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${Se(t)}) {
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${t}] = value;
    }
  }`}class B6{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,T(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=lI(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=cI(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){const e=this.isVec4?jd(this.elementsPerThread,this.workgroupSize):Kd(this.elementsPerThread,this.workgroupSize);return`
    ${z6(this.isVec4?4:1)}
    ${e}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M6(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{inputShape:i,strides:a,pad:u,dataFormat:l,dimRoundingMode:c}=r,d=kr(l),h=gt(i,o.shape,a,1,u,c,!1,d),p=[{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.filterHeight-1-h.padInfo.top,h.filterWidth-1-h.padInfo.left]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.batchSize,h.outHeight,h.outWidth,h.outChannels]}];let f;if(M().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||h.dataFormat!=="channelsLast")f=new P6(h);else{f=new B6(h);const y=h.inHeight*h.inWidth,x=h.inChannels,g=h.filterHeight*h.filterWidth*h.outChannels;p.push({type:"uint32",data:[y]},{type:"uint32",data:[x]},{type:"uint32",data:[g]})}return n.runWebGPUProgram(f,[s,o],"float32",p)}const V6={kernelName:Dg,backendName:"webgpu",kernelFunc:M6};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W6{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${ee("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U6(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:i,pad:a,dilations:u}=r,l=ro(s.shape,o.shape,i,u,a),c=[l.padInfo.front,l.padInfo.top,l.padInfo.left],d=[{type:"int32",data:[l.filterDepth,l.filterHeight,l.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[l.strideDepth,l.strideHeight,l.strideWidth]},{type:"int32",data:[l.dilationDepth,l.dilationHeight,l.dilationWidth]}],h=new W6(l),p=nn(s.dtype,o.dtype);return n.runWebGPUProgram(h,[s,o],p,d)}const G6={kernelName:Og,backendName:"webgpu",kernelFunc:U6};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H6(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:i,pad:a,filterShape:u}=r,l=ro(s.shape,u,i,1,a),c=new D6(l),d=[{type:"int32",data:[l.padInfo.front,l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.strideDepth,l.strideHeight,l.strideWidth]},{type:"int32",data:[l.batchSize]},{type:"int32",data:[l.outDepth]},{type:"int32",data:[l.outHeight]},{type:"int32",data:[l.outWidth]},{type:"int32",data:[l.inDepth]},{type:"int32",data:[l.inHeight]},{type:"int32",data:[l.inWidth]}];return n.runWebGPUProgram(c,[s,o],o.dtype,d)}const j6={kernelName:FS,backendName:"webgpu",kernelFunc:H6};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K6(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{strides:i,pad:a,inputShape:u}=r,l=ro(u,o.shape,i,1,a),c=new O6(l),d=[{type:"int32",data:[l.filterDepth,l.filterHeight,l.filterWidth]},{type:"int32",data:[l.filterDepth-1-l.padInfo.front,l.filterHeight-1-l.padInfo.top,l.filterWidth-1-l.padInfo.left]},{type:"int32",data:[l.strideDepth,l.strideHeight,l.strideWidth]},{type:"int32",data:[l.outDepth]},{type:"int32",data:[l.outHeight]},{type:"int32",data:[l.outWidth]},{type:"int32",data:[l.outChannels]}];return n.runWebGPUProgram(c,[s,o],s.dtype,d)}const X6={kernelName:Fg,backendName:"webgpu",kernelFunc:K6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q6=Ae({opType:J.COS}),Y6={kernelName:Lg,backendName:"webgpu",kernelFunc:q6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q6=Ae({opType:J.COSH}),Z6={kernelName:zg,backendName:"webgpu",kernelFunc:Q6};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let J6=class{constructor(e,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;const[o]=n;this.outputShape=[o,r[0],r[1],e],this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId=s==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){const[e,n]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[r,s,o]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[i,a,u]=this.cropWidthBiggerThan1?[`(${n} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${n} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${n}`];return`
    ${ee("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${r});
        let width_ratio = f32(${i});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${s};
        let width_scale = ${a};
        let in_y = ${o};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${u};
        if( in_x < 0.0 || in_x > ${n} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ej=t=>{const{inputs:e,backend:n,attrs:r}=t,{image:s,boxes:o,boxInd:i}=e,{cropSize:a,method:u,extrapolationValue:l}=r,c=new J6(s.shape[3],o.shape,a,u),d=[{type:"float32",data:[l]}];return n.runWebGPUProgram(c,[s,o,i],"float32",d)},tj={kernelName:Vg,backendName:"webgpu",kernelFunc:ej};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Uu;(function(t){t.Prod="*",t.Sum="+"})(Uu||(Uu={}));let n2=class{constructor(e,n,r,s){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=n,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=r,this.reverse=s,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){const e=this.outputShape.length,n=this.op===Uu.Prod?"1.0":"0.0",r=this.exclusive?n:`getX(${r2(e,"coords",this.op)})`,s=this.outputShape[this.outputShape.length-1];let o="",i="";return this.exclusive?(o=this.reverse?`end != ${s-1}`:"end != 0",i=this.reverse?"end + 1":"end - 1"):(o=this.reverse?`end + pow2 < ${s}`:"end >= pow2",i=this.reverse?"end + pow2":"end - pow2"),`
      ${ee("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${s2(e,"coords",this.op)};
         var val = ${r};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${o}) {
           let idx = ${i};
           ${s2(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${r2(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function r2(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.x, ${e}.y`;if(t===3)return`${e}.x, ${e}.y, ${e}.z`;if(t===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function s2(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.y`;if(t===3)return`${e}.z`;if(t===4)return`${e}.w`;throw Error(`Cumulative ${n} for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function II(t,e,n,r,s,o){const i=e.shape.length,a=Lt([r],i);let u=e;a!=null&&(u=Gr({inputs:{x:e},backend:n,attrs:{perm:a}}));const l=zt(1,i)[0];if(l!==i-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const c=u.shape[l];let d=Sn({inputs:{x:u},backend:n});for(let h=0;h<=Math.ceil(Math.log2(c))-1;h++){const p=new n2(t,u.shape,!1,o),f=d,y=[{type:"float32",data:[h]}];d=n.runWebGPUProgram(p,[d],d.dtype,y),n.disposeData(f.dataId)}if(s){const h=new n2(t,u.shape,s,o),p=d,f=[{type:"float32",data:[0]}];d=n.runWebGPUProgram(h,[d],d.dtype,f),n.disposeData(p.dataId)}if(a!=null){const h=sl(a),p=Gr({inputs:{x:d},backend:n,attrs:{perm:h}});return n.disposeData(d.dataId),n.disposeData(u.dataId),p}return d}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nj(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,exclusive:i,reverse:a}=r;return II(Uu.Prod,s,n,o,i,a)}const rj={kernelName:Bg,backendName:"webgpu",kernelFunc:nj};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sj(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,exclusive:i,reverse:a}=r;return II(Uu.Sum,s,n,o,i,a)}const oj={kernelName:Mg,backendName:"webgpu",kernelFunc:sj};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ij(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:o}=e,{size:i,binaryOutput:a}=r,u=s.shape.length===1,c=U(o.shape)>0,d=o.dtype,h=u?[s.shape[0]]:[s.shape[0],s.shape[1]],p=u?[i]:[s.shape[0],i],f=tn({backend:n,attrs:{shape:p,value:0,dtype:d}}),y=new CI(h,c,a),x=[{type:"int32",data:[i]}],g=c?[s,o]:[s];return n.runWebGPUProgram(y,g,d,x,f)}const aj={kernelName:Wg,backendName:"webgpu",kernelFunc:ij};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let uj=class{constructor(e,n){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${n}`,this.dataFormat=n}getUserCode(){return`
      ${ee("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lj(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockSize:o,dataFormat:i}=r,a=s.shape[0],u=i==="NHWC"?s.shape[1]:s.shape[2],l=i==="NHWC"?s.shape[2]:s.shape[3],c=i==="NHWC"?s.shape[3]:s.shape[1],d=u*o,h=l*o,p=c/(o*o),f=i==="NHWC"?[a,d,h,p]:[a,p,d,h],y=[{type:"int32",data:[o]}],x=new uj(f,i);return n.runWebGPUProgram(x,[s],s.dtype,y)}const cj={kernelName:Ug,backendName:"webgpu",kernelFunc:lj};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dj{constructor(e,n,r,s=!1,o=null,i=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.addBias=s,this.activation=o,this.hasPreluActivation=i,this.filterHeight=n,this.filterWidth=r,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){const e=this.filterWidth*this.filterHeight,n=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],r=this.workgroupSize[1]+this.filterHeight-1,s=this.workgroupSize[0]+this.filterWidth-1;return`
      ${xs(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${s}>, ${r}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${ee()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${r}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${s}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${e<n?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${n})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${ti(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NI{constructor(e,n=!1,r=null,s=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;const o=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=ae(o),this.dispatch=te(this.dispatchLayout,o,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),T(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=n,this.activation=r,this.hasPreluActivation=s,this.shaderKey=`depthwiseVec4_${r}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){const e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,n=this.convInfo.strideHeight,r=this.convInfo.strideWidth;return`
      ${xs(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${ee("index")} {
        let width0 = uniforms.outShape[3] / ${this.outputComponent};
        let d1 = (index % width0) * ${this.outputComponent};
        var index1 = index / width0;
        let width1 = uniforms.virtualWidth / ${this.workPerThread};
        let c = (index1 % width1) * ${this.workPerThread};
        index1 = index1 / width1;
        let r = index1 % uniforms.outShape[1];
        let batch = index1 / uniforms.outShape[1];

        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${n}, ${r}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${e}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${r} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${ti(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let TI=class{constructor(e,n=!1,r=null,s=!1){this.variableNames=["x","W"],this.uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`,this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=n,this.activation=r,this.hasPreluActivation=s,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${xs(this.activation,this.hasPreluActivation,!1,4)}

      ${ee("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${ti(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hj(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:i,pad:a,dataFormat:u,dilations:l,dimRoundingMode:c}=r,d=kr(u);let h=l;h==null&&(h=[1,1]);const p=gt(s.shape,o.shape,i,h,a,c,!0,d),f=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inHeight,p.inWidth]}],y=p.dataFormat==="channelsLast";let x;return!y&&p.inHeight>16&&p.inWidth>16&&p.strideHeight===1&&p.strideWidth===1&&p.dilationWidth===1&&p.dilationHeight===1&&p.inChannels===p.outChannels?x=new dj(p.outShape,p.filterHeight,p.filterWidth):y&&p.outHeight>4&&p.outWidth>4&&p.strideWidth<=2&&p.inChannels===p.outChannels&&p.dilationHeight===1&&p.dilationWidth===1&&p.inChannels%4===0?(x=new NI(p),f.push({type:"int32",data:[x.virtualWidth]})):(x=new TI(p),f.push({type:"int32",data:[p.filterHeight]},{type:"int32",data:[p.filterWidth]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]})),n.runWebGPUProgram(x,[s,o],s.dtype,f)}const pj={kernelName:Gg,backendName:"webgpu",kernelFunc:hj};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fj=class{constructor(e){this.variableNames=["x","dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${ee("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},mj=class{constructor(e){this.variableNames=["dy","W"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${ee("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gj(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:i,dilations:a,pad:u,dimRoundingMode:l,filterShape:c}=r,d=gt(s.shape,c,i,a,u,l,!0),h=new fj(d),p=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.inHeight]},{type:"int32",data:[d.inWidth]},{type:"int32",data:[d.batchSize]},{type:"int32",data:[d.outChannels/d.inChannels]}];return n.runWebGPUProgram(h,[s,o],"float32",p)}const yj={kernelName:Hg,backendName:"webgpu",kernelFunc:gj};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xj(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{strides:i,dilations:a,pad:u,dimRoundingMode:l,inputShape:c}=r,d=gt(c,o.shape,i,a,u,l,!0),h=new mj(d),p=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.outChannels/d.inChannels]}];return n.runWebGPUProgram(h,[s,o],s.dtype,p)}const vj={kernelName:jg,backendName:"webgpu",kernelFunc:xj};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let wj=class{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${ee("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bj(t){const{inputs:e,backend:n}=t,{x:r}=e,s=[...r.shape,...r.shape],o=U(r.shape),i=he({inputs:{x:r},backend:n,attrs:{shape:[o]}}),a=new wj(o),u=n.runWebGPUProgram(a,[i],i.dtype),l=he({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeData(i.dataId),n.disposeData(u.dataId),l}const Cj={kernelName:Kg,backendName:"webgpu",kernelFunc:bj};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Sj=class{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${ee("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $j(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:i,pad:a,dilations:u}=r,l=nl(s.shape,o.shape,i,a,"NHWC",u),c=[l.padInfo.top,l.padInfo.left],d=[{type:"int32",data:[l.filterHeight,l.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]}],h=new Sj(l);return n.runWebGPUProgram(h,[s,o],s.dtype,d)}const kj={kernelName:Xg,backendName:"webgpu",kernelFunc:$j};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ij{constructor(e,n){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=ae(e.outShape),this.dispatch=te(this.dispatchLayout,e.outShape,this.workgroupSize),n!=="float32"&&n!=="int32")throw new Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${n} type.`);this.type=n,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${ee("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${so("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}class Nj{constructor(e,n,r){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=ae(e.outShape),this.dispatch=te(this.dispatchLayout,e.outShape,this.workgroupSize),r!=="float32"&&r!=="int32")throw new Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${r} type.`);this.type=r,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${ee("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${so("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tj(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o,dy:i}=e,{strides:a,pad:u,dilations:l}=r,c=nl(s.shape,o.shape,a,u,"NHWC",l),d=o.dtype,h=new Nj(c,o.shape,d),p=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[U(c.outShape)]}],f=tn({backend:n,attrs:{shape:o.shape,value:0,dtype:d}});return n.runWebGPUProgram(h,[s,o,i],d,p,f)}const Ej={kernelName:B3,backendName:"webgpu",kernelFunc:Tj};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rj(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o,dy:i}=e,{strides:a,pad:u,dilations:l}=r,c=nl(s.shape,o.shape,a,u,"NHWC",l),d=s.dtype,h=new Ij(c,d),p=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[U(c.outShape)]}],f=tn({backend:n,attrs:{shape:c.inShape,value:0,dtype:d}});return n.runWebGPUProgram(h,[s,o,i],d,p,f)}const _j={kernelName:z3,backendName:"webgpu",kernelFunc:Rj};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pj{constructor(e,n,r){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=na.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=n,this.textureFormat=r,this.shaderKey=`draw_${n}_${r}`}getUserCode(){let e;const n=this.type==="float32"?"value":"value / 255.0";return e=`
      if (uniforms.numChannels == 1) {
        rgba[0] = ${n};
        rgba[1] = ${n};
        rgba[2] = ${n};
      } else {
        rgba[d] = ${n};
      }`,`
       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;
       ${ee("index")} {
         if (index < uniforms.size) {
           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);
           for (var d = 0; d < uniforms.numChannels; d = d + 1) {
             let value = f32(inBuf[index * uniforms.numChannels + d]);
             ${e}
           }
           rgba.x = rgba.x * rgba.w;
           rgba.y = rgba.y * rgba.w;
           rgba.z = rgba.z * rgba.w;
           let coords = getCoordsFromIndex(index);
           textureStore(outImage, vec2<i32>(coords.yx), rgba);
         }
       }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aj(t){const{inputs:e,backend:n,attrs:r}=t,{image:s}=e,{canvas:o,options:i}=r,[a,u]=s.shape.slice(0,2),{imageOptions:l}=i||{},c=(l==null?void 0:l.alpha)||1,d=n.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",h=[a,u],p=new Pj(h,s.dtype,d);o.width=u,o.height=a;const f="webgpu";let y=o.getContext(f),x;y||(x=new OffscreenCanvas(u,a),y=x.getContext(f));const g=s.shape.length===3?s.shape[2]:1;y.configure({device:n.device,format:d,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});const v="int32",b=n.makeTensorInfo(h,v),S=n.tensorMap.get(b.dataId);S.resource=y.getCurrentTexture(),S.external=!0;const I=[{type:"uint32",data:[g]},{type:"float32",data:[c]}];if(n.runWebGPUProgram(p,[s],v,I,b),x){const E=o.getContext("2d");if(!E)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");E.drawImage(x,0,0)}return n.disposeData(b.dataId),s}const Dj={kernelName:LS,backendName:"webgpu",kernelFunc:Aj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EI=$t({opType:ye.MUL,cpuKernelImpl:BG,supportsComplex:!0}),Oj={kernelName:By,backendName:"webgpu",kernelFunc:EI};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RI(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:i}=r;return ri(s,o,i,"sum",n)}const Fj={kernelName:wx,backendName:"webgpu",kernelFunc:RI};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lj(t){const{inputs:e,backend:n,attrs:r}=t,{equation:s}=r,o=e,{allDims:i,summedDims:a,idDims:u}=A0(s,o.length);O0(i.length,u,o);const{path:l,steps:c}=F0(a,u),d=c.length;let h=null,p=i.length;const f=[];for(let y=0;y<d;++y){for(const x of c[y]){const{permutationIndices:g,expandDims:v}=D0(p,u[x]);let b;L0(g)?b=o[x]:(b=Gr({inputs:{x:o[x]},backend:n,attrs:{perm:g}}),f.push(b));const S=b.shape.slice();for(let I=0;I<v.length;++I)S.splice(v[I],0,1);ze(b.shape,S)||(b=he({inputs:{x:b},backend:n,attrs:{shape:S}}),f.push(b)),h===null?h=b:(h=EI({inputs:{a:b,b:h},backend:n}),f.push(h))}y<d-1&&(l[y]>=0&&(h=RI({inputs:{x:h},backend:n,attrs:{axis:l[y]-(i.length-p),keepDims:!1}}),f.push(h)),p--)}for(const y of f)y!==h&&n.disposeData(y.dataId);return h}const zj={kernelName:Yg,backendName:"webgpu",kernelFunc:Lj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bj=Ae({opType:J.ELU}),Mj={kernelName:Qg,backendName:"webgpu",kernelFunc:Bj};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vj=t=>{const{inputs:e,backend:n}=t,{dy:r,y:s}=e,o=new rd(ye.ELU_DER,r.shape,s.shape);return n.runWebGPUProgram(o,[r,s],r.dtype)},Wj={kernelName:zS,backendName:"webgpu",kernelFunc:Vj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uj=$t({opType:ye.EQUAL,dtype:"bool",cpuKernelImpl:$G}),Gj={kernelName:Jg,backendName:"webgpu",kernelFunc:Uj};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hj=Ae({opType:J.ERF}),jj={kernelName:Zg,backendName:"webgpu",kernelFunc:Hj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kj=Ae({opType:J.EXP,cpuKernelImpl:kG,dtype:"float32"}),Xj={kernelName:ey,backendName:"webgpu",kernelFunc:Kj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jf(t){const{inputs:e,attrs:n,backend:r}=t,{dim:s}=n,{input:o}=e,i=o.shape.length,a=o.shape.slice();let u=s;return s<0&&(T(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),a.splice(u,0,1),he({inputs:{x:o},backend:r,attrs:{shape:a}})}const qj={kernelName:ty,backendName:"webgpu",kernelFunc:Jf};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yj=Ae({opType:J.EXPM1,cpuKernelImpl:IG}),Qj={kernelName:ny,backendName:"webgpu",kernelFunc:Yj};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let o2=class{constructor(e,n){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey=`fft_${e}`}getUserCode(){return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${this.component==="real"?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${ee("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _I(t,e,n){const r=n.tensorMap.get(t.dataId),s=U(t.shape),o=t.shape[t.shape.length-1],i=s/o,a=[],u=he({inputs:{x:t},backend:n,attrs:{shape:[i,o]}});a.push(u);const l=u.shape,c=new o2("real",l),d=new o2("imag",l),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],p=e?2*Math.PI:-2*Math.PI,f=e?l[1]:1,y=[{type:"float32",data:[p]},{type:"float32",data:[f]}],x=n.runWebGPUProgram(c,h,"float32",y);a.push(x);const g=n.runWebGPUProgram(d,h,"float32",y);a.push(g);const v=ni({inputs:{real:x,imag:g},backend:n});a.push(v);const b=he({inputs:{x:v},backend:n,attrs:{shape:t.shape}});return a.forEach(S=>n.disposeData(S.dataId)),b}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zj(t){const{inputs:e,backend:n}=t,{input:r}=e;return _I(r,!1,n)}const Jj={kernelName:ry,backendName:"webgpu",kernelFunc:Zj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let e5=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${ee("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t5={kernelName:oy,backendName:"webgpu",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,s=new e5(n.shape);return r.runWebGPUProgram(s,[n],n.dtype)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n5=Ae({opType:J.FLOOR,cpuKernelImpl:NG}),r5={kernelName:iy,backendName:"webgpu",kernelFunc:n5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s5=$t({opType:ye.FLOOR_DIV,cpuKernelImpl:TG,dtype:"int32"}),o5={kernelName:ay,backendName:"webgpu",kernelFunc:s5};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let i5=class{constructor(e,n,r=!1){this.pixelsOpType=na.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize,[n,1,1]),this.importVideo=r,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){const e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${ee("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a5={kernelName:Uc,backendName:"webgpu",kernelFunc:u5};let hi,op=M().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function u5(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:o}=r;if(s==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const i=typeof HTMLVideoElement<"u"&&s instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement,u=typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&s instanceof OffscreenCanvas,l=typeof ImageBitmap<"u"&&s instanceof ImageBitmap,[c,d]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],h=[d,c,o],p=M().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&i,f=i||a;if(l||u||f){let v;if(p)v=n.device.importExternalTexture({source:s});else{if(f){const K=M().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(hi==null||K!==op)&&(op=K,hi=document.createElement("canvas").getContext("2d",{willReadFrequently:op})),hi.canvas.width=c,hi.canvas.height=d,hi.drawImage(s,0,0,c,d),s=hi.canvas}const F=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,j=n.textureManager.acquireTexture(h[1],h[0],"rgba8unorm",F);n.queue.copyExternalImageToTexture({source:s},{texture:j},[h[1],h[0]]),v=j}const b=U(h),S=lt(h),I=new i5(h,o,p),E=[{type:"uint32",data:[b]},{type:"uint32",data:[o]},{type:"uint32",data:[...S]}],R=n.makeTensorInfo([d,c],"int32"),_=n.tensorMap.get(R.dataId);_.resource=v;const L=n.runWebGPUProgram(I,[R],"int32",E);return n.disposeData(R.dataId),L}const y=s.data;let x=y;if(o!=null&&o!==4){x=new Uint8Array(s.width*s.height*o);const v=y.length;let b=0;for(let S=0;S<v;S++)S%4<o&&(x[b++]=y[S])}const g=n.makeTensorInfo(h,"int32",new Int32Array(x));return n.uploadToGPU(g.dataId),g}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let l5=class{constructor(e,n,r,s,o){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],$e(e,n),$e(e,r),this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),s!=null&&($e(e,s),this.variableNames.push("offset")),o!=null&&($e(e,o),this.variableNames.push("scale")),this.offsetShape=s,this.scaleShape=o,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let n="1.0";return this.scaleShape!=null&&(n="getScaleByOutputIndex(index)"),`
      ${ee("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${n};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c5={kernelName:uy,backendName:"webgpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r,scale:s,offset:o,mean:i,variance:a}=t,{varianceEpsilon:u}=e,l=n,c=[r,i,a];let d=null;o!=null&&(d=o.shape,c.push(o));let h=null;s!=null&&(h=s.shape,c.push(s));const p=new l5(r.shape,i.shape,a.shape,d,h),f=[{type:"float32",data:[u]}];return l.runWebGPUProgram(p,c,r.dtype,f)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d5(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r,y=kr(c),x=gt(s.shape,o.shape,u,d,l,h,!1,y);return kI({x:s,filter:o,convInfo:x,backend:n,bias:i,preluActivationWeights:a,leakyreluAlpha:f,activation:p})}const h5={kernelName:Hc,backendName:"webgpu",kernelFunc:d5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p5(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dilations:c,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=r;let f=c;f==null&&(f=[1,1]),T(qt(u,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`);const y=gt(s.shape,o.shape,u,f,l,d,!0),x=[s,o],g=i!=null,v=a!=null;g&&x.push(i),v&&x.push(a);const b=[{type:"int32",data:[y.padInfo.top,y.padInfo.left]},{type:"int32",data:[y.inHeight,y.inWidth]}];let S;return y.outHeight>4&&y.outWidth>4&&y.strideWidth<=2&&y.inChannels===y.outChannels&&y.dilationHeight===1&&y.dilationWidth===1&&y.inChannels%4===0?(S=new NI(y,g,h,v),b.push({type:"int32",data:[S.virtualWidth]})):(S=new TI(y,g,h,v),b.push({type:"int32",data:[y.filterHeight]},{type:"int32",data:[y.filterWidth]},{type:"int32",data:[y.strideHeight,y.strideWidth]},{type:"int32",data:[y.dilationHeight,y.dilationWidth]})),h==="leakyrelu"&&(b.push({type:"float32",data:[p]}),S.uniforms+=" alpha : f32,"),n.runWebGPUProgram(S,x,"float32",b)}const f5={kernelName:jc,backendName:"webgpu",kernelFunc:p5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let m5=class{constructor(e,n){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${pt(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
      ${ee("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g5(t){const{inputs:e,backend:n}=t,{params:r,indices:s}=e,o=s.shape,i=o[o.length-1],a=U(r.shape),[u,l,c,d]=p0(r,s),h=he({inputs:{x:s},backend:n,attrs:{shape:[l,i]}}),p=he({inputs:{x:r},backend:n,attrs:{shape:[U(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||r.dtype==="string"){const v=n.readSync(s.dataId),b=n.bufferSync(r),S=EG(v,b,r.dtype,l,i,c,d,r.shape,a);return n.makeTensorInfo(u,r.dtype,S.values)}const f=new m5(i,[l,c]),y=[{type:"int32",data:[i]},{type:"int32",data:d}],x=n.runWebGPUProgram(f,[p,h],p.dtype,y),g=he({inputs:{x},backend:n,attrs:{shape:u}});return n.disposeData(h.dataId),n.disposeData(p.dataId),n.disposeData(x.dataId),g}const y5={kernelName:cy,backendName:"webgpu",kernelFunc:g5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let x5=class{constructor(e,n){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=n,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){const e=v5(this.aShape);return`
      ${ee("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function v5(t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<t.length;r++)r===2?n.push("indexZ"):n.push(`${e[r]}`);return n.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PI(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,indices:o}=e,{axis:i,batchDims:a}=r,u=Je(i,s.shape)[0],l=M0(s,o,u,a),c=U(o.shape),d=[],h=he({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=he({inputs:{x:o},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});d.push(h),d.push(p);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,o])){const b=n.tensorMap.get(p.dataId).values,S=Be(p.shape,p.dtype,b),E=n.tensorMap.get(h.dataId).values,R=Be(h.shape,h.dtype,E),_=RG(R,S,f);return d.forEach(L=>n.disposeData(L.dataId)),n.makeTensorInfo(l.outputShape,_.dtype,_.values)}const y=new x5(h.shape,f),x=n.runWebGPUProgram(y,[h,p],h.dtype);d.push(x);const g=he({inputs:{x},backend:n,attrs:{shape:l.outputShape}});return d.forEach(v=>n.disposeData(v.dataId)),g}const w5={kernelName:ly,backendName:"webgpu",kernelFunc:PI};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b5=$t({opType:ye.GREATER,cpuKernelImpl:PG,dtype:"bool"}),C5={kernelName:dy,backendName:"webgpu",kernelFunc:b5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S5=$t({opType:ye.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:_G}),$5={kernelName:hy,backendName:"webgpu",kernelFunc:S5};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k5(t){const{inputs:e,backend:n}=t,{input:r}=e;return _I(r,!0,n)}const I5={kernelName:py,backendName:"webgpu",kernelFunc:k5};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N5=Ae({opType:J.IS_FINITE,dtype:"bool"}),T5={kernelName:my,backendName:"webgpu",kernelFunc:N5};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E5=Ae({opType:J.IS_INF,dtype:"bool"}),R5={kernelName:gy,backendName:"webgpu",kernelFunc:E5};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _5=Ae({opType:J.IS_NAN,dtype:"bool"}),P5={kernelName:yy,backendName:"webgpu",kernelFunc:_5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A5(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{alpha:o}=r,i=[{type:"float32",data:[o]}],a=new ma(s.shape,J.LEAKYRELU,"alpha : f32,");return n.runWebGPUProgram(a,[s],"float32",i)}const D5={kernelName:xy,backendName:"webgpu",kernelFunc:A5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O5=$t({opType:ye.LESS,dtype:"bool",cpuKernelImpl:DG}),F5={kernelName:vy,backendName:"webgpu",kernelFunc:O5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L5=$t({opType:ye.LESS_EQUAL,dtype:"bool",cpuKernelImpl:AG}),z5={kernelName:wy,backendName:"webgpu",kernelFunc:L5};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class B5{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${ee("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M5(t){const{backend:e,attrs:n}=t,{start:r,stop:s,num:o}=n,i=(s-r)/(o-1),a=new B5(o),u=[{type:"float32",data:[r]},{type:"float32",data:[i]}];return e.runWebGPUProgram(a,[],"float32",u)}const V5={kernelName:by,backendName:"webgpu",kernelFunc:M5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W5=Ae({opType:J.LOG,cpuKernelImpl:OG}),U5={kernelName:Cy,backendName:"webgpu",kernelFunc:W5};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G5=Ae({opType:J.LOG1P}),H5={kernelName:Sy,backendName:"webgpu",kernelFunc:G5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j5=$t({opType:ye.LOGICAL_AND,dtype:"bool"}),K5={kernelName:$y,backendName:"webgpu",kernelFunc:j5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X5=Ae({opType:J.LOGICAL_NOT}),q5={kernelName:ky,backendName:"webgpu",kernelFunc:X5};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y5=$t({opType:ye.LOGICAL_OR}),Q5={kernelName:Iy,backendName:"webgpu",kernelFunc:Y5};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AI=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`;let Z5=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${ee("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${AI}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}};class J5{constructor(e,n){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,T(n<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${n}`),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=te(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${ee()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${AI}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e8(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{depthRadius:o,bias:i,alpha:a,beta:u}=r;let l;o>16?l=new Z5(s.shape):l=new J5(s.shape,o);const c=[{type:"int32",data:[o]},{type:"float32",data:[i]},{type:"float32",data:[a]},{type:"float32",data:[u]}];return n.runWebGPUProgram(l,[s],s.dtype,c)}const t8={kernelName:Ny,backendName:"webgpu",kernelFunc:e8};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let n8=class{constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${ee("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r8(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,y:o,dy:i}=e,{depthRadius:a,bias:u,alpha:l,beta:c}=r,d=new n8(s.shape),h=[{type:"int32",data:[a]},{type:"float32",data:[u]},{type:"float32",data:[l]},{type:"float32",data:[c]}];return n.runWebGPUProgram(d,[s,o,i],s.dtype,h)}const s8={kernelName:BS,backendName:"webgpu",kernelFunc:r8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o8=$t({opType:ye.MAX,cpuKernelImpl:LG}),i8={kernelName:Ey,backendName:"webgpu",kernelFunc:o8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a8(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:u}=r,c=ir(s.shape,o,i,1,a,u);return bI(s,c,"max",n)}const u8={kernelName:Ry,backendName:"webgpu",kernelFunc:a8};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l8(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:o,strides:i,pad:a,dataFormat:u,dimRoundingMode:l}=r,c=[1,1,1],d=gs(s.shape,o,i,c,a,l,u),h=new G0(d,"max"),p=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];return n.runWebGPUProgram(h,[s],s.dtype,p)}const c8={kernelName:_y,backendName:"webgpu",kernelFunc:l8};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let d8=class{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${ee("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},h8=class{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${ee("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p8(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,i=o,{filterSize:a,strides:u,pad:l,dimRoundingMode:c}=r,d=[1,1,1],h=gs(i.shape,a,u,d,l,c),p=new G0(h,"max",!0);let f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.front,h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inDepth,h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]}];const y=n.runWebGPUProgram(p,[i],"int32",f),x=new h8(h);f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterDepth-1-h.padInfo.front,h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outDepth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]}];const g=n.runWebGPUProgram(x,[s,y],i.dtype,f);return n.disposeData(y.dataId),g}const f8={kernelName:VS,backendName:"webgpu",kernelFunc:p8};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m8(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o,output:i}=e,a=o;hI([o,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,h=ir(a.shape,u,l,1,c,d),p=new Wu(h,"max",!0);let f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]},{type:"int32",data:[h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterHeight,h.effectiveFilterWidth]}];const y=n.runWebGPUProgram(p,[a],"int32",f),x=new d8(h);f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]},{type:"int32",data:[h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]}];const g=n.runWebGPUProgram(x,[s,y],a.dtype,f);return n.disposeData(y.dataId),g}const g8={kernelName:MS,backendName:"webgpu",kernelFunc:m8};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y8(t){const{inputs:e,backend:n,attrs:r}=t,{filterSize:s,strides:o,pad:i,includeBatchInIndex:a}=r,{x:u}=e;T(u.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${u.shape.length}.`);const l=[1,1];T(qt(o,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);const c=ir(u.shape,s,o,l,i),d=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]}];let h=new Wu(c,"max",!1);const p=n.runWebGPUProgram(h,[u],u.dtype,d);h=new Wu(c,"max",!0,!0,a);const f=n.runWebGPUProgram(h,[u],"int32",d);return[p,f]}const x8={kernelName:Py,backendName:"webgpu",kernelFunc:y8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v8(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:i}=r;return ri(s,o,i,"min",n)}const w8={kernelName:Dy,backendName:"webgpu",kernelFunc:v8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b8=$t({opType:ye.MIN,cpuKernelImpl:zG}),C8={kernelName:Oy,backendName:"webgpu",kernelFunc:b8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let S8=class{constructor(e,n,r){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n.map((s,o)=>s[0]+e[o]+s[1]),this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,n.map((s,o)=>{this.uniforms+=` pad${o} : vec2<i32>,`}),this.offset=r==="reflect"?0:1,this.shaderKey=`mirrorPad_${r}`}getUserCode(){const e=this.xShape.length,n=this.xShape.map((l,c)=>`uniforms.pad${c}[0]`).join(","),r=this.xShape.map((l,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),s=e===1?"start":"start[i]",o=e===1?"end":"end[i]",i=e===1?"outC":"outC[i]",a=pt(e),u=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${ee("index")} {
        if (index < uniforms.size) {
          let start = ${a}(${n});
          let end = ${a}(${r});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${i} < ${s}) {
              ${i} = ${s} * 2 - ${i} - ${this.offset};
            } else if(${i} >= ${o}) {
              ${i} = (${o} - 1) * 2 - ${i} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${u}));
        }
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $8={kernelName:Fy,backendName:"webgpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{paddings:s,mode:o}=e,i=n,a=s.map(c=>({type:"int32",data:[c[0],c[1]]})),u=new S8(r.shape,s,o);return i.runWebGPUProgram(u,[r],r.dtype,a)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k8=$t({opType:ye.MOD}),I8={kernelName:Ly,backendName:"webgpu",kernelFunc:k8};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let N8=class{constructor(e,n){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,n],this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${ee("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T8{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`
    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;
    var<workgroup> rowMaxShared : f32;
    var<workgroup> rowSumShared : f32;
    const blockSize = ${this.workgroupSize[0]};
    ${ee("index")} {
      let row = index / blockSize;
      let tid = i32(localId.x);
      let cols = uniforms.outShape[1];

      var threadMax = -3.402823e+38f;
      for (var col = tid; col < cols; col += blockSize) {
        let value = getLogits(row, col);
        threadMax = max(threadMax, value);
      }
      if (tid < cols) {
        buf[tid] = threadMax;
      }
      workgroupBarrier();

      var reduceSize = min(cols, blockSize);
      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
        reduceSize = currSize + (reduceSize & 1);
        if (tid < currSize) {
          buf[tid] = max(buf[tid], buf[tid + reduceSize]);
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowMaxShared = buf[0];
      }
      workgroupBarrier();

      var threadSum = 0.0;
      for (var col = tid; col < cols; col += blockSize) {
        let subExp = exp(getLogits(row, col) - rowMaxShared);
        threadSum += subExp;
      }
      buf[tid] = threadSum;
      workgroupBarrier();

      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {
        if (tid < currSize) {
          buf[tid] = buf[tid] + buf[tid + currSize];
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowSumShared = buf[0];
      }
      workgroupBarrier();

      for (var col = tid; col < cols; col += blockSize) {
        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;
        setOutputAtCoords(row, col, value);
      }
  }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DI(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{dim:o}=r,i=he({inputs:{x:s},backend:n,attrs:{shape:[U(s.shape)/s.shape[o],s.shape[o]]}}),a=new T8(i.shape),u=n.runWebGPUProgram(a,[i],s.dtype),l=he({inputs:{x:u},backend:n,attrs:{shape:s.shape}});return n.disposeData(i.dataId),n.disposeData(u.dataId),l}const E8={kernelName:Sx,backendName:"webgpu",kernelFunc:DI};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R8(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{numSamples:o,seed:i,normalized:a}=r,u=a?s:DI({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],d=new N8(l,o),h=[{type:"float32",data:[i]},{type:"int32",data:[c]}],p=n.runWebGPUProgram(d,[u],"int32",h);return a||n.disposeData(u.dataId),p}const _8={kernelName:zy,backendName:"webgpu",kernelFunc:R8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P8(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])){const o=n.tensorMap.get(r.dataId),[i,a]=MG(o.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,i)}const s=new ma(r.shape,J.NEG);return n.runWebGPUProgram(s,[r],r.dtype)}const A8={kernelName:My,backendName:"webgpu",kernelFunc:P8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D8(t){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u}=r,l=n.readSync(s.dataId),c=n.readSync(o.dataId),{selectedIndices:d}=a0(l,c,i,a,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}const O8={kernelName:Wy,backendName:"webgpu",kernelFunc:D8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F8(t){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(s.dataId),d=n.readSync(o.dataId),h=i,p=a,f=u,y=l,{selectedIndices:x,selectedScores:g}=u0(c,d,h,p,f,y);return[n.makeTensorInfo([x.length],"int32",new Int32Array(x)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const L8={kernelName:Uy,backendName:"webgpu",kernelFunc:F8};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let z8=class{constructor(e,n){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,n],this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${ee("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B8(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{dtype:o,depth:i,onValue:a,offValue:u}=r,l=U(s.shape),c=new z8(l,i),d=he({inputs:{x:s},backend:n,attrs:{shape:[l]}}),h=[{type:"float32",data:[a]},{type:"float32",data:[u]}],p=n.runWebGPUProgram(c,[d],o,h);n.disposeData(d.dataId);const f=[...s.shape,i],y=he({inputs:{x:p},backend:n,attrs:{shape:f}});return n.disposeData(p.dataId),y}const M8={kernelName:Hy,backendName:"webgpu",kernelFunc:B8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function id(t){const{inputs:e,backend:n}=t,{x:r}=e;if(r.dtype==="complex64"){const s=ul({inputs:{input:r},backend:n}),o=id({inputs:{x:s},backend:n}),i=qd({inputs:{input:r},backend:n}),a=id({inputs:{x:i},backend:n}),u=ni({inputs:{real:o,imag:a},backend:n});return n.disposeData(s.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),n.disposeData(a.dataId),u}else return tn({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:n})}const V8={kernelName:Lx,backendName:"webgpu",kernelFunc:id};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OI(t){const{inputs:e,backend:n}=t,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){const s=ul({inputs:{input:r},backend:n}),o=OI({inputs:{x:s},backend:n}),i=qd({inputs:{input:r},backend:n}),a=id({inputs:{x:i},backend:n}),u=ni({inputs:{real:o,imag:a},backend:n});return n.disposeData(s.dataId),n.disposeData(o.dataId),n.disposeData(i.dataId),n.disposeData(a.dataId),u}else return tn({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}const W8={kernelName:Gy,backendName:"webgpu",kernelFunc:OI};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U8(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r;if(e.length===1)return Jf({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const o=e[0].shape,i=e[0].dtype;e.forEach(c=>{kn(o,c.shape,"All tensors passed to stack must have matching shapes"),T(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],u=e.map(c=>{const d=Jf({inputs:{input:c},backend:n,attrs:{dim:s}});return a.push(d),d}),l=$I({inputs:u,backend:n,attrs:{axis:s}});return a.forEach(c=>n.disposeData(c.dataId)),l}const G8={kernelName:jy,backendName:"webgpu",kernelFunc:U8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FI(t,e=!1){const n=t.length,r=pt(n),s=t.map((d,h)=>`uniforms.pad${h}[0]`).join(","),o=t.map((d,h)=>`uniforms.pad${h}[0] + uniforms.xShape${n>1?`[${h}]`:""}`).join(","),i=n>1?`${r}(${s})`:`${s}`,a=n>1?`${r}(${o})`:`${o}`,u=n>1?"any(paddedCoords < start)":"paddedCoords < start",l=n>1?"any(paddedCoords >= end)":"paddedCoords >= end",c=n>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n):"coords";return`
        let start = ${i};
        let end = ${a};
        if (${u} || ${l}) {
          setOutputAtIndex(index, ${e?0:"uniforms.constantValue"});
        } else {
          let coords = paddedCoords - start;
          setOutputAtIndex(index, getX(${c}));
        }
  `}let H8=class{constructor(e,n){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n.map((r,s)=>r[0]+e[s]+r[1]),this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),n.map((r,s)=>{this.uniforms+=` pad${s} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){return`
      ${ee("index")} {
        if (index < uniforms.size) {
          let paddedCoords = getCoordsFromIndex(index);
          ${FI(this.xShape)}
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j8=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:o,constantValue:i}=r;if(o.every(l=>ze(l,[0,0])))return Sn({inputs:{x:s},backend:n});if(U(s.shape)===0){const l=o.map((c,d)=>c[0]+s.shape[d]+c[1]);return tn({backend:n,attrs:{shape:l,value:i,dtype:s.dtype}})}const a=[{type:"float32",data:[i]}];o.map(l=>a.push({type:"int32",data:[l[0],l[1]]}));const u=new H8(s.shape,o);return n.runWebGPUProgram(u,[s],s.dtype,a)},K8={kernelName:Ky,backendName:"webgpu",kernelFunc:j8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X8=$t({opType:ye.POW}),q8={kernelName:Xy,backendName:"webgpu",kernelFunc:X8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y8(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e,o=new rd(ye.PRELU,r.shape,s.shape);return n.runWebGPUProgram(o,[r,s],"float32")}const Q8={kernelName:qy,backendName:"webgpu",kernelFunc:Y8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z8(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:i}=r;return ri(s,o,i,"prod",n)}const J8={kernelName:Yy,backendName:"webgpu",kernelFunc:Z8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eK=t=>{const{backend:e,attrs:n}=t,{start:r,stop:s,step:o,dtype:i}=n,a=UG(r,s,o,i);return e.makeTensorInfo([a.length],i,a)},tK={kernelName:Qy,backendName:"webgpu",kernelFunc:eK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nK=$t({opType:ye.DIV}),rK={kernelName:qg,backendName:"webgpu",kernelFunc:nK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sK=Ae({opType:J.RECIPROCAL}),oK={kernelName:Jy,backendName:"webgpu",kernelFunc:sK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iK=Ae({opType:J.RELU}),aK={kernelName:ex,backendName:"webgpu",kernelFunc:iK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uK=Ae({opType:J.RELU6}),lK={kernelName:sx,backendName:"webgpu",kernelFunc:uK};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let cK=class{constructor(e,n,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],n,r,e[3]],this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${ee("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dK(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:o,size:i,halfPixelCenters:a}=r,[u,l]=i,c=o&&u>1?1:0,d=o&&l>1?1:0,p=[{type:"float32",data:[c,d]},{type:"float32",data:[a?.5:0]}],f=new cK(s.shape,u,l);return n.runWebGPUProgram(f,[s],"float32",p)}const hK={kernelName:rx,backendName:"webgpu",kernelFunc:dK};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let pK=class{constructor(e,n){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=n,this.shaderKey=`resizeBilinearBackprop_${n}`}getUserCode(){return`
      ${ee("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fK(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:o}=e,{alignCorners:i}=r,[,a,u]=s.shape,[,l,c]=o.shape,d=[i&&l>1?a-1:a,i&&c>1?u-1:u],h=[i&&l>1?l-1:l,i&&c>1?c-1:c],p=d[0]/h[0],f=d[1]/h[1],y=1/p,x=1/f,g=Math.ceil(y)*2+2,v=Math.ceil(x)*2+2,b=new pK(s.shape,i),S=[{type:"int32",data:d},{type:"int32",data:h},{type:"float32",data:[p]},{type:"float32",data:[f]},{type:"float32",data:[y]},{type:"float32",data:[x]},{type:"int32",data:[g]},{type:"int32",data:[v]}];return n.runWebGPUProgram(b,[o],o.dtype,S)}const mK={kernelName:KS,backendName:"webgpu",kernelFunc:fK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let gK=class{constructor(e,n,r,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],n,r,e[3]],this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=s,this.shaderKey=`resizeNearest_${s}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${ee("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yK(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:o,halfPixelCenters:i,size:a}=r,[u,l]=a,c=o&&u>1?1:0,d=o&&l>1?1:0,p=[{type:"float32",data:[c,d]},{type:"float32",data:[o?.5:0]}],f=new gK(s.shape,u,l,i);return n.runWebGPUProgram(f,[s],s.dtype,p)}const xK={kernelName:nx,backendName:"webgpu",kernelFunc:yK};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let vK=class{constructor(e,n){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=n,this.shaderKey=`resizeNearestNeigborBackprop_${n}`}getUserCode(){return`
      ${ee("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wK(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:o}=e,{alignCorners:i}=r,[,a,u]=s.shape,[,l,c]=o.shape,d=[i&&l>1?a-1:a,i&&c>1?u-1:u],h=[i&&l>1?l-1:l,i&&c>1?c-1:c],p=d[0]/h[0],f=d[1]/h[1],y=1/p,x=1/f,g=Math.ceil(y)*2+2,v=Math.ceil(x)*2+2,b=new vK(s.shape,i),S=[{type:"int32",data:d},{type:"int32",data:h},{type:"float32",data:[y]},{type:"float32",data:[x]},{type:"int32",data:[g]},{type:"int32",data:[v]}];return n.runWebGPUProgram(b,[o],o.dtype,S)}const bK={kernelName:jS,backendName:"webgpu",kernelFunc:wK};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let CK=class{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`
      
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    
      ${ee("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SK(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:o}=r,i=s.shape.length;if(i===0)return Sn({inputs:{x:s},backend:n});const a=s.shape,u=[1,1,1,1];a.forEach((x,g)=>{const v=g+4-i;u[v]=x});const l=Je(o,s.shape),c=[0,0,0,0];l.forEach(x=>{const g=x+4-i;c[g]=1});const d=[{type:"int32",data:c}],h=he({inputs:{x:s},backend:n,attrs:{shape:u}}),p=new CK(u),f=n.runWebGPUProgram(p,[h],h.dtype,d);n.disposeData(h.dataId);const y=he({inputs:{x:f},backend:n,attrs:{shape:a}});return n.disposeData(f.dataId),y}const $K={kernelName:ox,backendName:"webgpu",kernelFunc:SK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let kK=class{constructor(e,n){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof n=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${ee("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IK={kernelName:Bx,backendName:"webgpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:o,center:i}=e,a=n,u=new kK(r.shape,o),[l,c]=C0(i,r.shape[1],r.shape[2]),d=[{type:"float32",data:[l]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(s)]},{type:"float32",data:[Math.cos(s)]}];return typeof o=="number"?d.push({type:"float32",data:[Number.parseFloat(o.toFixed(2))]}):d.push({type:"float32",data:o}),a.runWebGPUProgram(u,[r],r.dtype,d)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NK=Ae({opType:J.ROUND}),TK={kernelName:ix,backendName:"webgpu",kernelFunc:NK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EK=Ae({opType:J.RSQRT,cpuKernelImpl:GG}),RK={kernelName:ax,backendName:"webgpu",kernelFunc:EK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let pu=class{constructor(e,n,r,s,o,i,a,u=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=i,this.type=a,this.sumDupeIndices=u,this.dispatchLayout=ae(e),this.dispatch=te(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=n>1,this.shaderKey=`scatter_${r}_${s}_${this.sliceDimGreaterThanOne}_${a}_${u}_${o.length}`;const l=pt(o.length);this.uniforms=`sliceDim : i32, strides: ${l}, updatesSize: i32,`,this.updatesRank=s,this.indicesRank=r}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");const n=`getIndices(${e})`,r=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let s="",o="";this.dispatchLayout.x.length===1?(s="flattenedIndex",o=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(s="vec2<i32>(flattenedIndex, coords[1])",o=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);const a=`getUpdates(${Array.from({length:this.updatesRank},(l,c)=>`coords[${c}]`).join(", ")})`;return`
    ${o}
      ${ee("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${n}));
            flattenedIndex = flattenedIndex + indexInside * ${r};
          }
          let updateValue =
              ${wo(this.type)}(${a});
          let flatIndex = getOutputIndexFromCoords(${s});

          ${this.sumDupeIndices?so("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _K(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s,updates:o}=e,{shape:i}=r,{sliceRank:a,numUpdates:u,sliceSize:l,strides:c,outputSize:d}=Zo(o,s,i),h=[d/l,l];if(d===0)return n.makeTensorInfo(i,s.dtype);const p=he({inputs:{x:s},backend:n,attrs:{shape:[u,a]}}),f=he({inputs:{x:o},backend:n,attrs:{shape:[u,l]}}),y=f.dtype,x=tn({backend:n,attrs:{shape:h,value:0,dtype:y}}),g=U(f.shape),v=[{type:"int32",data:[a]},{type:"int32",data:c},{type:"int32",data:[g]}],b=new pu(f.shape,a,p.shape.length,f.shape.length,c,h,y),S=n.runWebGPUProgram(b,[f,p],y,v,x),I=he({inputs:{x:S},backend:n,attrs:{shape:i}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(S.dataId),I}const PK={kernelName:ux,backendName:"webgpu",kernelFunc:_K};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let AK=class{constructor(e,n){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=n,this.shaderKey=`search_sorted_${n}`}getUserCode(){return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${this.side==="left"?"<":"<="} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${ee("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DK(t){const{inputs:e,backend:n,attrs:r}=t,{sortedSequence:s,values:o}=e,{side:i}=r,a=new AK([o.shape[0],o.shape[1]],i),u=[{type:"int32",data:[s.shape[1]]}];return n.runWebGPUProgram(a,[s,o],"int32",u)}const OK={kernelName:cx,backendName:"webgpu",kernelFunc:DK};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let FK=class{constructor(e,n,r){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=r,this.shaderKey="select"}getUserCode(){let e,n;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)n="resRC",e="resRC";else{const s=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],i=[];for(let a=0;a<this.outputShape.length;a++)i.push(`${s[a]}`),a<this.cRank&&o.push(`${s[a]}`);e=o.join(),n=i.join()}return`
      ${ee("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${n}));
          } else {
            setOutputAtIndex(index, getB(${n}));
          }
        }
      }
    `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LK(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:o}=e,i=new FK(r.shape.length,s.shape,s.shape.length);return n.runWebGPUProgram(i,[r,s,o],nn(s.dtype,o.dtype))}const zK={kernelName:dx,backendName:"webgpu",kernelFunc:LK};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BK=Ae({opType:J.SELU}),MK={kernelName:hx,backendName:"webgpu",kernelFunc:BK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VK=Ae({opType:J.SIGMOID}),WK={kernelName:yx,backendName:"webgpu",kernelFunc:VK};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UK=Ae({opType:J.SIGN}),GK={kernelName:gx,backendName:"webgpu",kernelFunc:UK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HK=Ae({opType:J.SIN}),jK={kernelName:fx,backendName:"webgpu",kernelFunc:HK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KK=Ae({opType:J.SINH}),XK={kernelName:mx,backendName:"webgpu",kernelFunc:KK};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qK=Ae({opType:J.SOFTPLUS}),YK={kernelName:xx,backendName:"webgpu",kernelFunc:qK};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QK{constructor(e,n,r,s,o,i){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;const a=new Array(s.length);for(let u=0;u<a.length;u++)a[u]=s[o[u]];this.outputShape=a,this.newDim=o,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=n,this.uniforms+=`reshapedPaddedXShape : ${pt(s.length)}, paddedXShapeStrides : ${pt(i)}, `,r.map((u,l)=>{this.uniforms+=` pad${l} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${o}`}getUserCode(){const e=pt(this.outputShape.length),n=yI(this.newDim);return`
      ${mc(this.paddedXShape,"PaddedX")}
      ${ee("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${e}(${n}), uniforms.reshapedPaddedXShape);
          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);
          ${FI(this.xShape,!0)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZK=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:o,paddings:i}=r;T(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");const a=o.reduce((v,b)=>v*b),u=[[0,0]];u.push(...i);for(let v=1+o.length;v<s.shape.length;++v)u.push([0,0]);const l=u.map((v,b)=>v[0]+s.shape[b]+v[1]),c=ol(l,o,a,!1),d=il(c.length,o.length,!1),h=al(l,o,a,!1),p=lt(l),f=new QK(s.shape,l,u,c,d,p.length),y=[{type:"int32",data:c},{type:"int32",data:p}];u.map(v=>y.push({type:"int32",data:[v[0],v[1]]}));const x=n.runWebGPUProgram(f,[s],s.dtype,y),g=he({inputs:{x},backend:n,attrs:{shape:h}});return n.disposeData(x.dataId),g},JK={kernelName:bx,backendName:"webgpu",kernelFunc:ZK};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eX{constructor(e,n,r){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=r,this.dispatchLayout=ae([n]),this.dispatch=te(this.dispatchLayout,[n],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`
    ${ee("index")} {
      if (index < uniforms.sparseSize) {
        let indexInSegmentIds = index / uniforms.segmentSize;
        let indexInSegment = index % uniforms.segmentSize;
        let indexInInput = indices[indexInSegmentIds];
        let segmentId = segmentIds[indexInSegmentIds];

        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];
        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;
        ${so("&result[outIndex]","value",this.type)}
      }
    }
  `}}class tX{constructor(e,n){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=ae(n),this.dispatch=te(this.dispatchLayout,n,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`
    ${ee("index")} {
      if (index < uniforms.segmentIdsShape) {
        let segmentId = segmentIds[index];
        ${so("&result[segmentId]","1","int32")}
      }
    }
  `}}class nX{constructor(e,n){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=n,this.dispatchLayout=ae(e),this.dispatch=te(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`
    ${ee("index")} {
      if (index < uniforms.size) {
        let segmentId = index / uniforms.segmentSize;
        let count = sameSegmentIdCount[segmentId];
        if (count != 0) {
          ${this.type==="float32"?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LI(t,e,n,r=!1,s){const i=U(t.shape)/t.shape[0],a=t.dtype,u=U(e.shape),l=s.readSync(n.dataId),d=u>0?l[u-1]+1:0;let h;const p=t.shape.slice();p[0]=d;const f=u*i,y=tn({backend:s,attrs:{shape:p,value:0,dtype:a}});h=new eX(p,f,a);let x=[{type:"int32",data:[i]},{type:"int32",data:[f]}];const g=s.runWebGPUProgram(h,[t,e,n],a,x,y);if(r)return g;const v=tn({backend:s,attrs:{shape:[d],value:0,dtype:"int32"}});h=new tX(d,n.shape);const b=s.runWebGPUProgram(h,[n],"int32",null,v),S=tn({backend:s,attrs:{shape:p,value:0,dtype:a}});h=new nX(p,a),x=[{type:"int32",data:[i]}];const I=s.runWebGPUProgram(h,[g,b],a,x,S);return s.disposeData(g.dataId),s.disposeData(b.dataId),I}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rX(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:o}=e;return LI(r,s,o,!1,n)}const sX={kernelName:$x,backendName:"webgpu",kernelFunc:rX};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oX(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:o}=e;return LI(r,s,o,!0,n)}const iX={kernelName:kx,backendName:"webgpu",kernelFunc:oX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let aX=class{constructor(e,n){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;const r=new Array(e.length);for(let s=0;s<r.length;s++)r[s]=e[s]*n[s];this.outputShape=r,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){const e=uX(this.rank,"uniforms.");return`
      ${ee("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function uX(t,e=""){if(t>=5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`(resRC % ${e}aShape)`;const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<t;s++)r.push(`(${n[s]} % ${e}aShape[${s}])`);return r.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H0(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reps:o}=r;if(n.shouldExecuteOnCPU([s])||s.dtype==="string"||s.shape.length>=5){const u=n.readSync(s.dataId),l=s.dtype==="string"?u.map(h=>us(h)):u,c=Be(s.shape,s.dtype,l),d=QG(c,o);return n.makeTensorInfo(d.shape,d.dtype,d.values)}const i=new aX(s.shape,o);return n.runWebGPUProgram(i,[s],s.dtype)}const lX={kernelName:_d,backendName:"webgpu",kernelFunc:H0};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cX(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:s,sparseValues:o,defaultValue:i}=e,{outputShape:a}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:d,outputSize:h}=Zo(o,s,a),p=!1;if(o.dtype==="string"){const _=n.bufferSync(s),L=n.bufferSync(o),F=us(n.readSync(i.dataId)[0]),V=HG(_,L,a,h,c,l,u,d,F,p);return n.makeTensorInfo(a,V.dtype,V.values)}const f=[h/c,c],y=he({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),x=o.shape.length?he({inputs:{x:o},backend:n,attrs:{shape:[l,c]}}):Sn({inputs:{x:o},backend:n}),g=x.dtype,v=n.makeTensorInfo([],g,as(1,g)),b=he({inputs:{x:i},backend:n,attrs:{shape:Array(f.length).fill(1)}}),S=H0({inputs:{x:b},backend:n,attrs:{reps:f}}),I=U([l,c]),E=[{type:"int32",data:[u]},{type:"int32",data:d},{type:"int32",data:[I]}];switch(l){case 0:break;case 1:{const _=new pu([l,c],u,y.shape.length,x.shape.length,d,f,g,p);n.runWebGPUProgram(_,[x,y],g,E,S)}break;default:{const _=new pu([l,c],u,y.shape.length,v.shape.length,d,f,g,p);n.runWebGPUProgram(_,[v,y],g,E,S)}{const _=new pu([l,c],u,y.shape.length,x.shape.length,d,f,g);n.runWebGPUProgram(_,[x,y],g,E,S)}}const R=he({inputs:{x:S},backend:n,attrs:{shape:a}});return n.disposeData(y.dataId),n.disposeData(x.dataId),n.disposeData(b.dataId),n.disposeData(v.dataId),n.disposeData(S.dataId),R}const dX={kernelName:Ix,backendName:"webgpu",kernelFunc:cX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hX(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{numOrSizeSplits:o,axis:i}=r,a=Je(i,s.shape)[0],u=z0(s,o,a),l=s.shape.length,c=new Array(l).fill(0),d=s.shape.slice();return u.map(h=>{const p=[...d];p[a]=h;const f=ga({inputs:{x:s},backend:n,attrs:{begin:c,size:p}});return c[a]+=h,f})}const pX={kernelName:Cx,backendName:"webgpu",kernelFunc:hX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fX=Ae({opType:J.SQRT}),mX={kernelName:vx,backendName:"webgpu",kernelFunc:fX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gX={kernelName:YS,backendName:"webgpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e,s=new ma(n.shape,J.SQUARE);return r.runWebGPUProgram(s,[n],n.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yX=$t({opType:ye.SQUARED_DIFFERENCE}),xX={kernelName:Nx,backendName:"webgpu",kernelFunc:yX};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vX({inputs:t,attrs:e,backend:n}){const{x:r}=t,s=new ma(r.shape,J.STEP,"stepAlpha : f32,"),o=[{type:"float32",data:[e.alpha]}];return n.runWebGPUProgram(s,[r],r.dtype,o)}const wX={kernelName:zx,backendName:"webgpu",kernelFunc:vX};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bX=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);const n=pt(this.outputShape.length);this.uniforms=`begin : ${n},  strides : ${n}, `,this.shaderKey="stridedSlice"}getUserCode(){const e=this.outputShape.length;let n="";if(e===1)n="coords * uniforms.strides + uniforms.begin";else{let s=0;n=this.outputShape.map((o,i)=>(s++,this.outputShape.length===1?`coords * uniforms.strides[${i}] + uniforms.begin[${i}]`:`coords[${s-1}] * uniforms.strides[${i}] + uniforms.begin[${i}]`)).join(",")}return`
       ${ee("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${n}));
         }
       }
     `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CX(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:o,end:i,strides:a,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=r,{finalShapeSparse:p,finalShape:f,isIdentity:y,sliceDim0:x,isSimpleSlice:g,begin:v,end:b,strides:S}=v0(s.shape,o,i,a,u,l,c,d,h);let I;if(y)I=he({inputs:{x:s},backend:n,attrs:{shape:f}});else if(x||g){T(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const E=m0(v,b,S),R=ga({inputs:{x:s},backend:n,attrs:{begin:v,size:E}});I=he({inputs:{x:R},backend:n,attrs:{shape:f}}),n.disposeData(R.dataId)}else if(n.shouldExecuteOnCPU([s])){const R=n.readSync(s.dataId),_=Be(s.shape,s.dtype,R),L=XG(p,_,S,v);I=n.makeTensorInfo(f,s.dtype,L.values)}else{const R=new bX(p),_=[{type:"int32",data:v},{type:"int32",data:S}],L=n.runWebGPUProgram(R,[s],s.dtype,_);I=he({inputs:{x:L},backend:n,attrs:{shape:f}}),n.disposeData(L.dataId)}return I}const SX={kernelName:Tx,backendName:"webgpu",kernelFunc:CX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $X(t){const{inputs:e,backend:n,attrs:r}=t,{separator:s,nGramWidths:o,leftPad:i,rightPad:a,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:d}=e,h=n.readSync(c.dataId),p=n.readSync(d.dataId),[f,y]=qG(h,p,s,o,i,a,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",y)]}const kX={kernelName:Ex,backendName:"webgpu",kernelFunc:$X};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IX=$t({opType:ye.SUB,cpuKernelImpl:YG,supportsComplex:!0}),NX={kernelName:Rx,backendName:"webgpu",kernelFunc:IX};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TX=Ae({opType:J.TAN}),EX={kernelName:_x,backendName:"webgpu",kernelFunc:TX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RX=Ae({opType:J.TANH}),_X={kernelName:Px,backendName:"webgpu",kernelFunc:RX};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PX(t){const{inputs:e,backend:n,attrs:r}=t,{tensor:s,indices:o,updates:i}=e,{sliceRank:a,numUpdates:u,sliceSize:l,strides:c,outputSize:d}=Zo(i,o,s.shape),h=[d/l,l];if(d===0)return n.makeTensorInfo(s.shape,o.dtype);const p=[],f=he({inputs:{x:o},backend:n,attrs:{shape:[u,a]}});p.push(f);const y=he({inputs:{x:i},backend:n,attrs:{shape:[u,l]}});p.push(y);const x=he({inputs:{x:s},backend:n,attrs:{shape:h}});p.push(x);const g=H0({inputs:{x},backend:n,attrs:{reps:Array(h.length).fill(1)}}),v=new pu([u,l],a,f.shape.length,y.shape.length,c,h,s.dtype,!1),b=U([u,l]),S=[{type:"int32",data:[a]},{type:"int32",data:c},{type:"int32",data:[b]}],I=n.runWebGPUProgram(v,[y,f],x.dtype,S,g);p.push(I);const E=he({inputs:{x:I},backend:n,attrs:{shape:s.shape}});return p.forEach(R=>n.disposeData(R.dataId)),E}const AX={kernelName:lx,backendName:"webgpu",kernelFunc:PX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let DX=class{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${ee("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},OX=class{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${ee("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pi(t,e){e!==null&&t.disposeData(e.dataId)}function i2(t){let e=1;for(;e<t;)e*=2;return e}function FX(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{k:o,sorted:i}=r,a=s.shape,u=a[a.length-1];if(n.shouldExecuteOnCPU([s])){const I=n.readSync(s.dataId),[E,R]=ZG(I,a,s.dtype,o,i);return[n.makeTensorInfo(E.shape,E.dtype,E.values),n.makeTensorInfo(R.shape,R.dtype,R.values)]}if(o===0)return a[a.length-1]=0,[n.makeTensorInfo(a,s.dtype,[]),n.makeTensorInfo(a,"int32",[])];if(u===1)return[s,tn({attrs:{shape:a,dtype:"int32",value:0},backend:n})];const c=U(a)/u,d=he({inputs:{x:s},attrs:{shape:[c,u]},backend:n}),h=i2(o),p=i2(u);let f=null;const y=()=>f===null?[d,d]:[d,f],x=(I,E,R)=>{const _=y(),L=new DX(R),V=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[I]},{type:"int32",data:[E]}],j=f;f=n.runWebGPUProgram(L,_,"int32",V),pi(n,j)};for(let I=1;I<h;I*=2){const E=I*2;for(let R=I;R>=1;R/=2)x(E,R,[c,p])}for(let I=p;I>h;I/=2){const E=y(),R=new OX([c,I/2]),L=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[h]}],F=f;f=n.runWebGPUProgram(R,E,"int32",L),pi(n,F);const V=h/2,j=V*2;for(let K=V;K>=1;K/=2)x(j,K,f.shape)}let g=f;f=ga({inputs:{x:f},backend:n,attrs:{begin:0,size:[c,o]}}),pi(n,g);let v=PI({inputs:{x:d,indices:f},backend:n,attrs:{axis:1,batchDims:1}});pi(n,d);const b=a.slice(0,-1);b.push(o),g=f,f=he({inputs:{x:f},attrs:{shape:b},backend:n}),pi(n,g);const S=v;return v=he({inputs:{x:v},attrs:{shape:b},backend:n}),pi(n,S),[v,f]}const LX={kernelName:Ax,backendName:"webgpu",kernelFunc:FX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let zX=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${ee("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BX(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,transforms:o}=e,{interpolation:i,fillMode:a,fillValue:u,outputShape:l}=r,[c,d,h,p]=s.shape,[f,y]=l??[d,h],x=[c,f,y,p],g=new zX(x),v=i==="nearest"?1:2;let b;switch(a){case"constant":b=1;break;case"reflect":b=2;break;case"wrap":b=3;break;case"nearest":b=4;break;default:b=1;break}const S=[{type:"int32",data:[v]},{type:"int32",data:[b]},{type:"float32",data:[u]}];return n.runWebGPUProgram(g,[s,o],"float32",S)}const MX={kernelName:Dx,backendName:"webgpu",kernelFunc:BX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VX(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:o}=r;o<0&&(o+=s.shape.length);const i=s,a=i.shape.length,u=s.shape[o],l=new Array(a-1);let c=0;for(let y=0;y<a;y++)y!==o&&(l[c++]=i.shape[y]);const d=[],h=new Array(a).fill(0),p=i.shape.slice();p[o]=1;const f=new Array(u);for(let y=0;y<f.length;y++){h[o]=y;const x=ga({inputs:{x:i},backend:n,attrs:{begin:h,size:p}}),g=he({inputs:{x},backend:n,attrs:{shape:l}});f[y]=g,d.push(x)}return d.forEach(y=>n.disposeData(y.dataId)),f}const WX={kernelName:Ox,backendName:"webgpu",kernelFunc:VX};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UX{constructor(e,n,r){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=n,this.dispatchLayout=ae(e),this.dispatch=te(this.dispatchLayout,e,this.workgroupSize),r!=="float32"&&r!=="int32")throw new Error(`UnsortedSegmentSum only supports float32 and int32
              types, does not support ${r} type.`);this.type=r,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`
    ${ee("index")} {
      if (index < uniforms.xSize) {
        let coords = getXCoordsFromIndex(index);
        let b = coords[0];
        let inCol = coords[1];

        let segmentId = i32(getSegmentIds(inCol));
        if (segmentId >= 0) {
          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;
          let value = getX(b, inCol);

          ${so("&result[flatIndex]","value",this.type)}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GX(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,segmentIds:o}=e,{numSegments:i}=r,a=s.shape.length,u=[];let l=0;const c=Lt([l],a);let d=s;c!=null&&(d=Gr({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(d),l=zt(1,a)[0]);const h=B0(d.shape,l,i),p=U([d.shape[l]]),f=he({inputs:{x:d},backend:n,attrs:{shape:[-1,p]}});u.push(f);const y=s.dtype,x=[f.shape[0],i],g=tn({backend:n,attrs:{shape:x,value:0,dtype:y}}),v=new UX(f.shape,x,y),b=[{type:"int32",data:[i]},{type:"int32",data:[U(f.shape)]}],S=n.runWebGPUProgram(v,[f,o],y,b,g),I=he({inputs:{x:S},backend:n,attrs:{shape:h}});u.push(S);let E=I;if(c!=null){u.push(I);const R=sl(c);E=Gr({inputs:{x:E},backend:n,attrs:{perm:R}})}return u.forEach(R=>n.disposeData(R.dataId)),E}const HX={kernelName:Fx,backendName:"webgpu",kernelFunc:GX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jX=[pU,tH,rH,oH,aH,cH,yH,vH,bH,SH,kH,NH,EH,_H,AH,zH,MH,GH,jH,XH,JH,r6,i6,c6,h6,g6,mU,v6,S6,_6,L6,V6,G6,j6,X6,Y6,Z6,tj,rj,oj,aj,cj,yj,vj,pj,Cj,kj,Ej,_j,Dj,zj,Mj,Wj,Gj,jj,Xj,qj,Qj,Jj,cU,t5,a5,r5,o5,c5,h5,f5,y5,w5,C5,$5,fU,I5,b6,T5,R5,P5,D5,F5,z5,V5,H5,U5,K5,q5,Q5,t8,s8,OH,i8,u8,g8,c8,f8,x8,FH,w8,C8,$8,I8,_8,Oj,A8,O8,L8,a6,M8,W8,G8,K8,q8,Q8,J8,tK,u6,rK,oK,aK,lK,dU,hK,mK,xK,bK,$K,IK,TK,RK,PK,OK,zK,MK,WK,GK,jK,XK,QH,wX,SX,kX,E8,YK,JK,sX,iX,dX,pX,mX,gX,xX,NX,Fj,EX,_X,AX,lX,LX,MX,pH,WX,HX,V8];for(const t of jX)t$(t);/**
    * @license
    * Copyright 2023 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */var zI=function(t,e){return(zI=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,r){n.__proto__=r}||function(n,r){for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(n[s]=r[s])})(t,e)};function BI(t,e){if(typeof e!="function"&&e!==null)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}zI(t,e),t.prototype=e===null?Object.create(e):(n.prototype=e.prototype,new n)}var He=function(){return(He=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var s in e=arguments[n])Object.prototype.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t}).apply(this,arguments)};function _e(t,e,n,r){return new(n||(n=Promise))(function(s,o){function i(l){try{u(r.next(l))}catch(c){o(c)}}function a(l){try{u(r.throw(l))}catch(c){o(c)}}function u(l){var c;l.done?s(l.value):(c=l.value,c instanceof n?c:new n(function(d){d(c)})).then(i,a)}u((r=r.apply(t,[])).next())})}function Pe(t,e){var n,r,s,o,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function a(u){return function(l){return function(c){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(s=2&c[0]?r.return:c[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,c[1])).done)return s;switch(r=0,s&&(c=[2&c[0],s.value]),c[0]){case 0:case 1:s=c;break;case 4:return i.label++,{value:c[1],done:!1};case 5:i.label++,r=c[1],c=[0];continue;case 7:c=i.ops.pop(),i.trys.pop();continue;default:if(s=i.trys,!((s=s.length>0&&s[s.length-1])||c[0]!==6&&c[0]!==2)){i=0;continue}if(c[0]===3&&(!s||c[1]>s[0]&&c[1]<s[3])){i.label=c[1];break}if(c[0]===6&&i.label<s[1]){i.label=s[1],s=c;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(c);break}s[2]&&i.ops.pop(),i.trys.pop();continue}c=e.call(t,i)}catch(d){c=[6,d],r=0}finally{n=s=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([u,l])}}}function To(t,e,n){if(n||arguments.length===2)for(var r,s=0,o=e.length;s<o;s++)!r&&s in e||(r||(r=Array.prototype.slice.call(e,0,s)),r[s]=e[s]);return t.concat(r||Array.prototype.slice.call(e))}var Hr=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],Gu=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"];function ad(t){return t instanceof SVGAnimatedLength?t.baseVal.value:t}function MI(t){return _e(this,void 0,void 0,function(){var e,n;return Pe(this,function(r){switch(r.label){case 0:return e=document.createElement("canvas"),t instanceof at?[4,h0(t,e)]:[3,2];case 1:return r.sent(),[3,3];case 2:e.width=ad(t.width),e.height=ad(t.height),n=e.getContext("2d"),t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0),r.label=3;case 3:return[2,e]}})})}function VI(t){return _e(this,void 0,void 0,function(){var e,n,r,s,o,i;return Pe(this,function(a){switch(a.label){case 0:return t instanceof at?(e=t.shape.slice(0,2),n=e[0],r=e[1],s=ImageData.bind,[4,h0(t)]):[3,2];case 1:return[2,new(s.apply(ImageData,[void 0,a.sent(),r,n]))];case 2:return o=document.createElement("canvas"),i=o.getContext("2d"),o.width=ad(t.width),o.height=ad(t.height),i.drawImage(t,0,0),[2,i.getImageData(0,0,o.width,o.height)]}})})}function KX(t){return _e(this,void 0,void 0,function(){var e,n;return Pe(this,function(r){switch(r.label){case 0:return t instanceof SVGImageElement||t instanceof OffscreenCanvas?[4,MI(t)]:[3,2];case 1:return n=r.sent(),[3,3];case 2:n=t,r.label=3;case 3:return e=n,[2,Ak(e,4)]}})})}function WI(t){if(t<0||t>=256)throw new Error("Mask value must be in range [0, 255] but got ".concat(t));if(!Number.isInteger(t))throw new Error("Mask value must be an integer but got ".concat(t))}var Ha={runtime:"mediapipe",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,modelType:"full"},XX=function(){function t(e){this.mask=e}return t.prototype.toCanvasImageSource=function(){return _e(this,void 0,void 0,function(){return Pe(this,function(e){return[2,this.mask]})})},t.prototype.toImageData=function(){return _e(this,void 0,void 0,function(){return Pe(this,function(e){return[2,VI(this.mask)]})})},t.prototype.toTensor=function(){return _e(this,void 0,void 0,function(){return Pe(this,function(e){return[2,KX(this.mask)]})})},t.prototype.getUnderlyingType=function(){return"canvasimagesource"},t}();function qX(t){return WI(t),"person"}var YX=function(){function t(e){var n,r=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new S3.Pose({locateFile:function(s,o){if(e.solutionPath){var i=e.solutionPath.replace(/\/+$/,"");return"".concat(i,"/").concat(s)}return"".concat(o,"/").concat(s)}}),e.modelType){case"lite":n=0;break;case"heavy":n=2;break;case"full":default:n=1}this.poseSolution.setOptions({modelComplexity:n,smoothLandmarks:e.enableSmoothing,enableSegmentation:e.enableSegmentation,smoothSegmentation:e.smoothSegmentation,selfieMode:this.selfieMode}),this.poseSolution.onResults(function(s){if(r.height=s.image.height,r.width=s.image.width,s.poseLandmarks==null)r.poses=[];else{var o=r.translateOutput(s.poseLandmarks,s.poseWorldLandmarks);s.segmentationMask&&(o.segmentation={maskValueToLabel:qX,mask:new XX(s.segmentationMask)}),r.poses=[o]}})}return t.prototype.translateOutput=function(e,n){var r=this,s={keypoints:e.map(function(o,i){return{x:o.x*r.width,y:o.y*r.height,z:o.z,score:o.visibility,name:Gu[i]}})};return n!=null&&(s.keypoints3D=n.map(function(o,i){return{x:o.x,y:o.y,z:o.z,score:o.visibility,name:Gu[i]}})),s},t.prototype.estimatePoses=function(e,n,r){return _e(this,void 0,void 0,function(){var s,o;return Pe(this,function(i){switch(i.label){case 0:return n&&n.flipHorizontal&&n.flipHorizontal!==this.selfieMode&&(this.selfieMode=n.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),e instanceof at?(o=ImageData.bind,[4,h0(e)]):[3,2];case 1:return s=new(o.apply(ImageData,[void 0,i.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:s=e,i.label=3;case 3:return e=s,[4,this.poseSolution.send({image:e},r)];case 4:return i.sent(),[2,this.poses]}})})},t.prototype.dispose=function(){this.poseSolution.close()},t.prototype.reset=function(){this.poseSolution.reset()},t.prototype.initialize=function(){return this.poseSolution.initialize()},t}();function QX(t){return _e(this,void 0,void 0,function(){var e,n;return Pe(this,function(r){switch(r.label){case 0:return e=function(s){if(s==null)return He({},Ha);var o=He({},s);return o.runtime="mediapipe",o.enableSegmentation==null&&(o.enableSegmentation=Ha.enableSegmentation),o.enableSmoothing==null&&(o.enableSmoothing=Ha.enableSmoothing),o.smoothSegmentation==null&&(o.smoothSegmentation=Ha.smoothSegmentation),o.modelType==null&&(o.modelType=Ha.modelType),o}(t),[4,(n=new YX(e)).initialize()];case 1:return r.sent(),[2,n]}})})}function ra(t){return t instanceof at?{height:t.shape[0],width:t.shape[1]}:{height:t.height,width:t.width}}function UI(t){return t-2*Math.PI*Math.floor((t+Math.PI)/(2*Math.PI))}function j0(t){return t instanceof at?t:Ak(t)}function GI(t,e,n){return em(n,"inputResolution"),[1/n.width*t[0][0]*e.width,1/n.height*t[0][1]*e.width,t[0][3]*e.width,1/n.width*t[1][0]*e.height,1/n.height*t[1][1]*e.height,t[1][3]*e.height,0,0]}function em(t,e){T(t.width!==0,function(){return"".concat(e," width cannot be 0.")}),T(t.height!==0,function(){return"".concat(e," height cannot be 0.")})}function ip(t,e,n){var r=n.rotationVectorStartKeypointIndex,s=n.rotationVectorEndKeypointIndex,o=t.locationData,i=o.relativeKeypoints[r].x*e.width,a=o.relativeKeypoints[r].y*e.height,u=o.relativeKeypoints[s].x*e.width,l=o.relativeKeypoints[s].y*e.height,c=2*Math.sqrt((u-i)*(u-i)+(l-a)*(l-a)),d=function(h,p,f){var y,x=h.locationData,g=f.rotationVectorStartKeypointIndex,v=f.rotationVectorEndKeypointIndex;y=f.rotationVectorTargetAngle?f.rotationVectorTargetAngle:Math.PI*f.rotationVectorTargetAngleDegree/180;var b=x.relativeKeypoints[g].x*p.width,S=x.relativeKeypoints[g].y*p.height,I=x.relativeKeypoints[v].x*p.width,E=x.relativeKeypoints[v].y*p.height;return UI(y-Math.atan2(-(E-S),I-b))}(t,e,n);return{xCenter:i/e.width,yCenter:a/e.height,width:c/e.width,height:c/e.height,rotation:d}}function HI(t){if(t.length!==16)throw new Error("Array length must be 16 but got ".concat(t.length));return[[t[0],t[1],t[2],t[3]],[t[4],t[5],t[6],t[7]],[t[8],t[9],t[10],t[11]],[t[12],t[13],t[14],t[15]]]}function ap(t,e,n,r,s,o,i){return t[e][s]*(t[n][o]*t[r][i]-t[n][i]*t[r][o])}function Wt(t,e,n){var r=(e+1)%4,s=(e+2)%4,o=(e+3)%4,i=(n+1)%4,a=(n+2)%4,u=(n+3)%4;return ap(t,r,s,o,i,a,u)+ap(t,s,o,r,i,a,u)+ap(t,o,r,s,i,a,u)}function a2(t,e,n){n===void 0&&(n={ignoreRotation:!1});for(var r=[],s=0,o=t;s<o.length;s++){var i=o[s],a=i.x-.5,u=i.y-.5,l=n.ignoreRotation?0:e.rotation,c=Math.cos(l)*a-Math.sin(l)*u,d=Math.sin(l)*a+Math.cos(l)*u;c=c*e.width+e.xCenter,d=d*e.height+e.yCenter;var h=i.z*e.width,p=He({},i);p.x=c,p.y=d,p.z=h,r.push(p)}return r}function jI(t,e){var n=function(r,s,o,i){var a=s-r,u=i-o,l=u/a;return{scale:l,offset:o-r*l}}(0,255,e[0],e[1]);return xe(function(){return fe(Y(t,n.scale),n.offset)})}function tm(t,e,n){var r,s,o,i,a,u,l,c,d,h,p,f,y,x,g=e.outputTensorSize,v=e.keepAspectRatio,b=e.borderMode,S=e.outputTensorFloatRange,I=ra(t),E=function(L,F){return F?{xCenter:F.xCenter*L.width,yCenter:F.yCenter*L.height,width:F.width*L.width,height:F.height*L.height,rotation:F.rotation}:{xCenter:.5*L.width,yCenter:.5*L.height,width:L.width,height:L.height,rotation:0}}(I,n),R=function(L,F,V){if(V===void 0&&(V=!1),!V)return{top:0,left:0,right:0,bottom:0};var j=F.height,K=F.width;em(F,"targetSize"),em(L,"roi");var Z,ne,ce=j/K,Ce=L.height/L.width,X=0,ie=0;return ce>Ce?(Z=L.width,ne=L.width*ce,ie=(1-Ce/ce)/2):(Z=L.height/ce,ne=L.height,X=(1-ce/Ce)/2),L.width=Z,L.height=ne,{top:ie,left:X,right:X,bottom:ie}}(E,g,v),_=(r=E,s=I.width,o=I.height,i=!1,a=r.width,u=r.height,l=i?-1:1,c=Math.cos(r.rotation),d=Math.sin(r.rotation),h=r.xCenter,p=r.yCenter,f=1/s,y=1/o,(x=new Array(16))[0]=a*c*l*f,x[1]=-u*d*f,x[2]=0,x[3]=(-.5*a*c*l+.5*u*d+h)*f,x[4]=a*d*l*y,x[5]=u*c*y,x[6]=0,x[7]=(-.5*u*c-.5*a*d*l+p)*y,x[8]=0,x[9]=0,x[10]=a*f,x[11]=0,x[12]=0,x[13]=0,x[14]=0,x[15]=1,HI(x));return{imageTensor:xe(function(){var L=j0(t),F=tr(GI(_,I,g),[1,8]),V=b==="zero"?"constant":"nearest",j=_o.transform(Pn(je(L,"float32")),F,"bilinear",V,0,[g.height,g.width]);return S!=null?jI(j,S):j}),padding:R,transformationMatrix:_}}function u2(t,e,n,r){return r===1?.5*(t+e):t+(e-t)*n/(r-1)}function ZX(t){return xe(function(){var e=function(s){return xe(function(){return[ke(s,[0,0,0],[1,-1,1]),ke(s,[0,0,1],[1,-1,-1])]})}(t),n=e[0],r=e[1];return{boxes:Ve(r),logits:Ve(n)}})}function KI(t){return t!=null&&t.currentTime!=null}function l2(t){for(var e={locationData:{relativeKeypoints:[]}},n=Number.MAX_SAFE_INTEGER,r=Number.MIN_SAFE_INTEGER,s=Number.MAX_SAFE_INTEGER,o=Number.MIN_SAFE_INTEGER,i=0;i<t.length;++i){var a=t[i];n=Math.min(n,a.x),r=Math.max(r,a.x),s=Math.min(s,a.y),o=Math.max(o,a.y),e.locationData.relativeKeypoints.push({x:a.x,y:a.y})}return e.locationData.relativeBoundingBox={xMin:n,yMin:s,xMax:r,yMax:o,width:r-n,height:o-s},e}function JX(t,e,n,r){return _e(this,void 0,void 0,function(){var s,o,i,a,u;return Pe(this,function(l){switch(l.label){case 0:return t.sort(function(c,d){return Math.max.apply(Math,d.score)-Math.max.apply(Math,c.score)}),s=tr(t.map(function(c){return[c.locationData.relativeBoundingBox.yMin,c.locationData.relativeBoundingBox.xMin,c.locationData.relativeBoundingBox.yMax,c.locationData.relativeBoundingBox.xMax]})),o=Dt(t.map(function(c){return c.score[0]})),[4,_o.nonMaxSuppressionAsync(s,o,e,n)];case 1:return[4,(i=l.sent()).array()];case 2:return a=l.sent(),u=t.filter(function(c,d){return a.indexOf(d)>-1}),Le([s,o,i]),[2,u]}})})}function XI(t,e){return t.map(function(n){var r=He(He({},n),{x:n.x*e.width,y:n.y*e.height});return n.z!=null&&(r.z=n.z*e.width),r})}function eq(t,e,n){return _e(this,void 0,void 0,function(){var r,s,o,i,a,u,l,c,d,h,p,f,y,x,g,v,b,S,I,E,R,_,L,F;return Pe(this,function(V){switch(V.label){case 0:if(r=Ve(e,[0]),s=r.shape,o=s[0],i=s[1],a=s[2],t.length!==a)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+"".concat(t.length,", heatmap length: ").concat(a));return u=[],[4,r.buffer()];case 1:for(l=V.sent(),c=0;c<t.length;c++)if(d=t[c],h=He({},d),u.push(h),p=Math.trunc(h.x*i),f=Math.trunc(h.y*o),!(p<0||p>=i||f<0||p>=o)){for(y=Math.trunc((n.kernelSize-1)/2),x=Math.max(0,p-y),g=Math.min(i,p+y+1),v=Math.max(0,f-y),b=Math.min(o,f+y+1),S=0,I=0,E=0,R=0,_=v;_<b;++_)for(L=x;L<g;++L)F=l.get(_,L,c),S+=F,R=Math.max(R,F),I+=L*F,E+=_*F;R>=n.minConfidenceToRefine&&S>0&&(h.x=I/i/S,h.y=E/o/S)}return r.dispose(),[2,u]}})})}function c2(t,e){var n=e.left,r=e.top,s=e.left+e.right,o=e.top+e.bottom;return t.map(function(i){return He(He({},i),{x:(i.x-n)/(1-s),y:(i.y-r)/(1-o),z:i.z/(1-s)})})}function tq(t,e,n){return _u()==="webgl"?function(r,s,o){var i=o.combineWithPreviousRatio.toFixed(2),a={variableNames:["prevMask","newMask"],outputShape:r.shape,userCode:`
  void main() {
      ivec2 coords = getOutputCoords();
      int height = coords[0];
      int width = coords[1];

      float prevMaskValue = getPrevMask(height, width);
      float newMaskValue = getNewMask(height, width);

      /*
      * Assume p := newMaskValue
      * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)
      * uncertainty alpha(p) =
      *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the
      * uncertainty]
      *
      * The following polynomial approximates uncertainty alpha as a
      * function of (p + 0.5):
      */
      const float c1 = 5.68842;
      const float c2 = -0.748699;
      const float c3 = -57.8051;
      const float c4 = 291.309;
      const float c5 = -624.717;
      float t = newMaskValue - 0.5;
      float x = t * t;

      float uncertainty =
        1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));

      float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *
                             (uncertainty * `.concat(i,`);

      setOutput(outputValue);
    }
`)},u=Ji();return xe(function(){var l=u.compileAndRun(a,[r,s]);return mn().makeTensorFromDataId(l.dataId,l.shape,l.dtype)})}(t,e,n):xe(function(){var r=be(e,.5),s=er(r),o=be(1,Lu(1,Y(s,fe(5.68842,Y(s,fe(-.748699,Y(s,fe(-57.8051,Y(s,fe(291.309,Y(s,-624.717)))))))))));return fe(e,Y(be(t,e),Y(o,n.combineWithPreviousRatio)))})}function nq(t,e,n){return _e(this,void 0,void 0,function(){var r,s,o,i,a;return Pe(this,function(u){switch(u.label){case 0:return r=t[0],s=t[1],o=function(l,c,d){return xe(function(){var h,p,f,y;d.reverseOutputOrder?(p=Ve(ke(l,[0,d.boxCoordOffset+0],[-1,1])),h=Ve(ke(l,[0,d.boxCoordOffset+1],[-1,1])),y=Ve(ke(l,[0,d.boxCoordOffset+2],[-1,1])),f=Ve(ke(l,[0,d.boxCoordOffset+3],[-1,1]))):(h=Ve(ke(l,[0,d.boxCoordOffset+0],[-1,1])),p=Ve(ke(l,[0,d.boxCoordOffset+1],[-1,1])),f=Ve(ke(l,[0,d.boxCoordOffset+2],[-1,1])),y=Ve(ke(l,[0,d.boxCoordOffset+3],[-1,1]))),p=fe(Y(Te(p,d.xScale),c.w),c.x),h=fe(Y(Te(h,d.yScale),c.h),c.y),d.applyExponentialOnBoxSize?(f=Y(ds(Te(f,d.hScale)),c.h),y=Y(ds(Te(y,d.wScale)),c.w)):(f=Y(Te(f,d.hScale),c.h),y=Y(Te(y,d.wScale),c.h));var x=be(h,Te(f,2)),g=be(p,Te(y,2)),v=fe(h,Te(f,2)),b=fe(p,Te(y,2)),S=St([H(x,[d.numBoxes,1]),H(g,[d.numBoxes,1]),H(v,[d.numBoxes,1]),H(b,[d.numBoxes,1])],1);if(d.numKeypoints)for(var I=0;I<d.numKeypoints;++I){var E=d.keypointCoordOffset+I*d.numValuesPerKeypoint,R=void 0,_=void 0;d.reverseOutputOrder?(R=Ve(ke(l,[0,E],[-1,1])),_=Ve(ke(l,[0,E+1],[-1,1]))):(_=Ve(ke(l,[0,E],[-1,1])),R=Ve(ke(l,[0,E+1],[-1,1])));var L=fe(Y(Te(R,d.xScale),c.w),c.x),F=fe(Y(Te(_,d.yScale),c.h),c.y);S=St([S,H(L,[d.numBoxes,1]),H(F,[d.numBoxes,1])],1)}return S})}(s,e,n),i=xe(function(){var l=r;return n.sigmoidScore?(n.scoreClippingThresh!=null&&(l=W$(r,-n.scoreClippingThresh,n.scoreClippingThresh)),l=ts(l)):l}),[4,rq(o,i,n)];case 1:return a=u.sent(),Le([o,i]),[2,a]}})})}function rq(t,e,n){return _e(this,void 0,void 0,function(){var r,s,o,i,a,u,l,c,d,h,p,f;return Pe(this,function(y){switch(y.label){case 0:return r=[],[4,t.data()];case 1:return s=y.sent(),[4,e.data()];case 2:for(o=y.sent(),i=0;i<n.numBoxes;++i)if(!(n.minScoreThresh!=null&&o[i]<n.minScoreThresh||(a=i*n.numCoords,u=sq(s[a+0],s[a+1],s[a+2],s[a+3],o[i],n.flipVertically,i),(l=u.locationData.relativeBoundingBox).width<0||l.height<0))){if(n.numKeypoints>0)for((c=u.locationData).relativeKeypoints=[],d=n.numKeypoints*n.numValuesPerKeypoint,h=0;h<d;h+=n.numValuesPerKeypoint)p=a+n.keypointCoordOffset+h,f={x:s[p+0],y:n.flipVertically?1-s[p+1]:s[p+1]},c.relativeKeypoints.push(f);r.push(u)}return[2,r]}})})}function sq(t,e,n,r,s,o,i){return{score:[s],ind:i,locationData:{relativeBoundingBox:{xMin:e,yMin:o?1-n:t,xMax:r,yMax:o?1-t:n,width:r-e,height:n-t}}}}function oq(t,e){return t==="none"?e:function(n){return 1/(1+Math.exp(-n))}(e)}function d2(t,e,n,r){return _e(this,void 0,void 0,function(){var s,o,i,a,u,l,c,d;return Pe(this,function(h){switch(h.label){case 0:return n=n||e.flipHorizontally||!1,r=r||e.flipVertically||!1,s=t.size,o=s/e.numLandmarks,[4,t.data()];case 1:for(i=h.sent(),a=[],u=0;u<e.numLandmarks;++u)l=u*o,(d={x:0,y:0}).x=n?e.inputImageWidth-i[l]:i[l],o>1&&(d.y=r?e.inputImageHeight-i[l+1]:i[l+1]),o>2&&(d.z=i[l+2]),o>3&&(d.score=oq(e.visibilityActivation,i[l+3])),a.push(d);for(c=0;c<a.length;++c)(d=a[c]).x=d.x/e.inputImageWidth,d.y=d.y/e.inputImageHeight,d.z=d.z/e.inputImageWidth/(e.normalizeZ||1);return[2,a]}})})}function h2(t,e,n){var r=t.width,s=t.height,o=t.rotation;if(n.rotation==null&&n.rotationDegree==null||(o=function(l,c){return c.rotation!=null?l+=c.rotation:c.rotationDegree!=null&&(l+=Math.PI*c.rotationDegree/180),UI(l)}(o,n)),o===0)t.xCenter=t.xCenter+r*n.shiftX,t.yCenter=t.yCenter+s*n.shiftY;else{var i=(e.width*r*n.shiftX*Math.cos(o)-e.height*s*n.shiftY*Math.sin(o))/e.width,a=(e.width*r*n.shiftX*Math.sin(o)+e.height*s*n.shiftY*Math.cos(o))/e.height;t.xCenter=t.xCenter+i,t.yCenter=t.yCenter+a}{var u=Math.max(r*e.width,s*e.height);r=u/e.width,s=u/e.height}return t.width=r*n.scaleX,t.height=s*n.scaleY,t}function iq(t,e){return t.map(function(n){var r=He(He({},n),{x:n.x/e.width,y:n.y/e.height});return n.z!=null&&(n.z=n.z/e.width),r})}var _s=function(){function t(e){this.alpha=e,this.initialized=!1}return t.prototype.apply=function(e,n){var r;return this.initialized?r=n==null?this.storedValue+this.alpha*(e-this.storedValue):this.storedValue+this.alpha*n*Math.asinh((e-this.storedValue)/n):(r=e,this.initialized=!0),this.rawValue=e,this.storedValue=r,r},t.prototype.applyWithAlpha=function(e,n,r){return this.alpha=n,this.apply(e,r)},t.prototype.hasLastRawValue=function(){return this.initialized},t.prototype.lastRawValue=function(){return this.rawValue},t.prototype.reset=function(){this.initialized=!1},t}(),up=function(){function t(e){this.frequency=e.frequency,this.minCutOff=e.minCutOff,this.beta=e.beta,this.thresholdCutOff=e.thresholdCutOff,this.thresholdBeta=e.thresholdBeta,this.derivateCutOff=e.derivateCutOff,this.x=new _s(this.getAlpha(this.minCutOff)),this.dx=new _s(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return t.prototype.apply=function(e,n,r){if(e==null)return e;var s=Math.trunc(n);if(this.lastTimestamp>=s)return e;this.lastTimestamp!==0&&s!==0&&(this.frequency=1/(1e-6*(s-this.lastTimestamp))),this.lastTimestamp=s;var o=this.x.hasLastRawValue()?(e-this.x.lastRawValue())*r*this.frequency:0,i=this.dx.applyWithAlpha(o,this.getAlpha(this.derivateCutOff)),a=this.minCutOff+this.beta*Math.abs(i),u=this.thresholdCutOff!=null?this.thresholdCutOff+this.thresholdBeta*Math.abs(i):null;return this.x.applyWithAlpha(e,this.getAlpha(a),u)},t.prototype.getAlpha=function(e){return 1/(1+this.frequency/(2*Math.PI*e))},t}(),nm=function(){function t(e){this.config=e}return t.prototype.apply=function(e,n,r){var s=this;if(e==null)return this.reset(),null;this.initializeFiltersIfEmpty(e);var o=1;if(!this.config.disableValueScaling){if(r<this.config.minAllowedObjectScale)return To([],e,!0);o=1/r}return e.map(function(i,a){var u=He(He({},i),{x:s.xFilters[a].apply(i.x,n,o),y:s.yFilters[a].apply(i.y,n,o)});return i.z!=null&&(u.z=s.zFilters[a].apply(i.z,n,o)),u})},t.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},t.prototype.initializeFiltersIfEmpty=function(e){var n=this;this.xFilters!=null&&this.xFilters.length===e.length||(this.xFilters=e.map(function(r){return new up(n.config)}),this.yFilters=e.map(function(r){return new up(n.config)}),this.zFilters=e.map(function(r){return new up(n.config)}))},t}(),lp=function(){function t(e){this.config=e,this.window=[],this.lowPassFilter=new _s(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return t.prototype.apply=function(e,n,r){if(e==null)return e;var s,o=Math.trunc(n);if(this.lastTimestamp>=o)return e;if(this.lastTimestamp===-1)s=1;else{for(var i=e*r-this.lastValue*this.lastValueScale,a=o-this.lastTimestamp,u=i,l=a,c=(1+this.window.length)*(1e6/30),d=0,h=this.window;d<h.length;d++){var p=h[d];if(l+p.duration>c)break;u+=p.distance,l+=p.duration}var f=u/(1e-6*l);s=1-1/(1+this.config.velocityScale*Math.abs(f)),this.window.unshift({distance:i,duration:a}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=e,this.lastValueScale=r,this.lastTimestamp=o,this.lowPassFilter.applyWithAlpha(e,s)},t}(),aq=function(){function t(e){this.config=e}return t.prototype.apply=function(e,n,r){var s=this;if(e==null)return this.reset(),null;var o=1;if(!this.config.disableValueScaling){if(r<this.config.minAllowedObjectScale)return To([],e,!0);o=1/r}return this.initializeFiltersIfEmpty(e),e.map(function(i,a){var u=He(He({},i),{x:s.xFilters[a].apply(i.x,n,o),y:s.yFilters[a].apply(i.y,n,o)});return i.z!=null&&(u.z=s.zFilters[a].apply(i.z,n,o)),u})},t.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},t.prototype.initializeFiltersIfEmpty=function(e){var n=this;this.xFilters!=null&&this.xFilters.length===e.length||(this.xFilters=e.map(function(r){return new lp(n.config)}),this.yFilters=e.map(function(r){return new lp(n.config)}),this.zFilters=e.map(function(r){return new lp(n.config)}))},t}(),cp=function(){function t(e){if(e.velocityFilter!=null)this.keypointsFilter=new aq(e.velocityFilter);else{if(e.oneEuroFilter==null)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+"".concat(e,"."));this.keypointsFilter=new nm(e.oneEuroFilter)}}return t.prototype.apply=function(e,n,r,s,o){if(s===void 0&&(s=!1),e==null)return this.keypointsFilter.reset(),null;var i=o!=null?function(l,c){return(l.width*c.width+l.height*c.height)/2}(o,r):1,a=s?XI(e,r):e,u=this.keypointsFilter.apply(a,n,i);return s?iq(u,r):u},t}(),p2=function(){function t(e){this.alpha=e.alpha}return t.prototype.apply=function(e){var n=this;if(e==null)return this.visibilityFilters=null,null;this.visibilityFilters!=null&&this.visibilityFilters.length===e.length||(this.visibilityFilters=e.map(function(a){return new _s(n.alpha)}));for(var r=[],s=0;s<e.length;++s){var o=e[s],i=He({},o);i.score=this.visibilityFilters[s].apply(o.score),r.push(i)}return r},t}(),uq={interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},fi={runtime:"tfjs",modelType:"full",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"},lq={maxPoses:1,flipHorizontal:!1},cq={applyExponentialOnBoxSize:!1,flipVertically:!1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},dq=.3,f2={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25},hq={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},pq={outputTensorSize:{width:256,height:256},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},fq={numLandmarks:39,inputImageWidth:256,inputImageHeight:256,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},mq={numLandmarks:39,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},gq={kernelSize:7,minConfidenceToRefine:.5},m2={alpha:.1},yq={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},xq={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},vq={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},wq={activation:"none"},bq={combineWithPreviousRatio:.7},Cq=function(){function t(e){this.mask=e}return t.prototype.toCanvasImageSource=function(){return _e(this,void 0,void 0,function(){return Pe(this,function(e){return[2,MI(this.mask)]})})},t.prototype.toImageData=function(){return _e(this,void 0,void 0,function(){return Pe(this,function(e){return[2,VI(this.mask)]})})},t.prototype.toTensor=function(){return _e(this,void 0,void 0,function(){return Pe(this,function(e){return[2,this.mask]})})},t.prototype.getUnderlyingType=function(){return"tensor"},t}();function Sq(t){return WI(t),"person"}var $q=function(){function t(e,n,r,s,o,i){this.detectorModel=e,this.landmarkModel=n,this.enableSmoothing=r,this.enableSegmentation=s,this.smoothSegmentation=o,this.modelType=i,this.regionOfInterest=null,this.prevFilteredSegmentationMask=null,this.anchors=function(d){d.reduceBoxesInLowestLayer==null&&(d.reduceBoxesInLowestLayer=!1),d.interpolatedScaleAspectRatio==null&&(d.interpolatedScaleAspectRatio=1),d.fixedAnchorSize==null&&(d.fixedAnchorSize=!1);for(var h=[],p=0;p<d.numLayers;){for(var f=[],y=[],x=[],g=[],v=p;v<d.strides.length&&d.strides[v]===d.strides[p];){var b=u2(d.minScale,d.maxScale,v,d.strides.length);if(v===0&&d.reduceBoxesInLowestLayer)x.push(1),x.push(2),x.push(.5),g.push(.1),g.push(b),g.push(b);else{for(var S=0;S<d.aspectRatios.length;++S)x.push(d.aspectRatios[S]),g.push(b);if(d.interpolatedScaleAspectRatio>0){var I=v===d.strides.length-1?1:u2(d.minScale,d.maxScale,v+1,d.strides.length);g.push(Math.sqrt(b*I)),x.push(d.interpolatedScaleAspectRatio)}}v++}for(var E=0;E<x.length;++E){var R=Math.sqrt(x[E]);f.push(g[E]/R),y.push(g[E]*R)}var _=0,L=0;if(d.featureMapHeight.length>0)_=d.featureMapHeight[p],L=d.featureMapWidth[p];else{var F=d.strides[p];_=Math.ceil(d.inputSizeHeight/F),L=Math.ceil(d.inputSizeWidth/F)}for(var V=0;V<_;++V)for(var j=0;j<L;++j)for(var K=0;K<f.length;++K){var Z={xCenter:(j+d.anchorOffsetX)/L,yCenter:(V+d.anchorOffsetY)/_,width:0,height:0};d.fixedAnchorSize?(Z.width=1,Z.height=1):(Z.width=y[K],Z.height=f[K]),h.push(Z)}p=v}return h}(uq);var a=Dt(this.anchors.map(function(d){return d.width})),u=Dt(this.anchors.map(function(d){return d.height})),l=Dt(this.anchors.map(function(d){return d.xCenter})),c=Dt(this.anchors.map(function(d){return d.yCenter}));this.anchorTensor={x:l,y:c,w:a,h:u},this.prevFilteredSegmentationMask=this.enableSegmentation?tr([],[0,0]):null}return t.prototype.estimatePoses=function(e,n,r){return _e(this,void 0,void 0,function(){var s,o,i,a,u,l,c,d,h,p,f,y,x,g,v,b,S,I,E,R,_,L,F;return Pe(this,function(V){switch(V.label){case 0:return s=function(j){var K;if((K=j==null?lq:He({},j)).maxPoses==null&&(K.maxPoses=1),K.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(K.maxPoses,". Should be > 0."));if(K.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return K}(n),e==null?(this.reset(),[2,[]]):(this.maxPoses=s.maxPoses,this.timestamp=r!=null?1e3*r:KI(e)?1e6*e.currentTime:null,o=ra(e),i=xe(function(){return je(j0(e),"float32")}),(a=this.regionOfInterest)!=null?[3,2]:[4,this.detectPose(i)]);case 1:if((u=V.sent()).length===0)return this.reset(),i.dispose(),[2,[]];l=u[0],a=this.poseDetectionToRoi(l,o),V.label=2;case 2:return[4,this.poseLandmarksByRoi(a,i)];case 3:return c=V.sent(),i.dispose(),c==null?(this.reset(),[2,[]]):(d=c.landmarks,h=c.auxiliaryLandmarks,p=c.poseScore,f=c.worldLandmarks,y=c.segmentationMask,x=this.poseLandmarkFiltering(d,h,f,o),g=x.actualLandmarksFiltered,v=x.auxiliaryLandmarksFiltered,b=x.actualWorldLandmarksFiltered,S=this.poseLandmarksToRoi(v,o),this.regionOfInterest=S,I=this.smoothSegmentation&&y!=null?this.poseSegmentationFiltering(y):y,(E=g!=null?XI(g,o):null)!=null&&E.forEach(function(j,K){j.name=Gu[K]}),(R=b)!=null&&R.forEach(function(j,K){j.name=Gu[K]}),_={score:p,keypoints:E,keypoints3D:R},I!==null&&(L=xe(function(){var j=Pn(I,2),K=qs(j,[[0,0],[0,0],[0,1]]);return ak(K,[[0,0],[0,0],[0,2]],"symmetric")}),this.smoothSegmentation||Le(I),F={maskValueToLabel:Sq,mask:new Cq(L)},_.segmentation=F),[2,[_]])}})})},t.prototype.poseSegmentationFiltering=function(e){var n=this.prevFilteredSegmentationMask;return n.size===0?this.prevFilteredSegmentationMask=e:(this.prevFilteredSegmentationMask=tq(n,e,bq),Le(e)),Le(n),this.prevFilteredSegmentationMask},t.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),Le([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h,this.prevFilteredSegmentationMask])},t.prototype.reset=function(){this.regionOfInterest=null,this.enableSegmentation&&(Le(this.prevFilteredSegmentationMask),this.prevFilteredSegmentationMask=tr([],[0,0])),this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},t.prototype.detectPose=function(e){return _e(this,void 0,void 0,function(){var n,r,s,o,i,a,u,l,c,d;return Pe(this,function(h){switch(h.label){case 0:return n=tm(e,hq),r=n.imageTensor,s=n.padding,o=this.detectorModel.predict(r),i=ZX(o),a=i.boxes,[4,nq([u=i.logits,a],this.anchorTensor,cq)];case 1:return(l=h.sent()).length===0?(Le([r,o,u,a]),[2,l]):[4,JX(l,this.maxPoses,dq)];case 2:return c=h.sent(),d=function(p,f){p===void 0&&(p=[]);for(var y=f.left,x=f.top,g=f.left+f.right,v=f.top+f.bottom,b=0;b<p.length;b++){var S=p[b],I=S.locationData.relativeBoundingBox,E=(I.xMin-y)/(1-g),R=(I.yMin-x)/(1-v),_=I.width/(1-g),L=I.height/(1-v);I.xMin=E,I.yMin=R,I.width=_,I.height=L,I.xMax=E+_,I.yMax=R+L;var F=S.locationData.relativeKeypoints;F&&F.forEach(function(V){var j=(V.x-y)/(1-g),K=(V.y-x)/(1-v);V.x=j,V.y=K})}return p}(c,s),Le([r,o,u,a]),[2,d]}})})},t.prototype.poseDetectionToRoi=function(e,n){return h2(ip(e,n,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),n,f2)},t.prototype.poseLandmarksByRoi=function(e,n){return _e(this,void 0,void 0,function(){var r,s,o,i,a,u,l,c,d,h,p,f,y,x;return Pe(this,function(g){switch(g.label){case 0:if(r=ra(n),s=tm(n,pq,e),o=s.imageTensor,i=s.padding,a=s.transformationMatrix,this.modelType!=="lite"&&this.modelType!=="full"&&this.modelType!=="heavy")throw new Error("Model type must be one of lite, full or heavy,"+"but got ".concat(this.modelType));return u=["ld_3d","output_poseflag","activation_heatmap","world_3d"],this.enableSegmentation&&u.push("activation_segmentation"),l=this.landmarkModel.execute(o,u),[4,this.tensorsToPoseLandmarksAndSegmentation(l)];case 1:return(c=g.sent())==null?(Le(l),Le(o),[2,null]):(d=c.landmarks,h=c.auxiliaryLandmarks,p=c.poseScore,f=c.worldLandmarks,y=c.segmentationMask,[4,this.poseLandmarksAndSegmentationInverseProjection(r,e,i,a,d,h,f,y)]);case 2:return x=g.sent(),Le(l),Le(o),[2,He({poseScore:p},x)]}})})},t.prototype.poseLandmarksAndSegmentationInverseProjection=function(e,n,r,s,o,i,a,u){return _e(this,void 0,void 0,function(){var l,c,d,h,p,f;return Pe(this,function(y){return l=c2(o,r),c=c2(i,r),d=a2(l,n),h=a2(c,n),p=function(x,g){for(var v=[],b=0,S=x;b<S.length;b++){var I=S[b],E=I.x,R=I.y,_=g.rotation,L=Math.cos(_)*E-Math.sin(_)*R,F=Math.sin(_)*E+Math.cos(_)*R,V=He({},I);V.x=L,V.y=F,v.push(V)}return v}(a,n),f=null,this.enableSegmentation&&(f=xe(function(){var x=u.shape,g=x[0],v=x[1],b=function(E){var R=HI(new Array(16).fill(0));R[0][0]=Wt(E,0,0),R[1][0]=-Wt(E,0,1),R[2][0]=Wt(E,0,2),R[3][0]=-Wt(E,0,3),R[0][2]=Wt(E,2,0),R[1][2]=-Wt(E,2,1),R[2][2]=Wt(E,2,2),R[3][2]=-Wt(E,2,3),R[0][1]=-Wt(E,1,0),R[1][1]=Wt(E,1,1),R[2][1]=-Wt(E,1,2),R[3][1]=Wt(E,1,3),R[0][3]=-Wt(E,3,0),R[1][3]=Wt(E,3,1),R[2][3]=-Wt(E,3,2),R[3][3]=Wt(E,3,3);for(var _=E[0][0]*R[0][0]+E[1][0]*R[0][1]+E[2][0]*R[0][2]+E[3][0]*R[0][3],L=0;L<R.length;L++)for(var F=0;F<R.length;F++)R[L][F]/=_;return R}(s),S=tr(GI(b,{width:v,height:g},e),[1,8]),I=[1,g,v,1];return Ve(_o.transform(H(u,I),S,"bilinear","constant",0,[e.height,e.width]),[0,3])}),Le(u)),[2,{landmarks:d,auxiliaryLandmarks:h,worldLandmarks:p,segmentationMask:f}]})})},t.prototype.tensorsToPoseLandmarksAndSegmentation=function(e){return _e(this,void 0,void 0,function(){var n,r,s,o,i,a,u,l,c,d,h,p,f;return Pe(this,function(y){switch(y.label){case 0:return n=e[0],r=e[1],s=e[2],o=e[3],i=this.enableSegmentation?e[4]:null,[4,r.data()];case 1:return(a=y.sent()[0])<.5?[2,null]:[4,d2(n,fq)];case 2:return[4,eq(y.sent(),s,gq)];case 3:return u=y.sent(),l=u.slice(0,33),c=u.slice(33,35),[4,d2(o,mq)];case 4:return d=y.sent(),h=d.slice(0,33),p=function(x,g,v){for(var b=[],S=0;S<x.length;S++){var I=He({},g[S]);I.score=x[S].score,b.push(I)}return b}(l,h),f=this.enableSegmentation?function(x,g,v){return xe(function(){var b=Ve(x,[0]),S=b.shape[2];if(S===1){var I=b;switch(g.activation){case"none":break;case"sigmoid":I=ts(I);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported (".concat(g.activation,")"))}var E=I;return Ve(E,[2])}throw new Error("Unsupported number of tensor channels ".concat(S))})}(i,wq):null,[2,{landmarks:l,auxiliaryLandmarks:c,poseScore:a,worldLandmarks:p,segmentationMask:f}]}})})},t.prototype.poseLandmarksToRoi=function(e,n){return h2(ip(l2(e),n,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),n,f2)},t.prototype.poseLandmarkFiltering=function(e,n,r,s){var o,i,a;if(this.timestamp!=null&&this.enableSmoothing){var u=ip(l2(n),s,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});this.visibilitySmoothingFilterActual==null&&(this.visibilitySmoothingFilterActual=new p2(m2)),o=this.visibilitySmoothingFilterActual.apply(e),this.visibilitySmoothingFilterAuxiliary==null&&(this.visibilitySmoothingFilterAuxiliary=new p2(m2)),i=this.visibilitySmoothingFilterAuxiliary.apply(n),a=this.visibilitySmoothingFilterActual.apply(r),this.landmarksSmoothingFilterActual==null&&(this.landmarksSmoothingFilterActual=new cp(yq)),o=this.landmarksSmoothingFilterActual.apply(o,this.timestamp,s,!0,u),this.landmarksSmoothingFilterAuxiliary==null&&(this.landmarksSmoothingFilterAuxiliary=new cp(xq)),i=this.landmarksSmoothingFilterAuxiliary.apply(i,this.timestamp,s,!0,u),this.worldLandmarksSmoothingFilterActual==null&&(this.worldLandmarksSmoothingFilterActual=new cp(vq)),a=this.worldLandmarksSmoothingFilterActual.apply(r,this.timestamp)}else o=e,i=n,a=r;return{actualLandmarksFiltered:o,auxiliaryLandmarksFiltered:i,actualWorldLandmarksFiltered:a}},t}();function kq(t){return _e(this,void 0,void 0,function(){var e,n,r,s,o,i;return Pe(this,function(a){switch(a.label){case 0:return e=function(u){var l=He({},u??fi);if(l.enableSmoothing==null&&(l.enableSmoothing=fi.enableSmoothing),l.enableSegmentation==null&&(l.enableSegmentation=fi.enableSegmentation),l.smoothSegmentation==null&&(l.smoothSegmentation=fi.smoothSegmentation),l.modelType==null&&(l.modelType=fi.modelType),l.detectorModelUrl==null&&(l.detectorModelUrl=fi.detectorModelUrl),l.landmarkModelUrl==null)switch(l.modelType){case"lite":l.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/2";break;case"heavy":l.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/2";break;case"full":default:l.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"}return l}(t),n=typeof e.detectorModelUrl=="string"&&e.detectorModelUrl.indexOf("https://tfhub.dev")>-1,r=typeof e.landmarkModelUrl=="string"&&e.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([ta(e.detectorModelUrl,{fromTFHub:n}),ta(e.landmarkModelUrl,{fromTFHub:r})])];case 1:return s=a.sent(),o=s[0],i=s[1],[2,new $q(o,i,e.enableSmoothing,e.enableSegmentation,e.smoothSegmentation,e.modelType)]}})})}var Ao,Wr,qI=function(){function t(e){(function(n){if(n.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but "+"encountered ".concat(n.maxTracks));if(n.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but "+"encountered ".concat(n.maxAge));if(n.keypointTrackerParams!==void 0){if(n.keypointTrackerParams.keypointConfidenceThreshold<0||n.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+"".concat(n.keypointTrackerParams.keypointConfidenceThreshold));if(n.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but "+"encountered ".concat(n.keypointTrackerParams.minNumberOfKeypoints));for(var r=0,s=n.keypointTrackerParams.keypointFalloff;r<s.length;r++){var o=s[r];if(o<=0)throw new Error("Must specify each keypoint falloff parameterto be positive "+"but encountered ".concat(o))}}})(e),this.tracks=[],this.maxTracks=e.maxTracks,this.maxAge=1e3*e.maxAge,this.minSimilarity=e.minSimilarity,this.nextID=1}return t.prototype.apply=function(e,n){this.filterOldTracks(n);var r=this.computeSimilarity(e);return this.assignTracks(e,r,n),this.updateTracks(n),e},t.prototype.getTracks=function(){return this.tracks.slice()},t.prototype.getTrackIDs=function(){return new Set(this.tracks.map(function(e){return e.id}))},t.prototype.filterOldTracks=function(e){var n=this;this.tracks=this.tracks.filter(function(r){return e-r.lastTimestamp<=n.maxAge})},t.prototype.assignTracks=function(e,n,r){for(var s=Array.from(Array(n[0].length).keys()),o=[],i=0,a=Array.from(Array(e.length).keys());i<a.length;i++){var u=a[i];if(s.length!==0){for(var l=-1,c=-1,d=0,h=s;d<h.length;d++){var p=h[d],f=n[u][p];f>=this.minSimilarity&&f>c&&(l=p,c=f)}if(l>=0){var y=this.tracks[l];y=Object.assign(y,this.createTrack(e[u],r,y.id)),e[u].id=y.id;var x=s.indexOf(l);s.splice(x,1)}else o.push(u)}else o.push(u)}for(var g=0,v=o;g<v.length;g++){u=v[g];var b=this.createTrack(e[u],r);this.tracks.push(b),e[u].id=b.id}},t.prototype.updateTracks=function(e){this.tracks.sort(function(n,r){return r.lastTimestamp-n.lastTimestamp}),this.tracks=this.tracks.slice(0,this.maxTracks)},t.prototype.createTrack=function(e,n,r){var s={id:r||this.nextTrackID(),lastTimestamp:n,keypoints:To([],e.keypoints,!0).map(function(o){return He({},o)})};return e.box!==void 0&&(s.box=He({},e.box)),s},t.prototype.nextTrackID=function(){var e=this.nextID;return this.nextID+=1,e},t.prototype.remove=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];this.tracks=this.tracks.filter(function(r){return!e.includes(r.id)})},t.prototype.reset=function(){this.tracks=[]},t}(),Iq=function(t){function e(n){return t.call(this,n)||this}return BI(e,t),e.prototype.computeSimilarity=function(n){var r=this;return n.length===0||this.tracks.length===0?[[]]:n.map(function(s){return r.tracks.map(function(o){return r.iou(s,o)})})},e.prototype.iou=function(n,r){var s=Math.max(n.box.xMin,r.box.xMin),o=Math.max(n.box.yMin,r.box.yMin),i=Math.min(n.box.xMax,r.box.xMax),a=Math.min(n.box.yMax,r.box.yMax);if(s>=i||o>=a)return 0;var u=(i-s)*(a-o);return u/(n.box.width*n.box.height+r.box.width*r.box.height-u)},e}(qI),Nq=function(t){function e(n){var r=t.call(this,n)||this;return r.keypointThreshold=n.keypointTrackerParams.keypointConfidenceThreshold,r.keypointFalloff=n.keypointTrackerParams.keypointFalloff,r.minNumKeyoints=n.keypointTrackerParams.minNumberOfKeypoints,r}return BI(e,t),e.prototype.computeSimilarity=function(n){if(n.length===0||this.tracks.length===0)return[[]];for(var r=[],s=0,o=n;s<o.length;s++){for(var i=o[s],a=[],u=0,l=this.tracks;u<l.length;u++){var c=l[u];a.push(this.oks(i,c))}r.push(a)}return r},e.prototype.oks=function(n,r){for(var s=this.area(r.keypoints)+1e-6,o=0,i=0,a=0;a<n.keypoints.length;++a){var u=n.keypoints[a],l=r.keypoints[a];if(!(u.score<this.keypointThreshold||l.score<this.keypointThreshold)){i+=1;var c=Math.pow(u.x-l.x,2)+Math.pow(u.y-l.y,2),d=2*this.keypointFalloff[a];o+=Math.exp(-1*c/(2*s*Math.pow(d,2)))}}return i<this.minNumKeyoints?0:o/i},e.prototype.area=function(n){var r=this,s=n.filter(function(u){return u.score>r.keypointThreshold}),o=Math.min.apply(Math,To([1],s.map(function(u){return u.x}),!1)),i=Math.max.apply(Math,To([0],s.map(function(u){return u.x}),!1)),a=Math.min.apply(Math,To([1],s.map(function(u){return u.y}),!1));return(i-o)*(Math.max.apply(Math,To([0],s.map(function(u){return u.y}),!1))-a)},e}(qI);function Tq(t){switch(t){case Wr.BlazePose:return Gu.reduce(function(e,n,r){return e[n]=r,e},{});case Wr.PoseNet:case Wr.MoveNet:return Hr.reduce(function(e,n,r){return e[n]=r,e},{});default:throw new Error("Model ".concat(t," is not supported."))}}(function(t){t.Keypoint="keypoint",t.BoundingBox="boundingBox"})(Ao||(Ao={})),function(t){t.MoveNet="MoveNet",t.BlazePose="BlazePose",t.PoseNet="PoseNet"}(Wr||(Wr={}));var g2=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],YI={modelType:"SinglePose.Lightning",enableSmoothing:!0},y2={},x2={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},dp={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},v2={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function Eq(t,e,n,r){for(var s={},o=0,i=Hr;o<i.length;o++){var a=i[o];s[a]=[e[n[a]].y*r.height,e[n[a]].x*r.width]}if(function(v,b){return(v[b.left_hip].score>.2||v[b.right_hip].score>.2)&&(v[b.left_shoulder].score>.2||v[b.right_shoulder].score>.2)}(e,n)){var u=(s.left_hip[0]+s.right_hip[0])/2,l=(s.left_hip[1]+s.right_hip[1])/2,c=function(v,b,S,I,E){for(var R=["left_shoulder","right_shoulder","left_hip","right_hip"],_=0,L=0,F=0;F<R.length;F++)(ne=Math.abs(I-S[R[F]][0]))>_&&(_=ne),(ce=Math.abs(E-S[R[F]][1]))>L&&(L=ce);for(var V=0,j=0,K=0,Z=Object.keys(S);K<Z.length;K++){var ne,ce,Ce=Z[K];v[b[Ce]].score<.2||((ne=Math.abs(I-S[Ce][0]))>V&&(V=ne),(ce=Math.abs(E-S[Ce][1]))>j&&(j=ce))}return[_,L,V,j]}(e,n,s,u,l),d=c[0],h=c[1],p=c[2],f=c[3],y=Math.max(1.9*h,1.9*d,1.2*p,1.2*f),x=[u-(y=Math.min(y,Math.max(l,r.width-l,u,r.height-u))),l-y];if(y>Math.max(r.width,r.height)/2)return rm(t==null,r);var g=2*y;return{yMin:x[0]/r.height,xMin:x[1]/r.width,yMax:(x[0]+g)/r.height,xMax:(x[1]+g)/r.width,height:(x[0]+g)/r.height-x[0]/r.height,width:(x[1]+g)/r.width-x[1]/r.width}}return rm(t==null,r)}function rm(t,e){var n,r,s,o;return t?e.width>e.height?(n=1,r=e.height/e.width,s=0,o=(e.width/2-e.height/2)/e.width):(n=e.width/e.height,r=1,s=(e.height/2-e.width/2)/e.height,o=0):e.width>e.height?(n=e.width/e.height,r=1,s=(e.height/2-e.width/2)/e.height,o=0):(n=1,r=e.height/e.width,s=0,o=(e.width/2-e.height/2)/e.width),{yMin:s,xMin:o,yMax:s+n,xMax:o+r,height:n,width:r}}function Rq(t){var e,n=t==null?YI:He({},t);if(n.modelType==null)n.modelType="SinglePose.Lightning";else if(g2.indexOf(n.modelType)<0)throw new Error("Invalid architecture ".concat(n.modelType,". ")+"Should be one of ".concat(g2));if(n.enableSmoothing==null&&(n.enableSmoothing=!0),n.minPoseScore!=null&&(n.minPoseScore<0||n.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(n.multiPoseMaxDimension!=null&&(n.multiPoseMaxDimension%32!=0||n.multiPoseMaxDimension<32))throw new Error("multiPoseMaxDimension must be a multiple of 32 and higher than 0");if(n.modelType==="MultiPose.Lightning"&&n.enableTracking==null&&(n.enableTracking=!0),n.modelType==="MultiPose.Lightning"&&n.enableTracking===!0)if(n.trackerType==null&&(n.trackerType=Ao.BoundingBox),n.trackerType===Ao.Keypoint)n.trackerConfig!=null?n.trackerConfig=function(r){var s=w2(dp,r);return s.keypointTrackerParams=He({},dp.keypointTrackerParams),r.keypointTrackerParams!=null&&(r.keypointTrackerParams.keypointConfidenceThreshold!=null&&(s.keypointTrackerParams.keypointConfidenceThreshold=r.keypointTrackerParams.keypointConfidenceThreshold),r.keypointTrackerParams.keypointFalloff!=null&&(s.keypointTrackerParams.keypointFalloff=r.keypointTrackerParams.keypointFalloff),r.keypointTrackerParams.minNumberOfKeypoints!=null&&(s.keypointTrackerParams.minNumberOfKeypoints=r.keypointTrackerParams.minNumberOfKeypoints)),s}(n.trackerConfig):n.trackerConfig=dp;else{if(n.trackerType!==Ao.BoundingBox)throw new Error("Tracker type not supported by MoveNet");n.trackerConfig!=null?n.trackerConfig=(e=n.trackerConfig,w2(v2,e)):n.trackerConfig=v2}return n}function w2(t,e){var n={maxTracks:t.maxTracks,maxAge:t.maxAge,minSimilarity:t.minSimilarity};return e.maxTracks!=null&&(n.maxTracks=e.maxTracks),e.maxAge!=null&&(n.maxAge=e.maxAge),e.minSimilarity!=null&&(n.minSimilarity=e.minSimilarity),n}var _q=function(){function t(e,n){this.moveNetModel=e,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=Tq(Wr.MoveNet),n.modelType==="SinglePose.Lightning"?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):n.modelType==="SinglePose.Thunder"&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel=n.modelType==="MultiPose.Lightning",this.multiPoseModel||(this.keypointFilter=new nm(x2),this.cropRegionFilterYMin=new _s(.9),this.cropRegionFilterXMin=new _s(.9),this.cropRegionFilterYMax=new _s(.9),this.cropRegionFilterXMax=new _s(.9)),this.enableSmoothing=n.enableSmoothing,n.minPoseScore?this.minPoseScore=n.minPoseScore:this.minPoseScore=.25,n.multiPoseMaxDimension?this.multiPoseMaxDimension=n.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=n.enableTracking,this.multiPoseModel&&this.enableTracking&&(n.trackerType===Ao.Keypoint?this.tracker=new Nq(n.trackerConfig):n.trackerType===Ao.BoundingBox&&(this.tracker=new Iq(n.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return t.prototype.runSinglePersonPoseModel=function(e){return _e(this,void 0,void 0,function(){var n,r,s,o,i;return Pe(this,function(a){switch(a.label){case 0:if((n=this.moveNetModel.execute(e)).shape.length!==4||n.shape[0]!==1||n.shape[1]!==1||n.shape[2]!==17||n.shape[3]!==3)throw n.dispose(),new Error("Unexpected output shape from model: [".concat(n.shape,"]"));return _u()==="webgpu"?[3,1]:(r=n.dataSync(),[3,3]);case 1:return[4,n.data()];case 2:r=a.sent(),a.label=3;case 3:for(n.dispose(),s={keypoints:[],score:0},o=0,i=0;i<17;++i)s.keypoints[i]={y:r[3*i],x:r[3*i+1],score:r[3*i+2]},s.keypoints[i].score>.2&&(++o,s.score+=s.keypoints[i].score);return o>0&&(s.score/=o),[2,s]}})})},t.prototype.runMultiPersonPoseModel=function(e){return _e(this,void 0,void 0,function(){var n,r,s,o,i,a,u,l;return Pe(this,function(c){switch(c.label){case 0:if((n=this.moveNetModel.execute(e)).shape.length!==3||n.shape[0]!==1||n.shape[2]!==56)throw n.dispose(),new Error("Unexpected output shape from model: [".concat(n.shape,"]"));return _u()==="webgpu"?[3,1]:(r=n.dataSync(),[3,3]);case 1:return[4,n.data()];case 2:r=c.sent(),c.label=3;case 3:for(n.dispose(),s=[],o=r.length/56,i=0;i<o;++i)for(s[i]={keypoints:[]},a=56*i+51,s[i].box={yMin:r[a],xMin:r[a+1],yMax:r[a+2],xMax:r[a+3],width:r[a+3]-r[a+1],height:r[a+2]-r[a]},u=56*i+55,s[i].score=r[u],s[i].keypoints=[],l=0;l<17;++l)s[i].keypoints[l]={y:r[56*i+3*l],x:r[56*i+3*l+1],score:r[56*i+3*l+2]};return[2,s]}})})},t.prototype.estimatePoses=function(e,n,r){return n===void 0&&(n=y2),_e(this,void 0,void 0,function(){var s,o,i,a,u,l;return Pe(this,function(c){switch(c.label){case 0:return n=function(d){return d==null?y2:He({},d)}(n),e==null?(this.reset(),[2,[]]):(r==null?KI(e)&&(r=1e6*e.currentTime):r*=1e3,s=j0(e),o=ra(s),i=Pn(s,0),e instanceof at||s.dispose(),a=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(i,o,r)]);case 1:return a=c.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(i,o,r)];case 3:a=c.sent(),c.label=4;case 4:for(u=0;u<a.length;++u)for(l=0;l<a[u].keypoints.length;++l)a[u].keypoints[l].name=Hr[l],a[u].keypoints[l].y*=o.height,a[u].keypoints[l].x*=o.width;return[2,a]}})})},t.prototype.estimateSinglePose=function(e,n,r){return _e(this,void 0,void 0,function(){var s,o,i,a,u=this;return Pe(this,function(l){switch(l.label){case 0:return this.cropRegion||(this.cropRegion=rm(this.cropRegion==null,n)),s=xe(function(){var c=tr([[u.cropRegion.yMin,u.cropRegion.xMin,u.cropRegion.yMax,u.cropRegion.xMax]]),d=ps([1],"int32"),h=[u.modelInputResolution.height,u.modelInputResolution.width];return je(_o.cropAndResize(e,c,d,h,"bilinear",0),"int32")}),e.dispose(),[4,this.runSinglePersonPoseModel(s)];case 1:if(o=l.sent(),s.dispose(),o.score<this.minPoseScore)return this.reset(),[2,[]];for(i=0;i<o.keypoints.length;++i)o.keypoints[i].y=this.cropRegion.yMin+o.keypoints[i].y*this.cropRegion.height,o.keypoints[i].x=this.cropRegion.xMin+o.keypoints[i].x*this.cropRegion.width;return r!=null&&this.enableSmoothing&&(o.keypoints=this.keypointFilter.apply(o.keypoints,r,1)),a=Eq(this.cropRegion,o.keypoints,this.keypointIndexByName,n),this.cropRegion=this.filterCropRegion(a),[2,[o]]}})})},t.prototype.estimateMultiplePoses=function(e,n,r){return _e(this,void 0,void 0,function(){var s,o,i,a,u,l,c,d,h,p,f,y=this;return Pe(this,function(x){switch(x.label){case 0:return n.width>n.height?(o=this.multiPoseMaxDimension,i=Math.round(this.multiPoseMaxDimension*n.height/n.width),s=_o.resizeBilinear(e,[i,o]),u=o,l=32*Math.ceil(i/32),a=qs(s,[[0,0],[0,l-i],[0,0],[0,0]])):(o=Math.round(this.multiPoseMaxDimension*n.width/n.height),i=this.multiPoseMaxDimension,s=_o.resizeBilinear(e,[i,o]),u=32*Math.ceil(o/32),l=i,a=qs(s,[[0,0],[0,0],[0,u-o],[0,0]])),s.dispose(),e.dispose(),c=je(a,"int32"),a.dispose(),[4,this.runMultiPersonPoseModel(c)];case 1:for(d=x.sent(),c.dispose(),d=d.filter(function(g){return g.score>=y.minPoseScore}),p=0;p<d.length;++p)for(h=0;h<d[p].keypoints.length;++h)d[p].keypoints[h].y*=l/i,d[p].keypoints[h].x*=u/o;if(this.enableTracking&&(this.tracker.apply(d,r),this.enableSmoothing)){for(p=0;p<d.length;++p)this.keypointFilterMap.has(d[p].id)||this.keypointFilterMap.set(d[p].id,new nm(x2)),d[p].keypoints=this.keypointFilterMap.get(d[p].id).apply(d[p].keypoints,r,1);f=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach(function(g,v){f.has(v)||y.keypointFilterMap.delete(v)})}return[2,d]}})})},t.prototype.filterCropRegion=function(e){if(e){var n=this.cropRegionFilterYMin.apply(e.yMin),r=this.cropRegionFilterXMin.apply(e.xMin),s=this.cropRegionFilterYMax.apply(e.yMax),o=this.cropRegionFilterXMax.apply(e.xMax);return{yMin:n,xMin:r,yMax:s,xMax:o,height:s-n,width:o-r}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},t.prototype.dispose=function(){this.moveNetModel.dispose()},t.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},t.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},t}();function Pq(t){return t===void 0&&(t=YI),_e(this,void 0,void 0,function(){var e,n,r,s;return Pe(this,function(o){switch(o.label){case 0:return e=Rq(t),r=!0,e.modelUrl?(r=typeof e.modelUrl=="string"&&e.modelUrl.indexOf("https://tfhub.dev")>-1,[4,ta(e.modelUrl,{fromTFHub:r})]):[3,2];case 1:return n=o.sent(),[3,4];case 2:return s=void 0,e.modelType==="SinglePose.Lightning"?s="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":e.modelType==="SinglePose.Thunder"?s="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":e.modelType==="MultiPose.Lightning"&&(s="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,ta(s,{fromTFHub:r})];case 3:n=o.sent(),o.label=4;case 4:return _u()==="webgl"&&M().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new _q(n,e)]}})})}var b2={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},C2=["MobileNetV1","ResNet50"],S2={MobileNetV1:[8,16],ResNet50:[16]},Aq=[8,16,32],$2={MobileNetV1:[.5,.75,1],ResNet50:[1]},k2=[1,2,4],I2={maxPoses:1,flipHorizontal:!1},Dq={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},Oq=[-123.15,-115.9,-103.06];function hp(t){return Math.floor(t/2)}var Fq=function(){function t(e,n){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=n}return t.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},t.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},t.prototype.empty=function(){return this.numberOfElements===-1},t.prototype.size=function(){return this.numberOfElements+1},t.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},t.prototype.max=function(){return this.priorityQueue[0]},t.prototype.swim=function(e){for(;e>0&&this.less(hp(e),e);)this.exchange(e,hp(e)),e=hp(e)},t.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var n=2*e;if(n<this.numberOfElements&&this.less(n,n+1)&&n++,!this.less(e,n))break;this.exchange(e,n),e=n}},t.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},t.prototype.less=function(e,n){return this.getValueAt(e)<this.getValueAt(n)},t.prototype.exchange=function(e,n){var r=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[n],this.priorityQueue[n]=r},t}();function Lq(t,e,n,r,s,o){for(var i=o.shape,a=i[0],u=i[1],l=!0,c=Math.max(n-s,0),d=Math.min(n+s+1,a),h=c;h<d;++h){for(var p=Math.max(r-s,0),f=Math.min(r+s+1,u),y=p;y<f;++y)if(o.get(h,y,t)>e){l=!1;break}if(!l)break}return l}function zq(t){return _e(this,void 0,void 0,function(){return Pe(this,function(e){return[2,Promise.all(t.map(function(n){return n.buffer()}))]})})}function QI(t,e,n,r){return{y:r.get(t,e,n),x:r.get(t,e,n+17)}}function ZI(t,e,n){var r=QI(t.heatmapY,t.heatmapX,t.id,n),s=r.y,o=r.x;return{x:t.heatmapX*e+o,y:t.heatmapY*e+s}}function JI(t,e,n,r){var s=n.x,o=n.y;return t.some(function(i){var a,u,l,c,d,h,p=i.keypoints;return a=o,u=s,l=p[r].y,c=p[r].x,(d=l-a)*d+(h=c-u)*h<=e})}var N2=Hr.reduce(function(t,e,n){return t[e]=n,t},{}),eN=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map(function(t){var e=t[0],n=t[1];return[N2[e],N2[n]]}),pp=eN.map(function(t){return t[1]}),T2=eN.map(function(t){return t[0]});function E2(t,e,n){return t<e?e:t>n?n:t}function fp(t,e,n,r){return{y:E2(Math.round(t.y/e),0,n-1),x:E2(Math.round(t.x/e),0,r-1)}}function R2(t,e){return{x:t.x+e.x,y:t.y+e.y}}function _2(t,e,n,r,s,o,i,a){a===void 0&&(a=2);for(var u=r.shape,l=u[0],c=u[1],d={y:e.y,x:e.x},h=R2(d,function(v,b,S){var I=S.shape[2]/2;return{y:S.get(b.y,b.x,v),x:S.get(b.y,b.x,I+v)}}(t,fp(d,o,l,c),i)),p=0;p<a;p++){var f=fp(h,o,l,c),y=QI(f.y,f.x,n,s);h=R2({x:f.x*o,y:f.y*o},{x:y.x,y:y.y})}var x=fp(h,o,l,c),g=r.get(x.y,x.x,n);return{y:h.y,x:h.x,name:Hr[n],score:g}}function Bq(t,e,n,r,s,o){var i=e.shape[2],a=pp.length,u=new Array(i),l=t.part,c=t.score,d=ZI(l,r,n);u[l.id]={score:c,name:Hr[l.id],y:d.y,x:d.x};for(var h=a-1;h>=0;--h){var p=pp[h],f=T2[h];u[p]&&!u[f]&&(u[f]=_2(h,u[p],f,e,n,r,o))}for(h=0;h<a;++h)p=T2[h],f=pp[h],u[p]&&!u[f]&&(u[f]=_2(h,u[p],f,e,n,r,s));return u}function Mq(t,e,n){return n.reduce(function(r,s,o){var i=s.y,a=s.x,u=s.score;return JI(t,e,{y:i,x:a},o)||(r+=u),r},0)/n.length}function Vq(t,e,n,r,s,o,i,a){return i===void 0&&(i=.5),a===void 0&&(a=20),_e(this,void 0,void 0,function(){var u,l,c,d,h,p,f,y,x,g,v,b;return Pe(this,function(S){switch(S.label){case 0:return[4,zq([t,e,n,r])];case 1:for(u=S.sent(),l=u[0],c=u[1],d=u[2],h=u[3],p=[],f=function(I,E,R){for(var _=R.shape,L=_[0],F=_[1],V=_[2],j=new Fq(L*F*V,function(Ce){return Ce.score}),K=0;K<L;++K)for(var Z=0;Z<F;++Z)for(var ne=0;ne<V;++ne){var ce=R.get(K,Z,ne);ce<I||Lq(ne,ce,K,Z,E,R)&&j.enqueue({score:ce,part:{heatmapY:K,heatmapX:Z,id:ne}})}return j}(i,1,l),y=a*a;p.length<o&&!f.empty();)x=f.dequeue(),g=ZI(x.part,s,c),JI(p,y,g,x.part.id)||(v=Bq(x,l,c,s,d,h),b=Mq(p,y,v),p.push({keypoints:v,score:b}));return[2,p]}})})}function tN(){for(var t,e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];switch(e.length){case 0:t="fn main() ";break;case 1:t="fn main(".concat(e[0]," : i32)");break;default:throw Error("Unreachable")}return t}var Wq=function(){function t(e){this.variableNames=["A","B"],this.size=!0,this.workgroupSize=[32,1,1],this.outputShape=[e[0],1],this.dispatchLayout=ae(this.outputShape),this.dispatch=te(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="getpointsConfidenceOp"}return t.prototype.getUserCode=function(){return`
        `.concat(tN("index"),` {
          if (index < uniforms.size) {
            let y = B[index * 2];
            let x = B[index * 2 + 1];
            let outIndex = y * uniforms.aShape.x * uniforms.aShape.z + x * uniforms.aShape.z + index;
            result[index] = A[outIndex];
          }
        }
        `)},t}();function Uq(t,e){if(Ji()instanceof fa)return function(n,r){var s=Ji(),o=new Wq(r.shape),i=s.runWebGPUProgram(o,[n,r],"float32");return mn().makeTensorFromTensorInfo(i)}(t,e);throw new Error("getPointsConfidenceWebGPU is not supported in this backend!")}var Gq=function(){function t(e){if(this.variableNames=["A","B"],this.size=!0,this.supportedLastDimension=2,e.length!==2||e[1]!==this.supportedLastDimension)throw new Error("GetOffsetVectorsProgram only supports shape of [x, ".concat(this.supportedLastDimension,"], but current shape is ").concat(e));this.workgroupSize=[32,1,1],this.outputShape=e;var n=[e[0],1];this.dispatchLayout=ae(n),this.dispatch=te(this.dispatchLayout,n,this.workgroupSize),this.shaderKey="GetOffsetVectors"}return t.prototype.getUserCode=function(){return`
    fn getOffsetPoint(y: i32, x: i32, index: i32) -> vec2<i32> {
      let outIndexY = y * uniforms.bShape.x * uniforms.bShape.y + x * uniforms.bShape.y + index;
      let outIndexX = outIndexY + uniforms.bShape.z;
      let outY = i32(B[outIndexY]);
      let outX = i32(B[outIndexX]);
      return vec2<i32>(outY, outX);
    }

    `.concat(tN("index"),` {
      if (index < uniforms.size) {
        let indexY = index * `).concat(this.supportedLastDimension,`;
        let indexX = indexY + 1;
        let heatmapY = A[indexY];
        let heatmapX = A[indexX];
        let out = getOffsetPoint(i32(heatmapY), i32(heatmapX), index);
        result[indexY] = f32(out[0]);
        result[indexX] = f32(out[1]);
      }
    }
    `)},t}();function Hq(t,e){if(Ji()instanceof fa)return function(n,r){var s=Ji(),o=new Gq(n.shape),i=s.runWebGPUProgram(o,[n,r],"float32");return mn().makeTensorFromTensorInfo(i)}(t,e);throw new Error("getOffsetVectorsGPU is not supported in this backend!")}function nN(t){var e=t.shape,n=e[0],r=e[1],s=e[2];return xe(function(){var o,i,a=H(t,[n*r,s]),u=z$(a,0),l=Pn(Te(u,Ie(r,"int32")),1),c=Pn((o=u,i=r,xe(function(){var d=Te(o,Ie(i,"int32"));return be(o,Y(d,Ie(i,"int32")))})),1);return St([l,c],1)})}function jq(t,e,n){return xe(function(){var r=function(s,o){for(var i=[],a=0;a<Hr.length;a++){var u=s.get(a,0).valueOf(),l=s.get(a,1).valueOf(),c=Kq(u,l,a,o),d=c.x,h=c.y;i.push(h),i.push(d)}return tr(i,[Hr.length,2])}(t,n);return fe(je(Y(t.toTensor(),Ie(e,"int32")),"float32"),r)})}function Kq(t,e,n,r){return{y:r.get(t,e,n),x:r.get(t,e,n+Hr.length)}}function Xq(t,e,n){return _e(this,void 0,void 0,function(){var r,s,o,i,a,u,l,c,d,h;return Pe(this,function(p){switch(p.label){case 0:return r=0,s=nN(t),[4,Promise.all([t.buffer(),e.buffer(),s.buffer()])];case 1:return o=p.sent(),i=o[0],a=o[1],u=o[2],[4,(l=jq(u,n,a)).buffer()];case 2:return c=p.sent(),d=Array.from(function(f,y){for(var x=y.shape[0],g=new Float32Array(x),v=0;v<x;v++){var b=y.get(v,0),S=y.get(v,1);g[v]=f.get(b,S,v)}return g}(i,u)),h=d.map(function(f,y){return r+=f,{y:c.get(y,0),x:c.get(y,1),score:f,name:Hr[y]}}),s.dispose(),l.dispose(),[2,{keypoints:h,score:r/h.length}]}})})}function qq(t,e,n){return _e(this,void 0,void 0,function(){var r,s,o;return Pe(this,function(i){return r=nN(t),s=function(a,u,l){return xe(function(){var c=Hq(a,l);return fe(je(Y(a,Ie(u,"int32")),"float32"),c)})}(r,n,e),o=Uq(t,r),[2,[s,o]]})})}function P2(t,e){return(t-1)%e==0}var A2="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",D2="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function O2(t,e){return function(n,r){return(n-1)%r==0}(t,e)?t:Math.floor(t/e)*e+1}var F2=function(){function t(e,n){this.posenetModel=e;var r=this.posenetModel.inputs[0].shape;T(r[1]===-1&&r[2]===-1,function(){return"Input shape [".concat(r[1],", ").concat(r[2],"] ")+"must both be equal to or -1"});var s,o,i=(s=n.inputResolution,o=n.outputStride,{height:O2(s.height,o),width:O2(s.width,o)});(function(a){T(Aq.indexOf(a)>=0,function(){return"outputStride of ".concat(a," is invalid. ")+"It must be either 8 or 16."})})(n.outputStride),function(a,u){T(P2(a.height,u),function(){return"height of ".concat(a.height," is invalid for output stride ")+"".concat(u,".")}),T(P2(a.width,u),function(){return"width of ".concat(a.width," is invalid for output stride ")+"".concat(u,".")})}(i,n.outputStride),this.inputResolution=i,this.outputStride=n.outputStride,this.architecture=n.architecture}return t.prototype.estimatePoses=function(e,n){return n===void 0&&(n=I2),_e(this,void 0,void 0,function(){return Pe(this,function(r){return[2,this.estimatePosesGPU(e,n,!1)]})})},t.prototype.estimatePosesGPU=function(e,n,r){return n===void 0&&(n=I2),r===void 0&&(r=!1),_e(this,void 0,void 0,function(){var s,o,i,a,u,l,c,d,h,p,f,y,x,g,v,b,S,I;return Pe(this,function(E){switch(E.label){case 0:return s=function(R){var _=R;if(_.maxPoses==null&&(_.maxPoses=1),_.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(_.maxPoses,". Should be > 0."));if(_.maxPoses>1){if((_=He(He({},Dq),_)).scoreThreshold<0||_.scoreThreshold>1)throw new Error("Invalid scoreThreshold ".concat(_.scoreThreshold,". ")+"Should be in range [0.0, 1.0]");if(_.nmsRadius<=0)throw new Error("Invalid nmsRadius ".concat(_.nmsRadius,"."))}return _}(n),e==null?[2,r?[[],[]]:[]]:(this.maxPoses=s.maxPoses,o=tm(e,{outputTensorSize:this.inputResolution,keepAspectRatio:!0,borderMode:"replicate"}),i=o.imageTensor,a=o.padding,u=this.architecture==="ResNet50"?fe(i,Oq):jI(i,[-1,1]),l=this.posenetModel.predict(u),this.architecture==="ResNet50"?(c=Ve(l[2],[0]),d=Ve(l[3],[0]),h=Ve(l[0],[0]),p=Ve(l[1],[0])):(c=Ve(l[0],[0]),d=Ve(l[1],[0]),h=Ve(l[2],[0]),p=Ve(l[3],[0])),f=ts(d),this.maxPoses!==1?[3,5]:r?[4,qq(f,c,this.outputStride)]:[3,2]);case 1:return x=E.sent(),v=x[0],g=x[1],y=[v,g],[3,4];case 2:return[4,Xq(f,c,this.outputStride)];case 3:v=E.sent(),y=[v],E.label=4;case 4:return[3,7];case 5:if(r)throw new Error("GPU renderer only supports single pose!");return[4,Vq(f,c,h,p,this.outputStride,this.maxPoses,s.scoreThreshold,s.nmsRadius)];case 6:y=E.sent(),E.label=7;case 7:if(r){if(s.flipHorizontal===!0)throw new Error("flipHorizontal is not supported!");b=this.getCanvasInfo(ra(e),this.inputResolution,a)}else I=ra(e),S=function(R,_,L,F){var V=_.height,j=_.width,K=V/(L.height*(1-F.top-F.bottom)),Z=j/(L.width*(1-F.left-F.right)),ne=-F.top*L.height,ce=-F.left*L.width;if(Z===1&&K===1&&ne===0&&ce===0)return R;for(var Ce=0,X=R;Ce<X.length;Ce++)for(var ie=0,me=X[Ce].keypoints;ie<me.length;ie++){var Ne=me[ie];Ne.x=(Ne.x+ce)*Z,Ne.y=(Ne.y+ne)*K}return R}(y,I,this.inputResolution,a),s.flipHorizontal&&(S=function(R,_){for(var L=0,F=R;L<F.length;L++)for(var V=0,j=F[L].keypoints;V<j.length;V++){var K=j[V];K.x=_.width-1-K.x}return R}(S,I));return i.dispose(),u.dispose(),Le(l),c.dispose(),d.dispose(),h.dispose(),p.dispose(),f.dispose(),[2,r?[y,b]:S]}})})},t.prototype.getCanvasInfo=function(e,n,r){var s=e.height,o=e.width,i=s/(n.height*(1-r.top-r.bottom)),a=o/(n.width*(1-r.left-r.right)),u=-r.top*n.height;return[-r.left*n.width,u,a,i,e.width,e.height]},t.prototype.dispose=function(){this.posenetModel.dispose()},t.prototype.reset=function(){},t}();function Yq(t){return t===void 0&&(t=b2),_e(this,void 0,void 0,function(){var e,n,r,s,o;return Pe(this,function(i){switch(i.label){case 0:return(e=function(c){var d=c||b2;if(d.architecture==null&&(d.architecture="MobileNetV1"),C2.indexOf(d.architecture)<0)throw new Error("Invalid architecture ".concat(d.architecture,". ")+"Should be one of ".concat(C2));if(d.inputResolution==null&&(d.inputResolution={height:257,width:257}),d.outputStride==null&&(d.outputStride=16),S2[d.architecture].indexOf(d.outputStride)<0)throw new Error("Invalid outputStride ".concat(d.outputStride,". ")+"Should be one of ".concat(S2[d.architecture]," ")+"for architecture ".concat(d.architecture,"."));if(d.multiplier==null&&(d.multiplier=1),$2[d.architecture].indexOf(d.multiplier)<0)throw new Error("Invalid multiplier ".concat(d.multiplier,". ")+"Should be one of ".concat($2[d.architecture]," ")+"for architecture ".concat(d.architecture,"."));if(d.quantBytes==null&&(d.quantBytes=4),k2.indexOf(d.quantBytes)<0)throw new Error("Invalid quantBytes ".concat(d.quantBytes,". ")+"Should be one of ".concat(k2," ")+"for architecture ".concat(d.architecture,"."));if(d.architecture==="MobileNetV1"&&d.outputStride===32&&d.multiplier!==1)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return d}(t)).architecture!=="ResNet50"?[3,2]:(a=e.outputStride,u=e.quantBytes,l="model-stride".concat(a,".json"),n=u===4?D2+"float/"+l:D2+"quant".concat(u,"/")+l,[4,ta(e.modelUrl||n)]);case 1:return r=i.sent(),[2,new F2(r,e)];case 2:return s=function(c,d,h){var p={1:"100",.75:"075",.5:"050"},f="model-stride".concat(c,".json");return h===4?A2+"float/".concat(p[d],"/")+f:A2+"quant".concat(h,"/").concat(p[d],"/")+f}(e.outputStride,e.multiplier,e.quantBytes),[4,ta(e.modelUrl||s)];case 3:return o=i.sent(),[2,new F2(o,e)]}var a,u,l})})}function Qq(t,e){return _e(this,void 0,void 0,function(){var n,r;return Pe(this,function(s){switch(t){case Wr.PoseNet:return[2,Yq(e)];case Wr.BlazePose:if(r=void 0,(n=e)!=null){if(n.runtime==="tfjs")return[2,kq(e)];if(n.runtime==="mediapipe")return[2,QX(e)];r=n.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(r));case Wr.MoveNet:return[2,Pq(e)];default:throw new Error("".concat(t," is not a supported model name."))}})})}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bo={},jl={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Zq(t,e){bo[t]=e}function Cr(t,e){if(!(t in bo)||e!=null){const r=e7(t,e);if(r!==null)bo[t]=r;else return console.log("Could not get context for WebGL version",t),null}const n=bo[t];return n==null||n.isContextLost()?(delete bo[t],Cr(t)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),bo[t])}function Jq(t){if(!M().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&t===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function e7(t,e){if(t!==1&&t!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=e??Jq(t);return n.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete bo[t]},!1),M().getBool("SOFTWARE_WEBGL_ENABLED")&&(jl.failIfMajorPerformanceCaveat=!1),t===1?n.getContext("webgl",jl)||n.getContext("experimental-webgl",jl):n.getContext("webgl2",jl)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Hu;(function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"})(Hu||(Hu={}));var Dn;(function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"})(Dn||(Dn={}));var Nt;(function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Nt||(Nt={}));function ll(t,e){return[e,t]}function t7(t,e){return t*e}function Kl(t){const e=U(t),n=Math.ceil(e/4);return yf(n)}function ya(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function n7(t,e){const[n,r]=ya(t,e);return n*r*4}function K0(t,e){const n=t;let r,s,o,i,a,u,l,c,d,h;return M().getNumber("WEBGL_VERSION")===2?(r=n.R32F,s=n.R16F,o=n.RGBA16F,i=n.RGBA32F,a=n.RED,l=4,c=1,d=n.HALF_FLOAT,h=n.FLOAT,u=n.RGBA8):(r=t.RGBA,s=t.RGBA,o=t.RGBA,i=n.RGBA,a=t.RGBA,l=4,c=4,d=e!=null?e.HALF_FLOAT_OES:null,h=t.FLOAT,u=t.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:d,textureTypeFloat:h}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ue(t,e){const n=e();return M().getBool("DEBUG")&&r7(t),n}function r7(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+a7(t,e))}const s7=596e-10,o7=65504;function i7(t){return!!(M().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||t===0||s7<Math.abs(t)&&Math.abs(t)<o7)}function a7(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Xl(t,e){return ws(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function u7(t,e){const n=ws(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ue(t,()=>t.shaderSource(n,e)),ue(t,()=>t.compileShader(n)),t.getShaderParameter(n,t.COMPILE_STATUS)===!1)throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function l7(t,e){const n=ws(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ue(t,()=>t.shaderSource(n,e)),ue(t,()=>t.compileShader(n)),M().get("ENGINE_COMPILE_ONLY"))return n;if(t.getShaderParameter(n,t.COMPILE_STATUS)===!1)throw rN(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const c7=/ERROR: [0-9]+:([0-9]+):/g;function rN(t,e){const n=c7.exec(e);if(n==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(t);return}const r=+n[1],s=t.split(`
`),o=s.length.toString().length+2,i=s.map((d,h)=>zi((h+1).toString(),o)+d);let a=0;for(let d=0;d<i.length;d++)a=Math.max(i[d].length,a);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${zi(l[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function d7(t){return ws(t,()=>t.createProgram(),"Unable to create WebGLProgram.")}function h7(t,e){if(ue(t,()=>t.linkProgram(e)),!M().get("ENGINE_COMPILE_ONLY")&&t.getProgramParameter(e,t.LINK_STATUS)===!1)throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function mp(t,e){if(ue(t,()=>t.validateProgram(e)),t.getProgramParameter(e,t.VALIDATE_STATUS)===!1)throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function p7(t,e){const n=ws(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return ue(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),ue(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),n}function f7(t,e){const n=ws(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return ue(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)),ue(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),n}function m7(t){return ws(t,()=>t.createTexture(),"Unable to create WebGLTexture.")}function g7(t,e){const n=M().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){const r=`[${t}x${e}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(t>n||e>n){const r=`[${t}x${e}]`,s=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+s+".")}}function y7(t){return ws(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function L2(t,e,n,r,s,o,i){const a=t.getAttribLocation(e,n);return a===-1?!1:(ue(t,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),ue(t,()=>t.vertexAttribPointer(a,s,t.FLOAT,!1,o,i)),ue(t,()=>t.enableVertexAttribArray(a)),!0)}function x7(t,e,n){S7(t,n),ue(t,()=>t.activeTexture(t.TEXTURE0+n)),ue(t,()=>t.bindTexture(t.TEXTURE_2D,e))}function v7(t,e,n){return ws(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.')}function w7(t,e,n){return t.getUniformLocation(e,n)}function b7(t,e,n,r){ue(t,()=>x7(t,e,r)),ue(t,()=>t.uniform1i(n,r))}function gp(t,e,n){ue(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),ue(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function z2(t,e){ue(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),ue(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function ql(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+C7(t,e))}function C7(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function ws(t,e,n){const r=ue(t,()=>e());if(r==null)throw new Error(n);return r}function S7(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n){const s=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${s}.`)}}function sa(t,e=2){return U(t.slice(0,t.length-e))}function oa(t){if(t.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Yl(t){let e=[1,1,1];return t.length===0||t.length===1&&t[0]===1||(e=[sa(t),...oa(t)]),e}function $7(t,e=!1){let n=M().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=M().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&M().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),e&&(n=n*2,r=r*2,t=t.map((a,u)=>u>=t.length-2?og(t[u]):t[u]),t.length===1&&(t=[2,t[0]])),t.length!==2&&(t=eo(t).newShape);let s=U(t),o=null;t.length<=1&&s<=n?o=[1,s]:t.length===2&&t[0]<=n&&t[1]<=n?o=t:t.length===3&&t[0]*t[1]<=n&&t[2]<=n?o=[t[0]*t[1],t[2]]:t.length===3&&t[0]<=n&&t[1]*t[2]<=n?o=[t[0],t[1]*t[2]]:t.length===4&&t[0]*t[1]*t[2]<=n&&t[3]<=n?o=[t[0]*t[1]*t[2],t[3]]:t.length===4&&t[0]<=n&&t[1]*t[2]*t[3]<=n&&(o=[t[0],t[1]*t[2]*t[3]]);const i=o!=null&&Math.max(...o)>r&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(o==null||i)if(e){const a=sa(t);let u=2,l=2;t.length&&([u,l]=oa(t)),s=a*(u/2)*(l/2),o=yf(s).map(c=>c*2)}else o=yf(s);return o}function Ql(t){return t%2===0}function ud(t,e){if(t=t.slice(-2),e=e.slice(-2),ze(t,e)||!t.length||!e.length||t[0]===0||t[1]===0||e[0]===0||e[1]===0)return!0;if(t.length!==e.length){const n=t[t.length-1],r=e[e.length-1];if(n===r||Ql(n)&&Ql(r)&&(t[0]===1||e[0]===1))return!0}return t[1]===e[1]&&Ql(t[0])&&Ql(e[0])}let yp,xp;function k7(t){if(yp==null){const e=Cr(t);yp=e.getParameter(e.MAX_TEXTURE_SIZE)}return yp}function I7(t){if(xp==null){const e=Cr(t);xp=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,xp)}function N7(t){if(t===0)return 0;let e;const n=Cr(t);return Zn(n,"EXT_disjoint_timer_query_webgl2")&&t===2?e=2:Zn(n,"EXT_disjoint_timer_query")?e=1:e=0,e}function Zn(t,e){return t.getExtension(e)!=null}function B2(t){try{if(Cr(t)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function T7(t){if(t===0)return!1;const e=Cr(t);if(t===1){if(!Zn(e,"OES_texture_float"))return!1}else if(!Zn(e,"EXT_color_buffer_float"))return!1;return sm(e)}function E7(t){if(t===0)return!1;const e=Cr(t);if(t===1){if(!Zn(e,"OES_texture_float")||!Zn(e,"WEBGL_color_buffer_float"))return!1}else{if(Zn(e,"EXT_color_buffer_float"))return sm(e);const r="EXT_color_buffer_half_float";if(Zn(e,r)){const s=e.getExtension(r);return R7(e,s)}return!1}return sm(e)}function sm(t){const e=K0(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,o),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(o),i}function R7(t,e){const n=K0(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,i),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(i),a}function _7(t){return t!==2?!1:Cr(t).fenceSync!=null}function cl(t,e){Array.isArray(t)||(t=[t]),t.forEach(n=>{n!=null&&T(n.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pe=M();pe.registerFlag("HAS_WEBGL",()=>pe.getNumber("WEBGL_VERSION")>0);pe.registerFlag("WEBGL_VERSION",()=>B2(2)?2:B2(1)?1:0);pe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);pe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>pe.get("WEBGL_VERSION")===2);pe.registerFlag("WEBGL_CPU_FORWARD",()=>!0);pe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);pe.registerFlag("WEBGL_PACK",()=>pe.getBool("HAS_WEBGL"));pe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_CLIP",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_REDUCE",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_LAZILY_UNPACK",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_CONV_IM2COL",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>k7(pe.getNumber("WEBGL_VERSION")));pe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>I7(pe.getNumber("WEBGL_VERSION")));pe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=pe.getNumber("WEBGL_VERSION");return t===0?0:N7(t)});pe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>pe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!v$());pe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>T7(pe.getNumber("WEBGL_VERSION")));pe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>pe.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:pe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));pe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>E7(pe.getNumber("WEBGL_VERSION")));pe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>_7(pe.getNumber("WEBGL_VERSION")));pe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>pe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);pe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(typeof t!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${t}.`);if(t<0&&t!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)});pe.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>v$()?1:-1,t=>{if(typeof t!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${t}.`);if(t<0&&t!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)});pe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);pe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);pe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);pe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);pe.registerFlag("WEBGL_EXP_CONV",()=>!1);pe.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>pe.getBool("IS_TEST"));pe.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);pe.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);pe.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);pe.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yt(){let t,e,n,r,s,o,i,a,u,l;return M().getNumber("WEBGL_VERSION")===2?(t="#version 300 es",e="in",n="out",r="in",s="texture",o="outputColor",i="out vec4 outputColor;",a=M().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(t="",e="attribute",n="varying",r="varying",s="texture2D",o="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:s,output:o,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:u,defineRound:l}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function si(t,e,n="index"){const r=lt(e);return r.map((s,o)=>{const i=`int ${t[o]} = ${n} / ${s}`,a=o===r.length-1?`int ${t[o+1]} = ${n} - ${t[o]} * ${s}`:`index -= ${t[o]} * ${s}`;return`${i}; ${a};`}).join("")}function Yd(t,e,n="index"){const r=lt(e);return r.map((s,o)=>{const i=`int ${t[o]} = ${n} / outShapeStrides[${o}]`,a=o===r.length-1?`int ${t[o+1]} = ${n} - ${t[o]} * outShapeStrides[${o}]`:`index -= ${t[o]} * outShapeStrides[${o}]`;return`${i}; ${a};`}).join("")}function P7(t,e){const n=t.length,r=t.map(o=>`${e}[${o}]`),s=new Array(n-1);s[n-2]=r[n-1];for(let o=n-3;o>=0;--o)s[o]=`(${s[o+1]} * ${r[o+1]})`;return s}function A7(t,e,n="index"){const r=t.map((o,i)=>i),s=P7(r,e);return s.map((o,i)=>{const a=`int ${t[i]} = ${n} / ${s[i]}`,u=i===s.length-1?`int ${t[i+1]} = ${n} - ${t[i]} * ${s[i]}`:`index -= ${t[i]} * ${s[i]}`;return`${a}; ${u};`}).join("")}function X0(t){const e=lt(t).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function q0(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const sN=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:oN}=LB;function D7(t,e,n){const r=[];if(t.forEach(p=>{const f=U(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?r.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(r.push(`uniform sampler2D ${p.name};`),r.push(`uniform int offset${p.name};`)),n.enableShapeUniforms){const{uniformShape:y}=Y0(n.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(y.length){case 1:r.push(`uniform int ${p.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${p.name}Shape;`);break}r.push(`uniform ivec2 ${p.name}TexShape;`)}}),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(p=>{r.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const s=r.join(`
`),o=t.map(p=>O7(p,e,n.packedInputs,n.enableShapeUniforms)).join(`
`),i=e.texShape,a=Yt(),u=z7(a);let l,c,d=V7(a);return e.isPacked?(l=F7(e.logicalShape,i,n.enableShapeUniforms),c=M7(a)):(l=L7(e.logicalShape,i,n.enableShapeUniforms),c=B7(a)),n.packedInputs&&(d+=H7),[d,u,c,s,l,o,n.userCode].join(`
`)}function xa(t,e=!1){const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return rY(t,e);case 1:return oY(t,e);case 2:return aY(t,e);case 3:return lY(t,e);case 4:return dY(t,e);case 5:return hY(t);case 6:return pY(t);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function iN(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return nY(t);case 1:return sY(t,e);case 2:return iY(t,e);case 3:return uY(t,e);default:return cY(t,e)}}function O7(t,e,n=!1,r){let s="";n?s+=iN(t,r):s+=xa(t,r);const o=t.shapeInfo.logicalShape,i=e.logicalShape;return o.length<=i.length&&(n?s+=fY(t,e):s+=mY(t,e)),s}function F7(t,e,n){switch(t.length){case 0:return aN();case 1:return j7(t,e,n);case 2:return eY(t,e,n);case 3:return X7(t,e,n);default:return Y7(t,e,n)}}function L7(t,e,n){switch(t.length){case 0:return aN();case 1:return K7(t,e,n);case 2:return tY(t,e,n);case 3:return q7(t,e,n);case 4:return Q7(t,e,n);case 5:return Z7(t,e);case 6:return J7(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}function z7(t){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${t.texture2D}(textureSampler, uv).r;
    }
  `}function B7(t){return`
    void setOutput(float val) {
      ${t.output} = vec4(val, 0, 0, 0);
    }
  `}function M7(t){return`
    void setOutput(vec4 val) {
      ${t.output} = val;
    }
  `}function V7(t){return`${t.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${t.varyingFs} vec2 resultUV;
    ${t.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${t.defineSpecialNaN}
    ${t.defineSpecialInf}
    ${t.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${W7}
    ${U7}
    ${G7}
  `}const W7=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,U7=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,G7=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,H7=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function aN(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function j7(t,e,n){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return r[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function K7(t,e,n){return e[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function X7(t,e,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[2]/2),o=s*Math.ceil(t[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec3(b, r, c);
    }
  `}function q7(t,e,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Yd(["r","c","d"],t)}
    return ivec3(r, c, d);
  }
`;const r=si(["r","c","d"],t);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function Y7(t,e,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[t.length-1]/2),o=s*Math.ceil(t[t.length-2]/2);let i=o,a="",u="b, r, c";for(let l=2;l<t.length-1;l++)i*=t[t.length-l-1],a=`
      int b${l} = index / ${i};
      index -= b${l} * ${i};
    `+a,u=`b${l}, `+u;return`
    ivec${t.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${a}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec${t.length}(${u});
    }
  `}function Q7(t,e,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Yd(["r","c","d","d2"],t)}
      return ivec4(r, c, d, d2);
    }
  `;const r=si(["r","c","d","d2"],t);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function Z7(t,e){const n=si(["r","c","d","d2","d3"],t);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function J7(t,e){const n=si(["r","c","d","d2","d3","d4"],t);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function eY(t,e,n){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(ze(t,e))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;const s=Math.ceil(t[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec2(r, c);
    }
  `}function tY(t,e,n){return ze(t,e)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:t[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:t[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${t[1]};
      int c = index - r * ${t[1]};
      return ivec2(r, c);
    }
  `}function oi(t){return`offset${t}`}function nY(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=Yt();return`
    vec4 ${n}() {
      return ${r.texture2D}(${e}, halfCR);
    }
  `}function rY(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,o]=t.shapeInfo.texShape;if(s===1&&o===1)return`
      float ${r}() {
        return sampleTexture(${n}, halfCR);
      }
    `;const i=oi(n);if(e)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});
      return sampleTexture(${n}, uv);
    }
  `;const[a,u]=t.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${a}, ${u}, ${i});
      return sampleTexture(${n}, uv);
    }
  `}function sY(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,o=Yt();if(e)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${n}, uv);
    }
  `;const i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${o.texture2D}(${n}, uv);
    }
  `}function oY(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${va(t)}
      }
    `;const s=t.shapeInfo.texShape,o=s[0],i=s[1];if(i===1&&o===1)return`
      float ${r}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;const a=oi(n);return i===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${o}.0);
        return sampleTexture(${n}, uv);
      }
    `:o===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:e?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${a});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${o}, ${i}, index + ${a});
      return sampleTexture(${n}, uv);
    }
  `}function iY(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t.shapeInfo.texShape,i=o[0],a=o[1],u=Yt();if(o!=null&&ze(n,o))return e?`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${u.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${u.texture2D}(${r}, uv);
      }
    `;if(e)return`
    vec4 ${s}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `;const l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],c=Math.ceil(n[1]/2);return`
    vec4 ${s}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `}function aY(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t.shapeInfo.texShape;if(o!=null&&ze(n,o)){if(e)return`
      float ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;const h=o[0],p=o[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${h}.0);
      return sampleTexture(${r}, uv);
    }
  `}const{newShape:i,keptDims:a}=eo(n),u=i;if(u.length<n.length){const h=wa(t,u),p=["row","col"];return`
      ${xa(h,e)}
      float ${s}(int row, int col) {
        return ${s}(${ba(p,a)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${va(t)}
      }
    `;const l=o[0],c=o[1],d=oi(r);return c===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${r}, uv);
    }
  `:l===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:e?`
      float ${s}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${d};
    vec2 uv = uvFromFlat(${l}, ${c}, index);
    return sampleTexture(${r}, uv);
  }
`}function uY(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t.shapeInfo.texShape,i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(n[0]===1){const h=n.slice(1),p=[1,2],f=wa(t,h),y=["b","row","col"];return`
        ${iN(f,e)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${ba(y,p)});
        }
      `}const a=Yt();if(e)return`
    vec4 ${s}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${r}, uv);
    }
  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2),d=c*Math.ceil(n[1]/2);return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${l}, ${d}, ${c}, b, row, col);
      return ${a.texture2D}(${r}, uv);
    }
  `}function lY(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n[1]*n[2],i=n[2],{newShape:a,keptDims:u}=eo(n),l=a;if(l.length<n.length){const y=wa(t,l),x=["row","col","depth"];return`
        ${xa(y,e)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${ba(x,u)});
        }
      `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${i}, 1)));
        ${va(t)}
      }
    `;const c=t.shapeInfo.texShape,d=c[0],h=c[1],p=t.shapeInfo.flatOffset;if(h===o&&p==null)return e?`
      float ${s}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${d}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(h===i&&p==null)return e?`
      float ${s}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `;const f=oi(r);return e?`
    float ${s}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${h}, index);
        return sampleTexture(${r}, uv);
      }
  `}function cY(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=Yt();if(e)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);
    }
  `;const o=t.shapeInfo.logicalShape,i=o.length,a=t.shapeInfo.texShape,u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],l=u[0],c=u[1],d=Math.ceil(o[i-1]/2);let h=d*Math.ceil(o[i-2]/2),p="int b, int row, int col",f=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let y=2;y<i-1;y++)p=`int b${y}, `+p,h*=o[i-y-1],f=`b${y} * ${h} + `+f;return`
    vec4 ${r}(${p}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});
      return ${s.texture2D}(${n}, uv);
    }
  `}function dY(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n[3],i=n[2]*o,a=n[1]*i,{newShape:u,keptDims:l}=eo(n);if(u.length<n.length){const v=wa(t,u),b=["row","col","depth","depth2"];return`
      ${xa(v,e)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${ba(b,l)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${o}, 1)));
        ${va(t)}
      }
    `;const c=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,h=d[0],p=d[1],f=`int stride2 = ${r}Shape[3];`,y=`int stride1 = ${r}Shape[2] * stride2;`,x=`int stride0 = ${r}Shape[1] * stride1;`;if(p===a&&c==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        ${f}
        ${y}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(p===o&&c==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${r}, uv);
      }
    `;const g=oi(r);return e?`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${y}
      ${x}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${g});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${h}, ${p}, index + ${g});
      return sampleTexture(${r}, uv);
    }
  `}function hY(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],o=e[3]*s,i=e[2]*o,a=e[1]*i,{newShape:u,keptDims:l}=eo(e);if(u.length<e.length){const y=wa(t,u),x=["row","col","depth","depth2","depth3"];return`
      ${xa(y)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${ba(x,l)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${o}, ${s})) +
          depth3;
        ${va(t)}
      }
    `;const c=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,h=d[0],p=d[1];if(p===a&&c==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${o}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(p===s&&c==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;const f=oi(n);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${o} +
          depth2 * ${s} + depth3 + ${f};
      vec2 uv = uvFromFlat(${h}, ${p}, index);
      return sampleTexture(${n}, uv);
    }
  `}function pY(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:o}=eo(e);if(s.length<e.length){const x=wa(t,s),g=["row","col","depth","depth2","depth3","depth4"];return`
      ${xa(x)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${ba(g,o)});
      }
    `}const i=e[5],a=e[4]*i,u=e[3]*a,l=e[2]*u,c=e[1]*l;if(t.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${l}, ${u}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${va(t)}
      }
    `;const d=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,p=h[0],f=h[1];if(f===c&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${u}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===i&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;const y=oi(n);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${l} + depth * ${u} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${y};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function va(t){const e=t.name,n=U(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function fY(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",o=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,a=oN(t.shapeInfo.logicalShape,e.logicalShape),u=Ge(i),l=i-o;let c;const d=["x","y","z","w","u","v"];o===0?c="":i<2&&a.length>=1?c="coords = 0;":c=a.map(v=>`coords.${d[v+l]} = 0;`).join(`
`);let h="";i<2&&o>0?h="coords":h=t.shapeInfo.logicalShape.map((v,b)=>`coords.${d[b+l]}`).join(", ");let p="return outputValue;";const y=U(t.shapeInfo.logicalShape)===1,g=U(e.logicalShape)===1;if(o===1&&!y&&!g)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(y&&!g)i===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(a.length){const v=o-2,b=o-1;a.indexOf(v)>-1&&a.indexOf(b)>-1?p="return vec4(outputValue.x);":a.indexOf(v)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(b)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${s}() {
      ${u} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${r}(${h});
      ${p}
    }
  `}function mY(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",o=e.texShape,i=t.shapeInfo.texShape,a=t.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!t.shapeInfo.isUniform&&a===u&&t.shapeInfo.flatOffset==null&&ze(i,o))return`
      float ${s}() {
        return sampleTexture(${n}, resultUV);
      }
    `;const l=Ge(u),c=oN(t.shapeInfo.logicalShape,e.logicalShape),d=u-a;let h;const p=["x","y","z","w","u","v"];a===0?h="":u<2&&c.length>=1?h="coords = 0;":h=c.map(y=>`coords.${p[y+d]} = 0;`).join(`
`);let f="";return u<2&&a>0?f="coords":f=t.shapeInfo.logicalShape.map((y,x)=>`coords.${p[x+d]}`).join(", "),`
    float ${s}() {
      ${l} coords = getOutputCoords();
      ${h}
      return get${r}(${f});
    }
  `}function Ge(t){if(t<=1)return"int";if(t===2)return"ivec2";if(t===3)return"ivec3";if(t===4)return"ivec4";if(t===5)return"ivec5";if(t===6)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function Y0(t,e,n){const{newShape:r,keptDims:s}=eo(e),o=e.length,i=t&&o===3&&e[0]===1,a=i?e.slice(1):r,u=!t&&o>1&&!ze(e,n)&&r.length<o||i;return{useSqueezeShape:u,uniformShape:u?a:e,keptDims:s}}function wa(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function ba(t,e){return e.map(n=>t[n]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gY(t,e,n,r){const s=n.map((c,d)=>{const h={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(h.flatOffset=c.texData.slice.flatOffset),{name:e.variableNames[d],shapeInfo:h}}),o=s.map(c=>c.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},a=D7(s,i,e),u=l7(t.gl,a),l=t.createProgram(u);return M().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:u,source:a,webGLProgram:l,inShapeInfos:o,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(t.buildVao(l),Object.assign({program:e,fragmentShader:u,source:a,webGLProgram:l,inShapeInfos:o,outShapeInfo:i},uN(t,e,l)))}function uN(t,e,n){const r=[],s=[];let o,i,a,u=null,l=null;l=t.getUniformLocation(n,"NAN",!1),M().getNumber("WEBGL_VERSION")===1&&(u=t.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const d of e.variableNames){const h={name:d,uniform:t.getUniformLocation(n,d,c),offset:t.getUniformLocation(n,`offset${d}`,c)};e.enableShapeUniforms&&(h.shape=t.getUniformLocation(n,`${d}Shape`,c),h.texShape=t.getUniformLocation(n,`${d}TexShape`,c)),r.push(h)}if(e.enableShapeUniforms&&(o=t.getUniformLocation(n,"outShape",c),a=t.getUniformLocation(n,"outShapeStrides",c),i=t.getUniformLocation(n,"outTexShape",c)),e.customUniforms)for(const d of e.customUniforms)s.push(t.getUniformLocation(n,d.name,c));return{variablesLocations:r,customUniformLocations:s,infLoc:u,nanLoc:l,outShapeLocation:o,outShapeStridesLocation:a,outTexShapeLocation:i}}function M2(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((n,r)=>{const s=n.logicalShape,o=e[r],i=o.shape;if(!ze(s,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${i} must match`);if(n.isUniform&&o.isUniform)return;const a=n.texShape,u=o.isUniform?null:o.texData.texShape;if(!ze(a,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${u} must match`)})}function yY(t,e,n,r,s){e.program.enableShapeUniforms||(M2(e.inShapeInfos,n),M2([e.outShapeInfo],[r]));const o=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(o.texture,i[0],i[1]):t.setOutputMatrixTexture(o.texture,i[0],i[1]),t.setProgram(e.webGLProgram),t.bindVertexArray(e.webGLProgram.vao),M().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&t.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&t.gl.uniform1f(e.nanLoc,NaN);for(let u=0;u<n.length;++u){const l=n[u],{uniform:c,offset:d,shape:h,texShape:p}=e.variablesLocations[u];if(h){const{uniformShape:f}=Y0(e.program.packedInputs,l.shape,l.texData.texShape);switch(f.length){case 1:t.gl.uniform1iv(h,new Int32Array(f));break;case 2:t.gl.uniform2iv(h,new Int32Array(f));break;case 3:t.gl.uniform3iv(h,new Int32Array(f));break;case 4:t.gl.uniform4iv(h,new Int32Array(f));break}}if(p&&t.gl.uniform2i(p,l.texData.texShape[0],l.texData.texShape[1]),c!=null){if(l.isUniform){if(U(l.shape)<2)t.gl.uniform1f(c,l.uniformValues[0]);else{let f=l.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),t.gl.uniform1fv(c,f)}continue}l.texData.slice!=null&&d!=null&&t.gl.uniform1i(d,l.texData.slice.flatOffset),t.setInputMatrixTexture(l.texData.texture.texture,c,u)}}const a=e.outShapeLocation;if(a)switch(r.shape.length){case 1:t.gl.uniform1iv(a,new Int32Array(r.shape));break;case 2:t.gl.uniform2iv(a,new Int32Array(r.shape));break;case 3:t.gl.uniform3iv(a,new Int32Array(r.shape));break;case 4:t.gl.uniform4iv(a,new Int32Array(r.shape));break}if(e.outShapeStridesLocation){const u=lt(r.shape);switch(r.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(u));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(u));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(u));break}}if(e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&s)for(let u=0;u<e.program.customUniforms.length;++u){const l=e.program.customUniforms[u],c=e.customUniformLocations[u],d=s[u];if(l.type==="float")t.gl.uniform1fv(c,d);else if(l.type==="vec2")t.gl.uniform2fv(c,d);else if(l.type==="vec3")t.gl.uniform3fv(c,d);else if(l.type==="vec4")t.gl.uniform4fv(c,d);else if(l.type==="int")t.gl.uniform1iv(c,d);else if(l.type==="ivec2")t.gl.uniform2iv(c,d);else if(l.type==="ivec3")t.gl.uniform3iv(c,d);else if(l.type==="ivec4")t.gl.uniform4iv(c,d);else throw Error(`uniform type ${l.type} is not supported yet.`)}t.executeProgram()}function xY(t,e,n){let r="";e.concat(n).forEach(i=>{const a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!i.isUniform){const u=i.texData.texShape,{useSqueezeShape:l,uniformShape:c,keptDims:d}=Y0(t.packedInputs,i.shape,u);let h="",p="",f="";if(c.length===1&&t.packedInputs){const I=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];h=`${I[0]>1}_${I[1]>1}`}else if(c.length===2&&!t.packedInputs)p=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!t.packedInputs){const I=lt(c);f=`${I[0]===u[1]}_${I[I.length-1]===u[1]}`}const y=i.shape.length,x=c.length===2&&ze(i.shape,u),g=U(i.shape)===1,v=ea(i.shape,n.shape),b=!t.packedInputs&&y===n.shape.length&&ze(u,n.texData.texShape),S=t.packedInputs||c.length>2?"":`${u[0]>1}_${u[1]>1}`;r+=`${y}_${b}_${l?d:""}_${c.length}_${g}_${v}_${x}_${h}_${p}_${f}_${S}_${a}`}else{const u=i.isUniform?"uniform":i.texData.texShape;r+=`${i.shape}_${u}_${a}`}});const s=t.userCode;let o=t.constructor.name;return o+="_"+r+"_"+s+`${M().getNumber("WEBGL_VERSION")}`,o}function Bt(t){return M().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&t<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vY{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Hu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Yt();this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Yd(["r","c","d"],e):si(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wY{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Hu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Yt();this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Yd(["r","c","d"],e):si(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bY{constructor(e){this.variableNames=["A"],this.outTexUsage=Dn.DOWNLOAD;const n=Yt();this.outputShape=e,this.userCode=`
      ${sN}

      void main() {
        float x = getAAtOutCoords();
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CY{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Dn.DOWNLOAD;const n=Yt();this.outputShape=e,this.userCode=`
      ${sN}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SY={R:0,G:1,B:2,A:3};class V2{constructor(e,n=!1,r="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Yt();this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length);let o="result";n&&(o="floor(result * 255. + 0.5)");let i="";for(let a=0;a<r.length;a++){const u=r[a];i+=`
          if(offset == ${a}) {
            result = values[${SY[u]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?q0():X0(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${r.length});

        flatIndex = idiv(flatIndex, ${r.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${s.texture2D}(A, uv);
          ${i}
        }
        ${s.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $Y{constructor(e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Yt();this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length);let s="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){const u=i*2+a;s+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?q0():X0(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${r.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kY(t){const e=Yt(),n=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return u7(t,n)}function IY(t){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return p7(t,e)}function NY(t){const e=new Uint16Array([0,1,2,2,1,3]);return f7(t,e)}function dl(t,e,n,r,s,o){g7(e,n);const i=m7(t),a=t.TEXTURE_2D;return ue(t,()=>t.bindTexture(a,i)),ue(t,()=>t.texParameteri(a,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),ue(t,()=>t.texParameteri(a,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),ue(t,()=>t.texParameteri(a,t.TEXTURE_MIN_FILTER,t.NEAREST)),ue(t,()=>t.texParameteri(a,t.TEXTURE_MAG_FILTER,t.NEAREST)),M().getNumber("WEBGL_VERSION")===1?ue(t,()=>t.texImage2D(a,0,r,e,n,0,s,o,null)):ue(t,()=>t.texStorage2D(a,1,r,e,n)),ue(t,()=>t.bindTexture(t.TEXTURE_2D,null)),{texture:i,texShape:[n,e]}}function lN(t){return t.internalFormatFloat}function TY(t,e,n,r){const[s,o]=ll(e,n);return dl(t,s,o,lN(r),r.textureFormatFloat,t.FLOAT)}function cN(t){return t.internalFormatHalfFloat}function EY(t,e,n,r){const[s,o]=ll(e,n);return dl(t,s,o,cN(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function dN(t){return t.downloadTextureFormat}function RY(t,e,n,r){const[s,o]=ll(e,n);return dl(t,s,o,dN(r),t.RGBA,t.UNSIGNED_BYTE)}function hN(t){return t.internalFormatPackedFloat}function _Y(t,e,n,r){const[s,o]=ya(e,n);return dl(t,s,o,hN(r),t.RGBA,t.FLOAT)}function pN(t){return t.internalFormatPackedHalfFloat}function PY(t,e,n,r){const[s,o]=ya(e,n);return dl(t,s,o,pN(r),t.RGBA,r.textureTypeHalfFloat)}function AY(t,e,n){return ue(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),L2(t,e,"clipSpacePos",n,3,20,0)&&L2(t,e,"uv",n,2,20,12)}function DY(t,e,n,r,s,o){ue(t,()=>t.bindTexture(t.TEXTURE_2D,e));let i,a,u;s instanceof Uint8Array?(i=new Uint8Array(n*r*4),a=t.UNSIGNED_BYTE,u=t.RGBA):(i=new Float32Array(n*r*4),a=t.FLOAT,u=o.internalFormatPackedFloat),i.set(s),M().getNumber("WEBGL_VERSION")===2?ue(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,r,t.RGBA,a,i)):ue(t,()=>t.texImage2D(t.TEXTURE_2D,0,u,n,r,0,t.RGBA,a,i)),ue(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function OY(t,e,n){ue(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?M().getNumber("WEBGL_VERSION")===2?ue(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data)):ue(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):M().getNumber("WEBGL_VERSION")===2?ue(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n)):ue(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),ue(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function FY(t,e,n,r){const s=t.createBuffer();ue(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,s));const a=4*4*e*n;return ue(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,a,t.STREAM_READ)),ue(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),ue(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),s}function LY(t,e,n){const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function zY(t,e,n,r){const[s,o]=ll(e,n),i=4,a=new Uint8Array(t7(e*n,i));return ue(t,()=>t.readPixels(0,0,s,o,r.downloadTextureFormat,t.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function BY(t,e,n,r,s,o,i,a){const u=t,l=new Float32Array(n7(o,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function MY(t,e,n){const r=new Float32Array(e*n*4);return ue(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r)),r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vp{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const n=M().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,Zq(n,e)):this.gl=Cr(n),e=this.gl,M().getNumber("WEBGL_VERSION")===2){const o=e;this.createVertexArray=()=>ue(o,()=>o.createVertexArray()),this.bindVertexArray=i=>ue(o,()=>o.bindVertexArray(i)),this.deleteVertexArray=i=>ue(o,()=>o.deleteVertexArray(i)),this.getVertexArray=()=>ue(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(e!=null){const o=e.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>ue(e,()=>o.createVertexArrayOES()),this.bindVertexArray=i=>ue(e,()=>o.bindVertexArrayOES(i)),this.deleteVertexArray=i=>ue(e,()=>o.deleteVertexArrayOES(i)),this.getVertexArray=()=>ue(e,()=>e.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let r="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),M().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=Xl(this.gl,o),Zn(this.gl,i))this.textureHalfFloatExtension=Xl(this.gl,i);else if(M().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),Zn(this.gl,s))this.colorBufferHalfFloatExtension=Xl(this.gl,s);else if(M().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",Zn(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(Zn(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=IY(this.gl),this.indexBuffer=NY(this.gl),this.framebuffer=y7(this.gl),this.textureConfig=K0(this.gl,this.textureHalfFloatExtension)}get debug(){return M().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;ue(e,()=>e.finish()),ue(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ue(e,()=>e.deleteFramebuffer(this.framebuffer)),ue(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ue(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ue(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,n){return this.throwIfDisposed(),TY(this.gl,e,n,this.textureConfig)}createFloat16MatrixTexture(e,n){return this.throwIfDisposed(),EY(this.gl,e,n,this.textureConfig)}createUnsignedBytesMatrixTexture(e,n){return this.throwIfDisposed(),RY(this.gl,e,n,this.textureConfig)}uploadPixelDataToTexture(e,n){this.throwIfDisposed(),OY(this.gl,e,n)}uploadDenseMatrixToTexture(e,n,r,s){this.throwIfDisposed(),DY(this.gl,e,n,r,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,n){return this.throwIfDisposed(),PY(this.gl,e,n,this.textureConfig)}createPackedMatrixTexture(e,n){return this.throwIfDisposed(),_Y(this.gl,e,n,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(z2(this.gl,this.framebuffer),this.outputTexture=null),ue(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,n,r){return this.downloadMatrixDriver(e,()=>zY(this.gl,n,r,this.textureConfig))}downloadPackedMatrixFromBuffer(e,n,r,s,o,i){return BY(this.gl,e,n,r,s,o,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,n){return LY(this.gl,e,n)}createBufferFromTexture(e,n,r){this.bindTextureToFrameBuffer(e);const s=FY(this.gl,n,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let n,r;if(M().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,o=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=()=>{const i=s.clientWaitSync(o,0,0);return i===s.ALREADY_SIGNALED||i===s.CONDITION_SATISFIED},n=o}else M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(n=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(n,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:n,isFencePassed:r}}downloadMatrixFromPackedTexture(e,n,r){return this.downloadMatrixDriver(e,()=>MY(this.gl,n,r))}createProgram(e){this.throwIfDisposed();const n=this.gl;this.vertexShader==null&&(this.vertexShader=kY(n));const r=d7(n);ue(n,()=>n.attachShader(r,this.vertexShader)),ue(n,()=>n.attachShader(r,e)),h7(n,r);const s=Object.assign(r,{vao:this.createVertexArray()});return this.debug&&mp(n,s),s}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const n=this.gl;ue(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),AY(n,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(ue(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&mp(this.gl,this.program),ue(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,n,r=!0){return this.throwIfDisposed(),r?v7(this.gl,e,n):w7(this.gl,e,n)}getAttributeLocation(e,n){return this.throwIfDisposed(),ue(this.gl,()=>this.gl.getAttribLocation(e,n))}getUniformLocationNoThrow(e,n){return this.throwIfDisposed(),this.gl.getUniformLocation(e,n)}setInputMatrixTexture(e,n,r){this.throwIfDisposed(),this.throwIfNoProgram(),b7(this.gl,e,n,r)}setOutputMatrixTexture(e,n,r){this.setOutputMatrixTextureDriver(e,r,n)}setOutputPackedMatrixTexture(e,n,r){this.throwIfDisposed();const[s,o]=ya(n,r);this.setOutputMatrixTextureDriver(e,s,o)}setOutputMatrixWriteRegion(e,n,r,s){this.setOutputMatrixWriteRegionDriver(r,e,s,n)}setOutputPackedMatrixWriteRegion(e,n,r,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&mp(this.gl,this.program),ql(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const n=this.getVertexArray();console.assert(n===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}ue(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ue(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Xl(this.gl,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),o=r.createQuery();return r.beginQuery(s.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),n=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,n),n}endQuery(){if(M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const n=this.gl,r=this.getQueryTimerExtensionWebGL2();n.endQuery(r.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await uw(()=>this.disposed||this.isQueryAvailable(e,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,n){if(n===0)return null;if(n===2){const r=this.gl;return r.getQueryParameter(e,r.QUERY_RESULT)/1e6}else{const r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,n){if(n===0)return!0;if(n===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),o=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const r=this.getQueryTimerExtensionWebGL1(),s=r.getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(n=>{this.addItemToPoll(()=>e.isFencePassed(),()=>n())})}pollItems(){const e=VY(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=e;++n){const{resolveFn:r}=this.itemsToPoll[n];r()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,n){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:n}),this.itemsToPoll.length>1)return;let r;"setTimeoutCustom"in M().platform&&(r=M().platform.setTimeoutCustom.bind(M().platform)),uw(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,r)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),gp(this.gl,e,this.framebuffer),this.debug&&ql(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(gp(this.gl,this.outputTexture,this.framebuffer),this.debug&&ql(this.gl)):z2(this.gl,this.framebuffer)}downloadMatrixDriver(e,n){this.bindTextureToFrameBuffer(e);const r=n();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(e,n,r){this.throwIfDisposed();const s=this.gl;gp(s,e,this.framebuffer),this.debug&&ql(s),this.outputTexture=e,ue(s,()=>s.viewport(0,0,n,r)),ue(s,()=>s.scissor(0,0,n,r))}setOutputMatrixWriteRegionDriver(e,n,r,s){this.throwIfDisposed(),ue(this.gl,()=>this.gl.scissor(e,n,r,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function VY(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:WY,bincountImpl:fN,bincountReduceImpl:UY,bitwiseAndImpl:GY,castImpl:HY,ceilImpl:jY,concatImpl:KY,equalImpl:XY,expImpl:qY,expm1Impl:YY,floorImpl:QY,gatherNdImpl:ZY,gatherV2Impl:JY,greaterImpl:e9,greaterEqualImpl:t9,lessImpl:n9,lessEqualImpl:r9,linSpaceImpl:s9,logImpl:o9,maxImpl:i9,maximumImpl:a9,minimumImpl:u9,multiplyImpl:l9,negImpl:c9,notEqualImpl:d9,prodImpl:h9,raggedGatherImpl:p9,raggedRangeImpl:f9,raggedTensorToTensorImpl:m9,rangeImpl:g9,rsqrtImpl:y9,scatterImpl:x9,sigmoidImpl:v9,simpleAbsImpl:mN,sliceImpl:w9,sparseFillEmptyRowsImpl:b9,sparseReshapeImpl:C9,sparseSegmentReductionImpl:gN,sqrtImpl:S9,staticRegexReplaceImpl:$9,stridedSliceImpl:k9,stringNGramsImpl:I9,stringSplitImpl:N9,stringToHashBucketFastImpl:T9,subImpl:E9,tileImpl:R9,topKImpl:_9,transposeImpl:Q0,uniqueImpl:P9}=gI;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yN(t,e){return["x","y","z","w","u","v"].slice(0,e).map(n=>`${t}.${n}`)}function jt(t,e){return e===1?[t]:yN(t,e)}function A9(t,e){if(t===1)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class D9{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Bt(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const n=jt("rc",this.rank),r=Ge(this.rank),s=this.getOutOfBoundsCondition(n),o=this.getSetup(n),i=this.getOutput(n);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(e){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let o=`${r===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)o=`${e[e.length-1-i]},`+o;n.push(o)}return n}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let n="";for(let r=this.rank-2;r<this.rank;r++)n+=`${e[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(n+="||");return n}getSetup(e){if(this.rank===1)return"";const n=e.slice(-2),r=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${n[0]};
      int c = ${n[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${r};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){const n=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${n[0]}),
            cEdge ? 0. : getA(${n[1]}),
            rEdge ? 0. : getA(${n[2]}),
            rEdge || cEdge ? 0. : getA(${n[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xN{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length);let r="";for(let s=0;s<4;s++){let o="thisRC = rc;";s%2===1&&(o+="thisRC.z += 1;"),s>1&&(o+="thisRC.y += 1;"),r+=`
        ${o}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${O9(n,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?q0():X0(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${r}

        setOutput(result);
      }
    `}}function O9(t,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?A7(["r","c","d"],"inputShape"):si(["r","c","d"],t)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class F9{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,n,r){const s=U2(n,r),o=G2(e,s,r);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const i=W2(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const u=this.freeTextures[o].pop();return this.usedTextures[o].push(u),u}let a;return s===Nt.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===Nt.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===Nt.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===Nt.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===Nt.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,n,r,s){if(this.freeTextures==null)return;const o=U2(r,s),i=G2(n,o,s);i in this.freeTextures||(this.freeTextures[i]=[]);const a=W2(n,o,this.gpgpu.gl,this.gpgpu.textureConfig,s),u=M().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[i],c=l&&l.indexOf(e);if(c==null||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[c]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const n=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*n)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function L9(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function W2(t,e,n,r,s){const o=z9(e,r);let i;if(s){const[u,l]=ya(t[0],t[1]);i=u*l}else{const[u,l]=ll(t[0],t[1]);i=u*l}const a=L9(n,o);return i*a}function z9(t,e){switch(t){case Nt.PACKED_2X2_FLOAT32:return hN(e);case Nt.PACKED_2X2_FLOAT16:return pN(e);case Nt.UNPACKED_FLOAT32:return lN(e);case Nt.UNPACKED_FLOAT16:return cN(e);case Nt.PACKED_4X1_UNSIGNED_BYTE:return dN(e);default:throw new Error(`Unknown physical texture type ${t}`)}}function B9(t){return M().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?Nt.PACKED_2X2_FLOAT32:Nt.UNPACKED_FLOAT32:t?Nt.PACKED_2X2_FLOAT16:Nt.UNPACKED_FLOAT16}function U2(t,e){if(t===Dn.UPLOAD)return Nt.PACKED_2X2_FLOAT32;if(t===Dn.RENDER||t==null)return B9(e);if(t===Dn.DOWNLOAD||t===Dn.PIXELS)return Nt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function G2(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fr{constructor(e,n){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${n}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const ur="if (isnan(x)) return x;",M9="return x;",H2="return abs(x);",V9="return (x >= 0.0) ? x : (exp(x) - 1.0);",W9=ur+`
  return (x < 0.0) ? 0.0 : x;
`,U9=ur+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,ks="return x;",G9="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H9="return x;",j9=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,K9=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,X9=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,q9="return 1.0 / (1.0 + exp(-1.0 * x));";class Ps{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${n}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Y9{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length);const n=e.length,r=jt("rc",n),s=Ge(n),o=A9(n,r),i=r.slice(-2),a=n<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q9=wk,Z9=1e-7,J9=1e-4,Zl={};function eQ(t){return t in Zl||(Zl[t]={}),Zl[t]}const tQ=M().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),nQ=600;function rQ(){return M().global.screen==null?1024:M().global.screen.height*M().global.screen.width*window.devicePixelRatio*nQ/1024/1024}class Qd extends sg{nextDataId(){return Qd.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!M().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let n;if(e!=null){if(e instanceof vp)n=e;else{const r=Cr(M().getNumber("WEBGL_VERSION"),e);n=new vp(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const r=Cr(M().getNumber("WEBGL_VERSION"));n=new vp(r),this.binaryCache=eQ(M().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=n,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new F9(this.gpgpu),this.numMBBeforeWarning=rQ(),this.texData=new kS(this,mn())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,n,r,s,o,i){const a=this.makeTensorInfo(n,r),u=this.texData.get(a.dataId);u.isPacked=!1,u.texture={texture:e,texShape:[s,o]},u.texShape=[s,o];const l=Yl(n),c=new V2(l,!1,i),d=this.runWebGLProgram(c,[a],r,[[s,o]]);return d.shape=n,u.texture=null,this.disposeIntermediateTensorInfo(a),d.dataId}write(e,n,r){if((M().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||M().getBool("DEBUG"))&&this.checkNumericalProblems(e),r==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:n,dtype:r,values:e,usage:Dn.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const n=this.texData.get(e);n.refCount++}decRef(e){if(this.texData.has(e)){const n=this.texData.get(e);n.refCount--}}move(e,n,r,s,o){if(M().getBool("DEBUG")&&this.checkNumericalProblems(n),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:s,values:n,usage:Dn.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const n=this.texData.get(e),{values:r,dtype:s,complexTensorInfos:o,slice:i,shape:a,isPacked:u}=n;if(i!=null){let h;u?h=new Ps(a,ks):h=new Fr(a,ks);const p=this.runWebGLProgram(h,[{dataId:e,shape:a,dtype:s}],s),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(r!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return r;const l=this.activeTimers!=null;let c;l&&(c=fr());let d;if(s==="complex64"){const h=this.readSync(o.real.dataId),p=this.readSync(o.imag.dataId);d=Vu(h,p)}else d=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=fr()-c),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(y=>f.push(y))}const n=this.texData.get(e),{values:r,shape:s,slice:o,dtype:i,complexTensorInfos:a,isPacked:u}=n;if(o!=null){let f;u?f=new Ps(s,ks):f=new Fr(s,ks);const y=this.runWebGLProgram(f,[{dataId:e,shape:s,dtype:i}],i),x=this.read(y.dataId);return this.disposeIntermediateTensorInfo(y),x}if(r!=null)return this.convertAndCacheOnCPU(e);if(M().getBool("DEBUG")&&!M().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&M().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,c;if(i!=="complex64"&&M().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const f=this.texData.get(c.dataId);l=this.gpgpu.createBufferFromTexture(f.texture.texture,...Kl(s))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(i==="complex64"){const f=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),y=f[0],x=f[1];d=Vu(y,x)}else if(l==null)d=this.getValuesFromTexture(e);else{const f=U(s);d=this.gpgpu.downloadFloat32MatrixFromBuffer(l,f)}if(c!=null&&this.disposeIntermediateTensorInfo(c),l!=null){const f=this.gpgpu.gl;ue(f,()=>f.deleteBuffer(l))}const h=this.convertAndCacheOnCPU(e,d),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(f=>f(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&mn().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,n={}){const r=this.texData.get(e),{values:s,shape:o,slice:i,dtype:a,isPacked:u,texture:l}=r;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let p;u?p=new Ps(o,ks):p=new Fr(o,ks);const f=this.runWebGLProgram(p,[{dataId:e,shape:o,dtype:a}],a),y=this.readToGPU(f,n);return this.disposeIntermediateTensorInfo(f),y}if(l==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,n.customTexShape),d=mn().makeTensorFromTensorInfo(c),h=this.texData.get(c.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(e){const n=this.readSync(e.dataId);if(e.dtype==="string")try{const r=n.map(s=>us(s));return Be(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Be(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let n=0;n<e.length;n++){const r=e[n];if(!i7(r))throw M().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:n,dtype:r,isPacked:s}=this.texData.get(e),o=U(n);if(M().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const h=this.decode(e),p=this.texData.get(h.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Kl(n)).subarray(0,o);return this.disposeIntermediateTensorInfo(h),f}const i=M().getBool("WEBGL_PACK")&&s===!0,a=i?Yl(n):n,u=i?new CY(a):new bY(a),l=this.runWebGLProgram(u,[{shape:a,dtype:r,dataId:e}],"float32"),c=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const n=this.activeTimers,r=[];let s=!1;this.programTimersStack==null?(this.programTimersStack=r,s=!0):this.activeTimers.push(r),this.activeTimers=r,e();const o=ls(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),i=ls(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=n,s&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=await Promise.all(o);a.kernelMs=IS(u),a.getExtraProfileInfo=()=>u.map((l,c)=>({name:i[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:fr(),endMs:null}}endTimer(e){return M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=fr(),e)}async getQueryTime(e){if(M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const n=e;return n.endMs-n.startMs}disposeData(e,n=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(n?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!n&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:r}=this.texData.get(e);return r!=null&&(this.disposeData(r.real.dataId,n),this.disposeData(r.imag.dataId,n)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:n,dtype:r,texShape:s,usage:o,isPacked:i,slice:a}=this.texData.get(e),u=a&&a.origDataId||e,l=this.dataRefCount.get(u);l>1?this.dataRefCount.set(u,l-1):(this.dataRefCount.delete(u),n!=null&&(this.numBytesInGPU-=this.computeBytes(s,r),this.textureManager.releaseTexture(n,s,o,i)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,n=tQ){return M().getBool("WEBGL_CPU_FORWARD")&&e.every(r=>this.texData.get(r.dataId).texture==null&&U(r.shape)<n)}getGPGPUContext(){return this.gpgpu}where(e){xr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const n=e.dataSync();return Q9(e.shape,n)}packedUnaryOp(e,n,r){const s=new Ps(e.shape,n),o=this.compileAndRun(s,[e],r);return mn().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const s=mN(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(M().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,H2,e.dtype);const n=new Fr(e.shape,H2),r=this.compileAndRun(n,[e]);return mn().makeTensorFromTensorInfo(r)}makeTensorInfo(e,n,r){let s;if(n==="string"&&r!=null&&r.length>0&&el(r[0])){const o=r.map(i=>Ws(i));s=this.write(o,e,n)}else s=this.write(r,e,n);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:n}}makeOutput(e,n,r){return mn().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,r),this)}unpackTensor(e){const n=new Y9(e.shape);return this.runWebGLProgram(n,[e],e.dtype)}packTensor(e){const n=new D9(e.shape);return this.runWebGLProgram(n,[e],e.dtype,null,!0)}packedReshape(e,n){const r=[sa(e.shape),...oa(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},o=[sa(n),...oa(n)],i=new xN(o,r),a=!0,u=[r],l=this.runWebGLProgram(i,[s],e.dtype,u,a);return{dataId:l.dataId,shape:n,dtype:l.dtype}}decode(e,n){const r=this.texData.get(e),{isPacked:s,shape:o,dtype:i}=r;if(n!=null){const h=U(o),p=n[0]*n[1]*4;T(h<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=Yl(o);let u;s?u=new wY(a):u=new vY(a);const l=!0,c=[n??Kl(a)],d=this.runWebGLProgram(u,[{shape:a,dtype:i,dataId:e}],i,c,l,n);return{dtype:i,shape:o,dataId:d.dataId}}runWebGLProgram(e,n,r,s,o=!1,i){const a=this.makeTensorInfo(e.outputShape,r),u=this.texData.get(a.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===Hu.DENSE){const g=i??Kl(e.outputShape);u.texShape=g.map(v=>v*2)}if(e.outTexUsage!=null&&(u.usage=e.outTexUsage),U(a.shape)===0)return u.values=Ur(a.dtype,0),a;const l=[],c=n.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let v=this.texData.get(g.dataId);if(v.texture==null){if(!e.packedInputs&&U(g.shape)<=M().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:v.values};e.packedInputs&&(v.isPacked=!0,v.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!v.isPacked!=!!e.packedInputs)g=v.isPacked?this.unpackTensor(g):this.packTensor(g),l.push(g),v=this.texData.get(g.dataId);else if(v.isPacked&&!ud(v.shape,g.shape)){const b=g,S=g.shape;g.shape=v.shape,g=this.packedReshape(g,S),l.push(g),v=this.texData.get(g.dataId),b.shape=S}return{shape:g.shape,texData:v,isUniform:!1}});this.uploadToGPU(a.dataId);const d={shape:a.shape,texData:u,isUniform:!1},h=xY(e,c,d),p=this.getAndSaveBinary(h,()=>gY(this.gpgpu,e,c,d)),f=this.activeTimers!=null;let y;f&&(y=this.startTimer()),M().get("ENGINE_COMPILE_ONLY")||yY(this.gpgpu,p,c,d,s),l.forEach(g=>this.disposeIntermediateTensorInfo(g)),f&&(y=this.endTimer(y),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(y)}));const x=M().getNumber("WEBGL_FLUSH_THRESHOLD");if(x>0){const g=fr();g-this.lastGlFlushTime>x&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!M().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&o===!1){const g=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),g}return a}compileAndRun(e,n,r,s,o=!1){return r=r||n[0].dtype,this.runWebGLProgram(e,n,r,s,o)}getAndSaveBinary(e,n){return e in this.binaryCache||(this.binaryCache[e]=n()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(M().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(n=>{this.gpgpu.deleteProgram(this.binaryCache[n].webGLProgram),delete this.binaryCache[n]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=xe(()=>{if(!M().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=M().getBool("DEBUG");M().set("DEBUG",!1);const n=this.abs(Ie(1e-8)).dataSync()[0];if(M().set("DEBUG",e),n>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Z9:J9}uploadToGPU(e){const n=this.texData.get(e),{shape:r,dtype:s,values:o,texture:i,usage:a,isPacked:u}=n;if(i!=null)return;const l=this.activeTimers!=null;let c;l&&(c=fr());let d=n.texShape;if(d==null&&(d=$7(r,u),n.texShape=d),o!=null){const h=Yl(r);let p,f=d[1],y=d[0];const x=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(u||!x)&&([f,y]=ya(d[0],d[1])),u?p=new $Y(h,x):p=new V2(h,x);const g=x?[y,f]:d,v=this.makeTensorInfo(g,s),b=this.texData.get(v.dataId);x?b.usage=Dn.PIXELS:b.usage=Dn.UPLOAD,b.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(v.dataId),f,y,o);const S=[[y,f]],E=this.runWebGLProgram(p,[v],s,S,!0),R=this.texData.get(E.dataId);n.texShape=R.texShape,n.isPacked=R.isPacked,n.usage=R.usage,M().get("ENGINE_COMPILE_ONLY")?this.disposeData(E.dataId):(n.texture=R.texture,n.values=null,this.texData.delete(E.dataId)),this.disposeIntermediateTensorInfo(v),l&&(this.uploadWaitMs+=fr()-c)}else{const h=this.acquireTexture(d,a,s,u);n.texture=h}}convertAndCacheOnCPU(e,n){const r=this.texData.get(e),{dtype:s}=r;return n!=null&&(r.values=sQ(n,s)),r.values}acquireTexture(e,n,r,s){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,n,s)}computeBytes(e,n){return e[0]*e[1]*Wc(n)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,n]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(n));return Promise.all(e)}else{for(const[,n]of Object.entries(this.binaryCache)){const r=new Promise(s=>{try{this.checkCompletion_(n),s(!0)}catch(o){throw o}});e.push(r)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await IB(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(rN(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:n,customUniformLocations:r,infLoc:s,nanLoc:o,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:u}=uN(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=n,e.customUniformLocations=r,e.infLoc=s,e.nanLoc=o,e.outShapeLocation=i,e.outShapeStridesLocation=a,e.outTexShapeLocation=u}}createTensorFromGPUData(e,n,r){e.channels=e.channels||"RGBA";const{texture:s,height:o,width:i,channels:a}=e,u=mn().backend;if(!u.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=u.writeTexture(s,n,r,o,i,a);return mn().makeTensorFromDataId(l,n,r,u)}}Qd.nextDataId=0;function sQ(t,e){if(e==="float32"||e==="complex64")return t;if(e==="int32"||e==="bool"){const n=e==="int32"?new Int32Array(t.length):new Uint8Array(t.length);for(let r=0;r<n.length;++r)n[r]=Math.round(t[r]);return n}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */w$()&&S$("webgl",()=>new Qd,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z0=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Ko{constructor(e,n,r){this.variableNames=["A","B"],this.outputShape=$e(n,r),this.enableShapeUniforms=Bt(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ii=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Ca{constructor(e,n,r,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=$e(n,r);const o=this.outputShape.length;this.enableShapeUniforms=Bt(o);let i="";if(s)if(o===0||U(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${Ge(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const u=jt("coords",o);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $n(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const oQ={kernelName:Rd,backendName:"webgl",kernelFunc:$n};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oo(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,o=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(o.dataId),a=$n({inputs:{x:r},backend:n}),u=$n({inputs:{x:s},backend:n});return i.complexTensorInfos={real:a,imag:u},o}const iQ={kernelName:Eg,backendName:"webgl",kernelFunc:oo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vN="return (a < 0.) ? b * a : a;",wN=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function aQ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{alpha:o}=r,i=n.makeTensorInfo([],"float32",ha(o,"float32")),a=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ca(wN,s.shape,i.shape):new Ko(vN,s.shape,i.shape),u=n.runWebGLProgram(a,[s,i],"float32");return n.disposeIntermediateTensorInfo(i),u}const uQ={kernelName:xy,backendName:"webgl",kernelFunc:aQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bN="return (a < 0.) ? b * a : a;",CN=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function lQ(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e,o=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ca(CN,r.shape,s.shape):new Ko(bN,r.shape,s.shape);return n.runWebGLProgram(o,[r,s],"float32")}const cQ={kernelName:qy,backendName:"webgl",kernelFunc:lQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sa="if (isnan(x)) return x;";function De({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:o})=>{const{x:i}=s,a=o,u=r||i.dtype;if(a.shouldExecuteOnCPU([i])&&n!=null){const d=a.texData.get(i.dataId),h=n(d.values,u);return a.makeTensorInfo(i.shape,u,h)}const l=M().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let c;return l?c=new Ps(i.shape,e):c=new Fr(i.shape,t),a.runWebGLProgram(c,[i],u)}}function Rt({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}){return({inputs:i,backend:a})=>{const{a:u,b:l}=i,c=a;if(r&&u.dtype==="complex64"){const f=c.texData.get(u.dataId),y=c.texData.get(l.dataId),[x,g]=[[f.complexTensorInfos.real,y.complexTensorInfos.real],[f.complexTensorInfos.imag,y.complexTensorInfos.imag]].map(b=>{const[S,I]=b,E={dataId:S.dataId,dtype:S.dtype,shape:u.shape},R={dataId:I.dataId,dtype:I.dtype,shape:l.shape},_=new Ko(t,u.shape,l.shape);return c.runWebGLProgram(_,[E,R],nn(S.dtype,I.dtype))}),v=oo({inputs:{real:x,imag:g},backend:c});return c.disposeIntermediateTensorInfo(x),c.disposeIntermediateTensorInfo(g),v}const d=o||nn(u.dtype,l.dtype);if((u.dtype==="string"||l.dtype==="string"||c.shouldExecuteOnCPU([u,l]))&&s!=null){const f=c.texData.get(u.dataId).values,y=c.texData.get(l.dataId).values,x=u.dtype==="string"?Ys(f):f,g=u.dtype==="string"?Ys(y):y,[v,b]=s(u.shape,l.shape,x,g,d),S=c.makeTensorInfo(b,d),I=c.texData.get(S.dataId);return I.values=v,S}const h=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return h?p=new Ca(e,u.shape,l.shape,n):p=new Ko(t,u.shape,l.shape),c.runWebGLProgram(p,[u,l],d)}}function ju(t,e=!1){if(t==="linear")return e?H9:M9;if(t==="relu")return e?K9:W9;if(t==="elu")return e?j9:V9;if(t==="relu6")return e?X9:U9;if(t==="prelu")return e?CN:bN;if(t==="leakyrelu")return e?wN:vN;if(t==="sigmoid")return e?q9:G9;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SN{constructor(e,n,r,s=!1,o=!1,i=!1,a=null,u=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=Bt(this.outputShape.length);const c=s?e[1]:e[2],d=Math.ceil(c/2),h=s?"i * 2, rc.y":"rc.y, i * 2",p=o?"rc.z, i * 2":"i * 2, rc.z",f=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],y=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let x="",g="";a&&(u?x=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:l?x=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:x=`vec4 activation(vec4 x) {
          ${a}
        }`,g="result = activation(result);");const v=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",S="rc.x";e[0]<n[0]?b=`imod(rc.x, ${e[0]})`:n[0]<e[0]&&(S=`imod(rc.x, ${n[0]})`),this.userCode=`
      ${x}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${b};
        int batchB = ${S};
        for (int i = 0; i < ${d}; i++) {
          vec4 a = getMatrixA(batchA, ${h});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${y[0]});
          result += (${f[1]} * ${y[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${v}

        ${g}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j2={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class K2{constructor(e,n,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=$e(n,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X2="return a * b;";function J0(t){const{inputs:e,backend:n}=t,{a:r,b:s}=e,o=nn(r.dtype,s.dtype);if(r.dtype==="complex64"){const a=n.texData.get(r.dataId),u=n.texData.get(s.dataId),l=new K2(j2.REAL,r.shape,s.shape),c=new K2(j2.IMAG,r.shape,s.shape),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:r.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:s.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:s.shape}],h=n.runWebGLProgram(l,d,"float32"),p=n.runWebGLProgram(c,d,"float32"),f=oo({inputs:{real:h,imag:p},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),f}if(n.shouldExecuteOnCPU([r,s])){const a=n.texData.get(r.dataId),u=n.texData.get(s.dataId),[l,c]=l9(r.shape,s.shape,a.values,u.values,o),d=n.makeTensorInfo(c,o),h=n.texData.get(d.dataId);return h.values=l,d}let i;return M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Ca(X2,r.shape,s.shape):i=new Ko(X2,r.shape,s.shape),n.runWebGLProgram(i,[r,s],o)}const dQ={kernelName:By,backendName:"webgl",kernelFunc:J0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hQ(t,e,n){const r=[sa(t.shape),...oa(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},o=[sa(e),...oa(e)],i=new xN(o,r),a=!0,u=[r],l=n.runWebGLProgram(i,[s],t.dtype,u,a);return{dataId:l.dataId,shape:e,dtype:l.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function re(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:o}=r,i=n,a=U(s.shape),u=NS(o,a),l=U(u);T(a===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const c=i.texData.get(s.dataId);return c.isPacked&&!ud(s.shape,u)&&!(c.texture!==null&&ud(c.shape,u))?hQ(s,u,i):(i.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype})}const pQ={kernelName:tx,backendName:"webgl",kernelFunc:re};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q2{constructor(e,n){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:o,outSize:i}=e;this.outputShape=[s,i];const a=Math.floor(r/4)*4,u=r%4;let l="sumValue += dot(values, ones);";if(n!=null){const d=1/n;l=`sumValue += dot(values * ${qi(d)?d.toPrecision(2):d}, ones);`}let c="";o%r>0&&(c=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${a};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fQ{constructor(e,n){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:o,outSize:i}=e;this.outputShape=[s,i];let a="0.0",u="";n==="prod"?a="1.0":n==="min"?(a="1.0 / 1e-20",u="min"):n==="max"&&(a="-1.0 / 1e-20",u="max");let l=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="sum"?l="sumValue":n==="prod"?l="prodValue":n==="all"?l="allValue":n==="any"&&(l="anyValue");const c=Math.floor(r/4)*4,d=r%4;let h=`
      if (${n==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${n==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${n==="min"} || ${n==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";n==="all"?(a="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):n==="any"&&(a="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";o%r>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${c};
        if (${d===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mQ(t){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const n=e.length?e[e.length-1].outSize:t[1],r=Hd(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}function ai(t,e,n,r){const s=mQ(t.shape);let o=t;for(let i=0;i<s.length;i++){const{inSize:a,windowSize:u,outSize:l}=s[i];let c,d;n==="mean"?c=i===0?new q2({windowSize:u,inSize:a,batchSize:t.shape[0],outSize:l},a):new q2({windowSize:u,inSize:a,batchSize:t.shape[0],outSize:l}):c=new fQ({windowSize:u,inSize:a,batchSize:t.shape[0],outSize:l},n),d=o,o=r.runWebGLProgram(c,[o],e),d.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(d)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gQ{constructor(e,n){this.variableNames=["A"];const r=new Array(e.length);for(let i=0;i<r.length;i++)r[i]=e[n[i]];this.outputShape=r,this.rank=r.length;const s=Ge(this.rank),o=yQ(n);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function yQ(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let s=0;s<t.length;s++)r[t[s]]=n[s];return r.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xQ{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const r=new Array(e.length);for(let c=0;c<r.length;c++)r[c]=e[n[c]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=Ge(this.rank),o=yN("rc",this.rank),i=new Array(this.rank);for(let c=0;c<n.length;c++)i[n[c]]=o[c];const a=`vec2(${i.slice(-2).join()})`,u=`++${o[this.rank-1]} < ${r[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${u}) {
        result[1] = ${l};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${l};
        if(${u}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zd(t,e,n){const r=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xQ(t.shape,e):new gQ(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vQ(t,e,n,r){const s=e,o=t.shape.length,i=Je(s,t.shape);let a=i;const u=Lt(a,o),l=u!=null;let c=t;l&&(c=Zd(t,u,r),a=zt(a.length,o)),Tn("sum",a,o);const[d,h]=Vn(c.shape,a);let p=d;n&&(p=Nn(d,i));const f=U(h),x=U(t.shape)/f,g=re({inputs:{x:c},attrs:{shape:[x,f]},backend:r}),v=Dd(t.dtype),b=ai(g,v,"sum",r),S=re({inputs:{x:b},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(b),l&&r.disposeIntermediateTensorInfo(c),S}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jd(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:i}=r;return vQ(s,o,i,n)}const wQ={kernelName:wx,backendName:"webgl",kernelFunc:Jd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xt(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{perm:o}=r,i=n,a=s.shape.length,u=new Array(a);for(let c=0;c<u.length;c++)u[c]=s.shape[o[c]];let l;if(i.shouldExecuteOnCPU([s])){const d=i.texData.get(s.dataId).values,h=Q0(d,s.shape,s.dtype,o,u);l=i.makeTensorInfo(u,s.dtype);const p=i.texData.get(l.dataId);p.values=h}else l=Zd(s,o,i);return l}const bQ={kernelName:cu,backendName:"webgl",kernelFunc:Xt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $N=1e3;function ld({a:t,b:e,transposeA:n,transposeB:r,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:u=null}){const l=t.shape.length,c=e.shape.length,d=n?t.shape[l-2]:t.shape[l-1],h=r?e.shape[c-1]:e.shape[c-2],p=n?t.shape[l-1]:t.shape[l-2],f=r?e.shape[c-2]:e.shape[c-1],y=t.shape.slice(0,-2),x=e.shape.slice(0,-2),g=U(y),v=U(x),S=$e(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);T(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${r} must match.`);const I=n?[g,d,p]:[g,p,d],E=r?[v,f,h]:[v,h,f],R=re({inputs:{x:t},backend:s,attrs:{shape:I}}),_=re({inputs:{x:e},backend:s,attrs:{shape:E}}),L=[R,_],F=Math.max(g,v),V=n?R.shape[1]:R.shape[2],j=o!=null,K=i!=null,Z=u==="leakyrelu",ne=u!=null?ju(u,!0):null,ce=j||K||Z||ne!=null;let Ce;if((p===1||f===1)&&V>$N&&ce===!1){let ie=R,me=_;n&&(ie=Xt({inputs:{x:R},backend:s,attrs:{perm:[0,2,1]}}),L.push(ie)),r&&(me=Xt({inputs:{x:_},backend:s,attrs:{perm:[0,2,1]}}),L.push(me));const Ne=f!==1,Me=f===1;let un=ie;Ne&&(un=re({inputs:{x:ie},backend:s,attrs:{shape:[F,V,1]}}),L.push(un));const ln=f===1?2:1;let Ir=me;Me&&(Ir=re({inputs:{x:me},backend:s,attrs:{shape:[F,1,V]}}),L.push(Ir));const En=J0({inputs:{a:un,b:Ir},backend:s});Ce=Jd({inputs:{x:En},backend:s,attrs:{axis:ln,keepDims:!0}}),L.push(En)}else{const ie=nn(t.dtype,e.dtype),me=new SN(I,E,[F,p,f],n,r,j,ne,K,Z),Ne=[R,_];if(o!=null&&Ne.push(o),K&&Ne.push(i),Z){const Me=s.makeTensorInfo([],"float32",ha(a,"float32"));Ne.push(Me),L.push(Me)}Ce=s.runWebGLProgram(me,Ne,ie)}const X=re({inputs:{x:Ce},backend:s,attrs:{shape:S}});L.push(Ce);for(const ie of L)s.disposeIntermediateTensorInfo(ie);return X}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CQ(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:o,bias:i,preluActivationWeights:a}=e,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r;return ld({a:s,b:o,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:a,leakyreluAlpha:d,activation:c})}const SQ={kernelName:Gc,backendName:"webgl",kernelFunc:CQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y2="return abs(x);";function $Q(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){const o=n.texData.get(r.dataId),i=mN(o.values);return n.makeTensorInfo(r.shape,r.dtype,i)}let s;return M().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new Ps(r.shape,Y2):s=new Fr(r.shape,Y2),n.runWebGLProgram(s,[r],r.dtype)}const kQ={kernelName:ug,backendName:"webgl",kernelFunc:$Q};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IQ=ur+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,NQ=De({opSnippet:IQ}),TQ={kernelName:lg,backendName:"webgl",kernelFunc:NQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EQ=ur+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,RQ=De({opSnippet:EQ}),_Q={kernelName:cg,backendName:"webgl",kernelFunc:RQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q2="return a + b;",PQ=Rt({opSnippet:Q2,packedOpSnippet:Q2,supportsComplex:!0,cpuKernelImpl:WY}),AQ={kernelName:Td,backendName:"webgl",kernelFunc:PQ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DQ{constructor(e,n){this.outputShape=[],this.outputShape=e,this.variableNames=n.map((o,i)=>`T${i}`);const r=[];this.variableNames.forEach(o=>{r.push(`float v${o} = get${o}AtOutCoords();`)});const s=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OQ{constructor(e,n){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=n.map((o,i)=>`T${i}`);const r=[];this.variableNames.forEach(o=>{r.push(`vec4 v${o} = get${o}AtOutCoords();`)});const s=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gc(t){const{inputs:e,backend:n}=t,r=e;if(r.length===1)return $n({inputs:{x:r[0]},backend:n});if(r.length>M().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const u=Math.floor(r.length/2),l=gc({inputs:r.slice(0,u),backend:n}),c=gc({inputs:r.slice(u),backend:n});return gc({inputs:[l,c],backend:n})}const s=r.map(u=>u.dtype).reduce((u,l)=>nn(u,l)),o=r.map(u=>u.shape),a=M().getBool("WEBGL_PACK")?new OQ(r[0].shape,o):new DQ(r[0].shape,o);return n.runWebGLProgram(a,r,s)}const FQ={kernelName:dg,backendName:"webgl",kernelFunc:gc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LQ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:i}=r,a=s.shape.length,u=Je(o,s.shape);let l=u;const c=Lt(l,a);let d=s;c!=null&&(d=Xt({inputs:{x:s},backend:n,attrs:{perm:c}}),l=zt(l.length,a)),Tn("all",l,a);const[h,p]=Vn(d.shape,l),f=U(p),y=re({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),x=ai(y,y.dtype,"all",n);let g;if(i){const v=Nn(h,u);g=re({inputs:{x},backend:n,attrs:{shape:v}})}else g=re({inputs:{x},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),c!=null&&n.disposeIntermediateTensorInfo(d),g}const zQ={kernelName:hg,backendName:"webgl",kernelFunc:LQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BQ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:i}=r,a=s.shape.length,u=Je(o,s.shape);let l=u;const c=Lt(l,a);let d=s;c!=null&&(d=Xt({inputs:{x:s},backend:n,attrs:{perm:c}}),l=zt(l.length,a)),Tn("any",l,a);const[h,p]=Vn(d.shape,l),f=U(p),y=re({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),x=ai(y,y.dtype,"any",n);let g;if(i){const v=Nn(h,u);g=re({inputs:{x},backend:n,attrs:{shape:v}})}else g=re({inputs:{x},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),c!=null&&n.disposeIntermediateTensorInfo(d),g}const MQ={kernelName:pg,backendName:"webgl",kernelFunc:BQ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VQ{constructor(e,n,r){this.variableNames=["A"];const{windowSize:s,batchSize:o,outSize:i}=e;r||this.variableNames.push("bestIndicesA"),this.outputShape=[o,i];const a=n==="max"?">":"<",u=r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WQ{constructor(e,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,T(e.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],i=Math.ceil(o/n);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),s||this.variableNames.push("bestIndicesA");const a=this.outputShape,u=a.length,l=Ge(u),c=jt("coords",u);let d,h;if(i===1){h=u+1;const _=Ge(h);d=`
        ${_} sourceLocR = ${_}(${c.join()}, 0);
        ++${c[u-1]};
        ${_} sourceLocG = ${_}(${c.join()}, 0);
        ++${c[u-2]};
        ${_} sourceLocA = ${_}(${c.join()}, 0);
        --${c[u-1]};
        ${_} sourceLocB = ${_}(${c.join()}, 0);
        --${c[u-2]};`}else h=u,d=`
        ${l} sourceLocR = coords;
        ++${c[u-1]};
        ${l} sourceLocG = coords;
        ++${c[u-2]};
        ${l} sourceLocA = coords;
        --${c[u-1]};
        ${l} sourceLocB = coords;
        --${c[u-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],y=p.map(_=>"int "+_),x=jt("sourceLocR",h-1).concat("inIdx.r"),g=jt("sourceLocG",h-1).concat("inIdx.g"),v=jt("sourceLocB",h-1).concat("inIdx.b"),b=jt("sourceLocA",h-1).concat("inIdx.a"),S=r==="max"?"greaterThan":"lessThan",I=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${v.join()}),
                             getBestIndicesAChannel(${b.join()})));`,E=`vec4(
            getAChannel(${x.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${v.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,R=s?"":`
      float getBestIndicesAChannel(${y.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${y.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${R}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${c[u-1]} < ${a[u-1]-1};
        bool hasNextRow = ${c[u-2]} < ${a[u-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${n};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${E};

        for (int i = 0; i < ${n}; i++) {
          inIdx = srcIdx;
          ${I}
          vec4 candidate = ${E};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${S}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kN(t,e,n,r=null){let s=e.shape[0],o=e.shape[1];r!=null&&(s=r.shape[0],o=r.shape[1]);const i=Hd(o),a={windowSize:i,inSize:o,batchSize:s,outSize:Math.ceil(o/i)},u=new VQ(a,n,r==null),l=[e];r!=null&&l.push(r);const c=t.runWebGLProgram(u,l,"int32");if(c.shape[1]===1)return c;const d=kN(t,e,n,c);return t.disposeIntermediateTensorInfo(c),d}function IN(t,e,n,r=null){const s=r!=null?r.shape:e.shape,o=s[s.length-1],i=Hd(o),a=new WQ(s,i,n,r==null),u=r==null?[e]:[e,r],l=t.runWebGLProgram(a,u,"int32");if(l.shape.length===e.shape.length){const c=IN(t,e,n,l);return t.disposeIntermediateTensorInfo(l),c}return l}function NN(t,e,n,r){const s=[n];if(Tn("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,e.shape.length),!M().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],i=t.texData.get(e.dataId),a=i!==null&&i.isPacked;let u=e;a&&(u=t.unpackTensor(e),o.push(u));const[l,c]=Vn(u.shape,s),d=U(c),h=re({inputs:{x:u},backend:t,attrs:{shape:[-1,d]}});o.push(h);const p=kN(t,h,r);o.push(p);const f=re({inputs:{x:p},backend:t,attrs:{shape:l}});return o.forEach(y=>t.disposeIntermediateTensorInfo(y)),f}return IN(t,e,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UQ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o}=r;let i=Je(o,s.shape);const a=Lt(i,s.shape.length);let u=s;const l=[];a!=null&&(u=Xt({inputs:{x:s},backend:n,attrs:{perm:a}}),l.push(u),i=zt(i.length,u.shape.length)),Tn("argMax",[i[0]],u.shape.length);const c=NN(n,u,i[0],"max");return l.forEach(d=>n.disposeIntermediateTensorInfo(d)),c}const GQ={kernelName:fg,backendName:"webgl",kernelFunc:UQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HQ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o}=r;let i=Je(o,s.shape);const a=Lt(i,s.shape.length);let u=s;const l=[];a!=null&&(u=Xt({inputs:{x:s},backend:n,attrs:{perm:a}}),l.push(u),i=zt(i.length,u.shape.length)),Tn("argMin",[i[0]],u.shape.length);const c=NN(n,u,i[0],"min");return l.forEach(d=>n.disposeIntermediateTensorInfo(d)),c}const jQ={kernelName:mg,backendName:"webgl",kernelFunc:HQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KQ=ur+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,XQ=De({opSnippet:KQ}),qQ={kernelName:gg,backendName:"webgl",kernelFunc:XQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YQ=ur+"return log(x + sqrt(x * x + 1.0));",QQ=De({opSnippet:YQ}),ZQ={kernelName:yg,backendName:"webgl",kernelFunc:QQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JQ=ur+`
  return atan(x);
`,eZ=De({opSnippet:JQ}),tZ={kernelName:xg,backendName:"webgl",kernelFunc:eZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nZ=Z0+`
  return atan(a, b);
`,rZ=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ii+`
  return result;
`,sZ=Rt({opSnippet:nZ,packedOpSnippet:rZ}),oZ={kernelName:wg,backendName:"webgl",kernelFunc:sZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iZ=ur+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,aZ=De({opSnippet:iZ}),uZ={kernelName:vg,backendName:"webgl",kernelFunc:aZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ku{constructor(e,n,r,s=!1,o=!1){if(this.variableNames=["x"],n==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const y=n==="avg",x=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let v="0.0";if(y||(v="-1.0 / 1e-20"),r){const _=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${u});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${_} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?o?x:g:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const b="max";let S=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(S="avgValue / max(count, 1.0)");const I=Math.floor(i/4)*4,E=i%4,R=`
      if (${y}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${u});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${I}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${R}
          }

          int xC = xCCorner + ${I};
          if (${E===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${R}
          } else if (${E===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${R}
          } else if (${E===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${R}
          }
        }
        setOutput(${S});
      }
    `}}class e1{constructor(e,n,r,s=!1,o=!1){if(this.variableNames=["x"],n==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideDepth,u=e.strideHeight,l=e.strideWidth,c=e.dilationDepth,d=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,y=e.effectiveFilterWidth,x=e.padInfo.front,g=e.padInfo.top,v=e.padInfo.left;this.outputShape=e.outShape;const b=n==="avg";let S="0.0";if(b||(S="-1.0 / 1e-20"),r){const F=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${u}, ${l});
        const ivec3 pads = ivec3(${x}, ${g}, ${v});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${y};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${F} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${y} +
                      wR * ${y} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const I="max";let E=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(E="avgValue / max(count, 1.0)");const R=Math.floor(i/4)*4,_=i%4,L=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${u}, ${l});
      const ivec3 pads = ivec3(${x}, ${g}, ${v});
      const float initializationValue = ${S};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${S});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${R}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${L}
            }

            int xC = xCCorner + ${R};
            if (${_===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${L}
            } else if (${_===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${L}
            } else if (${_===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${L}
            }
          }
        }
        setOutput(${E});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lZ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;cl(s,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:u}=r,l=1;T(qt(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const c=ir(s.shape,o,i,l,a,u);if(c.filterWidth===1&&c.filterHeight===1&&ze(c.inShape,c.outShape))return $n({inputs:{x:s},backend:n});const d=new Ku(c,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}const cZ={kernelName:bg,backendName:"webgl",kernelFunc:lZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dZ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:u,dataFormat:l}=r,c=[1,1,1],d=gs(s.shape,o,i,c,a,u,l),h=new e1(d,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}const hZ={kernelName:Cg,backendName:"webgl",kernelFunc:dZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pZ{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const n=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=u-1-e.padInfo.top,d=l-1-e.padInfo.left,h=1/(n*r);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${d});
      const float avgMultiplier = float(${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class fZ{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const n=e.filterDepth,r=e.filterHeight,s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=d-1-e.padInfo.front,y=h-1-e.padInfo.top,x=p-1-e.padInfo.left,g=1/(n*r*s);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${y}, ${x});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mZ(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,i=o,{filterSize:a,strides:u,pad:l,dimRoundingMode:c}=r,d=[1,1,1],h=gs(i.shape,a,u,d,l,c),p=new fZ(h);return n.runWebGLProgram(p,[s],i.dtype)}const gZ={kernelName:DS,backendName:"webgl",kernelFunc:mZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yZ(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,i=o;cl([s,o],"avgPoolGrad");const{filterSize:a,strides:u,pad:l}=r,c=ir(i.shape,a,u,1,l),d=new pZ(c);return n.runWebGLProgram(d,[s],i.dtype)}const xZ={kernelName:AS,backendName:"webgl",kernelFunc:yZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vZ(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:o}=e,{transposeA:i,transposeB:a}=r;return ld({a:s,b:o,transposeA:i,transposeB:a,backend:n})}const wZ={kernelName:Sg,backendName:"webgl",kernelFunc:vZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bZ{constructor(e,n,r,s,o,i){this.outputShape=[],this.variableNames=["x","mean","variance"],$e(e,n),$e(e,r);let a="0.0";s!=null&&($e(e,s),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="1.0";o!=null&&($e(e,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CZ{constructor(e,n,r,s,o,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],$e(e,n),$e(e,r);let a="vec4(0.0)";s!=null&&($e(e,s),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="vec4(1.0)";o!=null&&($e(e,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SZ=({inputs:t,backend:e,attrs:n})=>{const{x:r,mean:s,variance:o,offset:i,scale:a}=t;T(s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),T(i==null||s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),T(a==null||s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;u==null&&(u=.001);const l=[r,s,o];let c=null;i!=null&&(c=i.shape,l.push(i));let d=null;a!=null&&(d=a.shape,l.push(a));const h=M().getBool("WEBGL_PACK_NORMALIZATION")?new CZ(r.shape,s.shape,o.shape,c,d,u):new bZ(r.shape,s.shape,o.shape,c,d,u);return e.runWebGLProgram(h,l,l[0].dtype)},$Z={kernelName:uy,backendName:"webgl",kernelFunc:SZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kZ{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const n=Ge(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const r=IZ(this.rank);let s;const o=e.map((i,a)=>`sourceLoc.${om[a]} = start[${a}] + coords.${om[a]};`);s=`
        ${n} sourceLoc;
        ${n} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${r}));
      }
    `}}const om=["x","y","z","w","u","v"];function IZ(t){if(t===1)return"sourceLoc";if(t<=6)return om.slice(0,t).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NZ{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=Ge(this.rank),r=jt("coords",this.rank),s=jt("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,i=`getChannel(getSource(${s.join()}), ${o})`,a=`
      result.x = ${i};
      if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${i};
        --${s[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${i};
        if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${i};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${n}(${e.map((c,d)=>`start[${d}]`).join()});`:e.map((c,d)=>`${s[d]} = ${r[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${n} coords = getOutputCoords();
        ${n} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${a}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TZ(t,e,n,r){const s=r.texData.get(t.dataId),o=r.makeTensorInfo(n,t.dtype),i=r.texData.get(o.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=t.dtype;let a=y0(e,lt(t.shape));s.slice&&(a+=s.slice.flatOffset),i.slice={flatOffset:a,origDataId:s.slice&&s.slice.origDataId||t.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),o}function $a(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:o,size:i}=r,[a,u]=x0(s,o,i);if(f0(s,a,u),U(u)===0)return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||s.dtype==="string"){const d=n.texData.get(s.dataId),h=w9(d.values,a,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,h)}const{isPacked:l}=n.texData.get(s.dataId),c=g0(s.shape,a,u);if(l||!c){const d=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new NZ(u):new kZ(u),h=[a];return n.runWebGLProgram(d,[s],s.dtype,h)}return n.uploadToGPU(s.dataId),TZ(s,a,u,n)}const EZ={kernelName:px,backendName:"webgl",kernelFunc:$a};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RZ=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:o,crops:i}=r;T(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((v,b)=>v*b),u=ol(s.shape,o,a),l=il(u.length,o.length),c=al(s.shape,o,a),d=S0(i,o.length),h=$0(c,i,o.length),p=[],f=re({inputs:{x:s},backend:n,attrs:{shape:u}}),y=Xt({inputs:{x:f},backend:n,attrs:{perm:l}}),x=re({inputs:{x:y},backend:n,attrs:{shape:c}}),g=$a({inputs:{x},backend:n,attrs:{begin:d,size:h}});return p.push(f),p.push(y),p.push(x),p.forEach(v=>n.disposeIntermediateTensorInfo(v)),g},_Z={kernelName:$g,backendName:"webgl",kernelFunc:RZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PZ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:o}=e,{size:i}=r,a=n.readSync(s.dataId),u=n.readSync(o.dataId),l=fN(a,u,o.dtype,o.shape,i);return n.makeTensorInfo([i],o.dtype,l)}const AZ={kernelName:kg,backendName:"webgl",kernelFunc:PZ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DZ=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,OZ=`
  return float(int(a.r) & int(b.r));
`;function FZ(t){const{inputs:e,backend:n}=t,{a:r,b:s}=e,o=M().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=M().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,s])||i===1){const u=n.texData.get(r.dataId).values,l=n.texData.get(s.dataId).values,[c,d]=GY(r.shape,s.shape,u,l,r.dtype),h=n.makeTensorInfo(d,r.dtype),p=n.texData.get(h.dataId);return p.values=c,h}let a;return o?a=new Ca(DZ,r.shape,s.shape,!1):a=new Ko(OZ,r.shape,s.shape),n.runWebGLProgram(a,[r,s],r.dtype)}const LZ={kernelName:OS,backendName:"webgl",kernelFunc:FZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zZ(t){const{inputs:e,backend:n}=t,{s0:r,s1:s}=e,o=n.readSync(r.dataId),i=n.readSync(s.dataId),a=$e(Array.from(o),Array.from(i));return n.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const BZ={kernelName:Ig,backendName:"webgl",kernelFunc:zZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MZ="return float(a != b);",TN=Rt({opSnippet:MZ,cpuKernelImpl:d9,dtype:"bool"}),VZ={kernelName:Vy,backendName:"webgl",kernelFunc:TN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hl(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.texData.get(r.dataId);return $n({inputs:{x:s.complexTensorInfos.real},backend:n})}const WZ={kernelName:Zy,backendName:"webgl",kernelFunc:hl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UZ="return float(int(x));";function GZ(t,e){const n=new Fr(t.shape,UZ),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function im(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dtype:o}=r;if(o==="complex64"){if(s.dtype==="complex64")return $n({inputs:{x:s},backend:n});const i=ps(s.shape),a=im({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=oo({inputs:{real:a,imag:i},backend:n});return i.dispose(),n.disposeIntermediateTensorInfo(a),u}if(s.dtype==="complex64"){const i=hl({inputs:{input:s},backend:n}),a=im({inputs:{x:i},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(i),a}if(!TS(s.dtype,o)){const i=$n({inputs:{x:s},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:o}}if(n.shouldExecuteOnCPU([s])){const i=n.texData.get(s.dataId).values,[a,u,l]=HY(i,s.shape,s.dtype,o);return n.makeTensorInfo(a,u,l)}if(o==="int32")return GZ(s,n);if(o==="bool"){const i=n.makeTensorInfo([],"bool",Ur("bool",1)),u=TN({inputs:{a:s,b:i},backend:n});return n.disposeIntermediateTensorInfo(i),u}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${o}`)}const HZ={kernelName:Ed,backendName:"webgl",kernelFunc:im};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z2="return ceil(x);",jZ=De({opSnippet:Z2,packedOpSnippet:Z2,cpuKernelImpl:jY}),KZ={kernelName:Ng,backendName:"webgl",kernelFunc:jZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XZ{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qZ{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YZ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{clipValueMin:o,clipValueMax:i}=r;let a;M().getBool("WEBGL_PACK_CLIP")?a=new qZ(s.shape):a=new XZ(s.shape);const u=[[o],[i]];return n.runWebGLProgram(a,[s],s.dtype,u)}const QZ={kernelName:Tg,backendName:"webgl",kernelFunc:YZ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZZ{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J2(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}function JZ(t){const{inputs:e,backend:n}=t,{x:r}=e,s=n.texData.get(r.dataId),o=new ZZ(r.shape),i=[J2(r,s.complexTensorInfos.real),J2(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(o,i,i[0].dtype)}const eJ={kernelName:Rg,backendName:"webgl",kernelFunc:JZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tJ{constructor(e){this.outputShape=[],this.outputShape=or(e,1),this.variableNames=e.map((i,a)=>`T${a}`);const n=new Array(e.length-1);n[0]=e[0][1];for(let i=1;i<n.length;i++)n[i]=n[i-1]+e[i][1];const r=[`if (yC < ${n[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<n.length;i++){const a=n[i-1];r.push(`else if (yC < ${n[i]}) setOutput(getT${i}(yR, yC-${a}));`)}const s=n.length,o=n[n.length-1];r.push(`else setOutput(getT${s}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nJ{constructor(e,n){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=or(e,n);const r=this.outputShape,s=r.length,o=Ge(s),i=jt("coords",s),a=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((y,x)=>`T${x}`);const u=new Array(e.length-1);u[0]=e[0][n];for(let y=1;y<u.length;y++)u[y]=u[y-1]+e[y][n];const l=a[n],c=a.slice(-2),d=a.join();let h=`if (${l} < ${u[0]}) {
        return getChannel(
            getT0(${d}), vec2(${c.join()}));
        }`;for(let y=1;y<u.length;y++){const x=u[y-1];h+=`
        if (${l} < ${u[y]}  && ${l} >= ${u[y-1]}) {
          return getChannel(
            getT${y}(${Jl(a,l,x)}),
            vec2(${Jl(c,l,x)}));
        }`}const p=u.length,f=u[u.length-1];h+=`
        return getChannel(
          getT${p}(${Jl(a,l,f)}),
          vec2(${Jl(c,l,f)}));`,this.userCode=`
      float getValue(${a.map(y=>"int "+y)}) {
        ${h}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[s-1]} = ${i[s-1]} + 1;
        if (${i[s-1]} < ${r[s-1]}) {
          result.g = getValue(${i});
        }

        ${i[s-2]} = ${i[s-2]} + 1;
        if (${i[s-2]} < ${r[s-2]}) {
          result.a = getValue(${i});
        }

        ${i[s-1]} = ${i[s-1]} - 1;
        if (${i[s-2]} < ${r[s-2]} &&
            ${i[s-1]} < ${r[s-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function Jl(t,e,n){const r=t.indexOf(e);return t.map((o,i)=>i===r?`${o} - ${n}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eh(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.texData.get(r.dataId);return $n({inputs:{x:s.complexTensorInfos.imag},backend:n})}const rJ={kernelName:fy,backendName:"webgl",kernelFunc:eh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eu(t,e,n){const r=t[0].dtype;if(r==="complex64"){const p=t.map(v=>hl({inputs:{input:v},backend:n})),f=t.map(v=>eh({inputs:{input:v},backend:n})),y=eu(p,e,n),x=eu(f,e,n),g=oo({inputs:{real:y,imag:x},backend:n});return p.forEach(v=>n.disposeIntermediateTensorInfo(v)),f.forEach(v=>n.disposeIntermediateTensorInfo(v)),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),g}let s=n.shouldExecuteOnCPU(t);if(r==="string"&&(s=!0),s){const p=t.map(S=>{const E=[-1,U(S.shape.slice(e))];return re({inputs:{x:S},backend:n,attrs:{shape:E}})}),f=p.map(S=>({vals:n.readSync(S.dataId),shape:S.shape})),y=or(p.map(S=>S.shape),1),x=p[0].shape[0]===1,g=KY(f,y,r,x),v=or(t.map(S=>S.shape),e),b=n.makeTensorInfo(v,r,g);return p.forEach(S=>n.disposeIntermediateTensorInfo(S)),b}const o=t.filter(p=>U(p.shape)>0),i=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const p=i?new Fr(t[0].shape,ks):new Ps(t[0].shape,ks);return n.runWebGLProgram(p,t,r)}const a=M().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>a){const p=[];for(let y=0;y<o.length;y+=a){const x=o.slice(y,y+a);p.push(eu(x,e,n))}const f=eu(p,e,n);for(const y of p)n.disposeIntermediateTensorInfo(y);return f}if(i){const p=new nJ(o.map(f=>f.shape),e);return n.runWebGLProgram(p,o,r)}const{tensors2D:u,outShape:l}=sJ(o,e,n),c=new tJ(u.map(p=>p.shape)),d=n.runWebGLProgram(c,u,r);u.forEach(p=>n.disposeIntermediateTensorInfo(p));const h=re({inputs:{x:d},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(d),h}function sJ(t,e,n){const r=or(t.map(o=>o.shape),e);return{tensors2D:t.map(o=>re({inputs:{x:o},attrs:{shape:[-1,U(o.shape.slice(e))]},backend:n})),outShape:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EN(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,o=Je(s,e[0].shape)[0],i=e.map(l=>l.shape);w0(i,o);const a=or(e.map(l=>l.shape),o);if(U(a)===0)return n.makeTensorInfo(a,e[0].dtype,[]);const u=e.filter(l=>U(l.shape)>0);return u.length===1?$n({inputs:{x:u[0]},backend:n}):eu(u,o,n)}const oJ={kernelName:_g,backendName:"webgl",kernelFunc:EN};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RN{constructor(e,n=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,a=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,y=e.inChannels%4,x=e.dataFormat==="channelsLast",g=x?1:2,v=x?2:3,b=x?3:1;let S="",I="";r&&(s?S=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?S=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:S=`
          float activation(float x) {
            ${r}
          }
        `,I="result = activation(result);");const E=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${S}

      const ivec2 strides = ivec2(${u}, ${l});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${b}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${v}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${x}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${y===1}) {

              if (${x}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${y===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${x}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${y===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${x}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${E}
        ${I}
        setOutput(result);
      }
    `}}class iJ{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const n=e.padInfo.front,r=e.padInfo.top,s=e.padInfo.left,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,d=e.filterDepth,h=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,y=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${i}, ${a});
      const ivec3 pads = ivec3(${n}, ${r}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${y===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${y===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${y===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _N{constructor(e,n=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Bt(this.outputShape.length);const i=e.padInfo.left,a=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,d=c;let h=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<c;x++)h+=`
           vec4 xTexelC${x*2};
           int xTexelC${x*2}Ready;
           vec4 xTexelC${x*2+1};
           int xTexelC${x*2+1}Ready;
           vec4 xC${x};`;h+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let x=0;x<c;x++)h+=`
           xTexelC${x*2} = vec4(0.0);
           xTexelC${x*2}Ready = 0;
           xTexelC${x*2+1} = vec4(0.0);
           xTexelC${x*2+1}Ready = 0;
           xC${x} = vec4(0.0);`;h+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let x=0;x<(d+1)/2;x++){const g=x*2;if(h+=`
           xC = xCCorner + ${g*u};
           `,a===1){if(g<c&&(i%2===1?(h+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }
               `,u===1&&g>0?h+=`
                 xC${g} = vec4(xTexelC${g-2}.zw, xTexelC${g}.xy);
                 `:h+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${g} = vec4(previous.zw, xTexelC${g}.xy);
                   } else {
                     xC${g} = vec4(0.0, 0.0, xTexelC${g}.xy);
                   }
                   `):h+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xC${g} = xTexelC${g};
                 `,g+1<c)){const v=i%2===0?og(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(h+=`
                   xCOffset = xC + imod(pads[1], 2) + ${v};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                     xTexelC${g+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${g+1}.zw = vec2(0.0);
                     }
                     xTexelC${g+1}Ready = 1;
                   }
                   `,u>1?h+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${g+1} = vec4(previous.zw, xTexelC${g+1}.xy);
                     } else {
                      xC${g+1} = vec4(0.0, 0.0, xTexelC${g+1}.xy);
                     }
                     `:h+=`
                     xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.xy);
                     `):v===1?h+=`
                     xC${g+1} = xTexelC${g};
                     `:h+=`
                     xCOffset = xC + ${v};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                       xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${g+1}.zw = vec2(0.0);
                       }
                       xTexelC${g+1}Ready = 1;
                     }

                     xC${g+1} = xTexelC${g+1};
                     `}}else g<c&&(i%2===1?(h+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.0);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
               `,g+1<c&&(h+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${g+1} = vec4(xTexelC${g+1}.xy, final.xy);
                 `)):(h+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(
                   xTexelC${g}.xy, xTexelC${g+1}.xy);
               `,g+1<c&&(h+=`
                   xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
                 `)));g<c&&(h+=`
             wTexel = getW(r, ${g}, d1, d2);
             dotProd += xC${g}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${g}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,g+1<c&&(h+=`
               wTexel = getW(r, ${g+1}, d1, d2);
               dotProd += xC${g+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${g+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}h+=`
     }
   `,h+=`
     }
   `,h+=`
     }
   `;let p="",f="";r&&(s?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${r}
         }`:o?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${r}
         }`:p=`vec4 activation(vec4 x) {
           ${r}
         }`,f="result = activation(result);");const y=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${h}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${y}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aJ{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Bt(this.outputShape.length);const{dataFormat:r}=n,s=Yt(),o=r==="channelsLast",i=o?1:2,a=o?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let c=0;c<=1;c++)for(let d=0;d<=1;d++)l+=`
          blockIndex = rc.z + ${d};
          pos = rc.y + ${c};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+d}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+d}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cd(t,e){const n=t.length;return n>=3?e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]:!e&&n===1&&t[0]>1?[t[0],1]:null}function PN({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const u=t.shape,l=r.texData.get(t.dataId),c=n.inChannels,d=u[0]*u[1]*u[2],h=n.outChannels,p=n.dataFormat==="channelsLast",f=!1,y=!1;let x;const g=[];if(o!=null){const S=cd(o.shape,p);S!=null&&(o=re({inputs:{x:o},backend:r,attrs:{shape:S}}),g.push(o))}if(s!=null){const S=cd(s.shape,p);S!=null&&(s=re({inputs:{x:s},backend:r,attrs:{shape:S}}),g.push(s))}if(!((d===1||h===1)&&c>$N)&&l.isPacked&&p&&l.texture!=null&&u[2]%2!==0&&ze(l.shape.slice(-3),u.slice(-3))){const S=u[0]*u[1]*(u[2]+1),I={dataId:t.dataId,shape:[1,S,n.inChannels],dtype:t.dtype},E=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,T(ud(l.shape,I.shape),()=>`packed reshape ${l.shape} to ${I.shape} isn't free`);const R=re({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(R);const _=ld({a:I,b:R,backend:r,transposeA:f,transposeB:y,bias:s,activation:a,preluActivationWeights:o,leakyreluAlpha:i}),L=r.texData.get(_.dataId);T(L.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=E,L.shape=n.outShape,x=$n({inputs:{x:_},backend:r}),x.shape=n.outShape,g.push(_)}else{const S=n.outHeight*n.outWidth,I=re({inputs:{x:t},backend:r,attrs:{shape:p?[n.batchSize,S,n.inChannels]:[n.batchSize,n.inChannels,S]}}),E=re({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),R=ld({a:p?I:E,b:p?E:I,transposeA:!p,transposeB:y,backend:r,bias:s,activation:a,preluActivationWeights:o,leakyreluAlpha:i});x=re({inputs:{x:R},backend:r,attrs:{shape:n.outShape}}),g.push(I),g.push(E),g.push(R)}for(const S of g)r.disposeIntermediateTensorInfo(S);return x}function AN({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:d,outHeight:h,dataFormat:p}=n,f=p==="channelsLast",y=u*l*c,x=h*d,g=[n.batchSize,y,x],v=!0,b=!1,S=[];if(o!=null){const X=cd(o.shape,f);X!=null&&(o=re({inputs:{x:o},backend:r,attrs:{shape:X}}),S.push(o))}if(s!=null){const X=cd(s.shape,f);X!=null&&(s=re({inputs:{x:s},backend:r,attrs:{shape:X}}),S.push(s))}const I=re({inputs:{x:e},backend:r,attrs:{shape:[1,y,U(e.shape)/y]}});S.push(I);const E=new aJ(g,n),R=[t.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],_=r.runWebGLProgram(E,[t],"float32",R),L=re({inputs:{x:_},backend:r,attrs:{shape:g}});S.push(_),S.push(L);const F=s!=null,V=o!=null,j=a==="leakyrelu",K=a?ju(a,!0):null,Z=new SN(f?L.shape:I.shape,f?I.shape:L.shape,f?[n.batchSize,x,n.outChannels]:[n.batchSize,n.outChannels,x],v,b,F,K,V,j),ne=f?[L,I]:[I,L];if(s&&ne.push(s),V&&ne.push(o),j){const X=r.makeTensorInfo([],"float32",ha(i,"float32"));ne.push(X),S.push(X)}const ce=r.runWebGLProgram(Z,ne,"float32"),Ce=re({inputs:{x:ce},backend:r,attrs:{shape:n.outShape}});S.push(ce);for(const X of S)r.disposeIntermediateTensorInfo(X);return Ce}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uJ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:i,pad:a,dataFormat:u,dilations:l,dimRoundingMode:c}=r,d=kr(u),h=gt(s.shape,o.shape,i,l,a,c,!1,d);let p;if(h.filterHeight===1&&h.filterWidth===1&&h.dilationHeight===1&&h.dilationWidth===1&&h.strideHeight===1&&h.strideWidth===1&&(h.padInfo.type==="SAME"||h.padInfo.type==="VALID"))p=PN({x:s,filter:o,convInfo:h,backend:n});else if(h.strideWidth<=2&&d==="channelsLast"&&M().getBool("WEBGL_EXP_CONV")){const y=new _N(h),x=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];p=n.runWebGLProgram(y,[s,o],"float32",x)}else if(M().getBool("WEBGL_CONV_IM2COL"))p=AN({x:s,filter:o,convInfo:h,backend:n});else{const y=new RN(h);p=n.runWebGLProgram(y,[s,o],"float32")}const f=re({inputs:{x:p},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(p),f}const lJ={kernelName:Pg,backendName:"webgl",kernelFunc:uJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cJ{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,o=e.padInfo.left,i=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class dJ{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,i=e.dataFormat==="channelsLast",a=n-1-e.padInfo.top,u=r-1-e.padInfo.left,l=i?1:2,c=i?2:3,d=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class hJ{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${n} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class pJ{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterDepth,r=e.filterHeight,s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,u=n-1-e.padInfo.front,l=r-1-e.padInfo.top,c=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${l}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${n}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${n} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fJ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:i,pad:a,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,d=kr(u),h=gt(s.shape,c,i,1,a,l,!1,d),p=new cJ(h);return n.runWebGLProgram(p,[s,o],"float32")}const mJ={kernelName:Ag,backendName:"webgl",kernelFunc:fJ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gJ{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Bt(this.outputShape.length);const n=e.filterHeight,r=e.filterWidth,s=n-1-e.padInfo.top,o=r-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            int wCPerm = ${r} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yJ(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{inputShape:i,strides:a,pad:u,dataFormat:l,dimRoundingMode:c}=r,d=kr(l),h=gt(i,o.shape,a,1,u,c,!1,d);if(M().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&d==="channelsLast"){const p=[[h.strideHeight,h.strideWidth]],f=new gJ(h);return n.runWebGLProgram(f,[s,o],"float32",p)}else{const p=new dJ(h);return n.runWebGLProgram(p,[s,o],"float32")}}const xJ={kernelName:Dg,backendName:"webgl",kernelFunc:yJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vJ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:i,pad:a,dilations:u}=r,l=ro(s.shape,o.shape,i,u,a),c=new iJ(l);return n.runWebGLProgram(c,[s,o],"float32")}const wJ={kernelName:Og,backendName:"webgl",kernelFunc:vJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bJ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:i,pad:a,filterShape:u}=r,l=ro(s.shape,u,i,1,a),c=new hJ(l);return n.runWebGLProgram(c,[s,o],"float32")}const CJ={kernelName:FS,backendName:"webgl",kernelFunc:bJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SJ(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{pad:i,strides:a,inputShape:u}=r,l=ro(u,o.shape,a,1,i),c=new pJ(l);return n.runWebGLProgram(c,[s,o],"float32")}const $J={kernelName:Fg,backendName:"webgl",kernelFunc:SJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kJ=Sa+`
  return cos(x);
`,IJ=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${ii}
  return result;
`,NJ=De({opSnippet:kJ,packedOpSnippet:IJ}),TJ={kernelName:Lg,backendName:"webgl",kernelFunc:NJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EJ=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,RJ=De({opSnippet:EJ}),_J={kernelName:zg,backendName:"webgl",kernelFunc:RJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PJ{constructor(e,n,r,s,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,u,l]=e,[c]=n,[d,h]=r;this.outputShape=[c,d,h,l];const p=s==="bilinear"?1:0,[f,y]=[`${a-1}.0`,`${u-1}.0`],[x,g,v]=d>1?[`${(a-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[b,S,I]=h>1?[`${(u-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${y} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${y}`];this.userCode=`
      const float height_ratio = float(${x});
      const float width_ratio = float(${b});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${S};

        float in_y = ${v};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${I};
        if( in_x < 0.0 || in_x > ${y} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AJ=t=>{const{inputs:e,backend:n,attrs:r}=t,{image:s,boxes:o,boxInd:i}=e,{cropSize:a,method:u,extrapolationValue:l}=r,c=new PJ(s.shape,o.shape,a,u,l);return n.runWebGLProgram(c,[s,o,i],"float32")},DJ={kernelName:Vg,backendName:"webgl",kernelFunc:AJ};var Xu;(function(t){t.Prod="*",t.Sum="+"})(Xu||(Xu={}));class eb{constructor(e,n,r,s){this.op=e,this.outputShape=n,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,i=this.op===Xu.Prod?"1.0":"0.0",a=r?i:`getX(${tb(o,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1];let l="",c="";r?(l=s?`end != ${u-1}`:"end != 0",c=s?"end + 1":"end - 1"):(l=s?`end + pow2 < ${u}`:"end >= pow2",c=s?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Ge(o)} coords = getOutputCoords();
        int end = ${nb(o,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${c};
          ${nb(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${tb(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function tb(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.x, ${e}.y`;if(t===3)return`${e}.x, ${e}.y, ${e}.z`;if(t===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function nb(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.y`;if(t===3)return`${e}.z`;if(t===4)return`${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DN(t,e,n,r,s,o){const i=e.shape.length,a=Lt([r],i);let u=e;a!=null&&(u=Xt({inputs:{x:e},backend:n,attrs:{perm:a}}));const l=zt(1,i)[0];if(l!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const c=u.shape[l];let d=$n({inputs:{x:u},backend:n});for(let h=0;h<=Math.ceil(Math.log2(c))-1;h++){const p=new eb(t,u.shape,!1,o),f=[[h]],y=d;d=n.runWebGLProgram(p,[d],d.dtype,f),n.disposeIntermediateTensorInfo(y)}if(s){const h=new eb(t,u.shape,s,o),p=d;d=n.runWebGLProgram(h,[d],d.dtype),n.disposeIntermediateTensorInfo(p)}if(a!=null){const h=sl(a),p=Xt({inputs:{x:d},backend:n,attrs:{perm:h}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(u),p}return d}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OJ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,exclusive:i,reverse:a}=r;return DN(Xu.Prod,s,n,o,i,a)}const FJ={kernelName:Bg,backendName:"webgl",kernelFunc:OJ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LJ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,exclusive:i,reverse:a}=r;return DN(Xu.Sum,s,n,o,i,a)}const zJ={kernelName:Mg,backendName:"webgl",kernelFunc:LJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BJ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:o}=e,{size:i,binaryOutput:a}=r;if(s.shape.length===1){const u=n.readSync(s.dataId),l=n.readSync(o.dataId),c=fN(u,l,o.dtype,o.shape,i);return n.makeTensorInfo([i],o.dtype,c)}else if(s.shape.length===2){const u=n.bufferSync(s),l=n.bufferSync(o),c=UY(u,l,i,a);return n.makeTensorInfo(c.shape,o.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const MJ={kernelName:Wg,backendName:"webgl",kernelFunc:BJ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VJ{constructor(e,n,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=n,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${n};
      int offset_h = imod(h, ${n});
      int in_w = w / ${n};
      int offset_w = imod(w, ${n});
      int offset_d = (offset_h * ${n} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WJ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockSize:o,dataFormat:i}=r,a=s.shape[0],u=i==="NHWC"?s.shape[1]:s.shape[2],l=i==="NHWC"?s.shape[2]:s.shape[3],c=i==="NHWC"?s.shape[3]:s.shape[1],d=u*o,h=l*o,p=c/(o*o),f=i==="NHWC"?[a,d,h,p]:[a,p,d,h],y=new VJ(f,o,i);return n.runWebGLProgram(y,[s],s.dtype)}const UJ={kernelName:Ug,backendName:"webgl",kernelFunc:WJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ON{constructor(e,n=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Bt(this.outputShape.length);const i=e.filterHeight,a=e.filterWidth,u=e.outChannels/e.inChannels;let l="",c="";r&&(s?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:l=`
          float activation(float x) {
            ${r}
          }
        `,c="result = activation(result);");const d=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FN{constructor(e,n=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Bt(this.outputShape.length);const i=e.outChannels/e.inChannels,a=e.padInfo.left,u=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,d=e.filterWidth,h=d;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<d;g++)p+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;p+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let g=0;g<d;g++)p+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(h+1)/2;g++){const v=g*2;if(p+=`
          xC = xCCorner + ${v*l};
          `,u===1){if(v<d&&(a%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v}Ready == 0) {
                  xTexelC${v} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${v}.zw = vec2(0.0);
                  }
                  xTexelC${v}Ready = 1;
                }
              `,l===1&&v>0?p+=`
                xC${v} = vec4(xTexelC${v-2}.zw, xTexelC${v}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${v} = vec4(previous.zw, xTexelC${v}.xy);
                  } else {
                    xC${v} = vec4(0.0, 0.0, xTexelC${v}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${v}Ready == 0) {
                  xTexelC${v} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${v}.zw = vec2(0.0);
                  }
                  xTexelC${v}Ready = 1;
                }

                xC${v} = xTexelC${v};
                `,v+1<d)){const b=a%2===0?og(l):l;l%2===0&&a%2===1||l%2!==0&&a%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${b};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                    xTexelC${v+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${v+1}.zw = vec2(0.0);
                    }
                    xTexelC${v+1}Ready = 1;
                  }
                  `,l>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${v+1} = vec4(previous.zw, xTexelC${v+1}.xy);
                    } else {
                     xC${v+1} = vec4(0.0, 0.0, xTexelC${v+1}.xy);
                    }
                    `:p+=`
                    xC${v+1} = vec4(xTexelC${v}.zw, xTexelC${v+1}.xy);
                    `):b===1?p+=`
                    xC${v+1} = xTexelC${v};
                    `:p+=`
                    xCOffset = xC + ${b};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                      xTexelC${v+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${v+1}.zw = vec2(0.0);
                      }
                      xTexelC${v+1}Ready = 1;
                    }

                    xC${v+1} = xTexelC${v+1};
                    `}}else v<d&&(a%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v}Ready == 0) {
                  xTexelC${v} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${v}.zw = vec2(0.0);
                  }
                  xTexelC${v}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${v+1}Ready == 0) {
                  xTexelC${v+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${v+1}.zw = vec2(0.0);
                  }
                  xTexelC${v+1}Ready = 1;
                }

                xC${v} = vec4(xTexelC${v}.zw, xTexelC${v+1}.zw);
              `,v+1<d&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${v+1} = vec4(xTexelC${v+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${v}Ready == 0) {
                  xTexelC${v} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${v}.zw = vec2(0.0);
                  }
                  xTexelC${v}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                  xTexelC${v+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${v+1}.zw = vec2(0.);
                  }
                  xTexelC${v+1}Ready = 1;
                }

                xC${v} = vec4(
                  xTexelC${v}.xy, xTexelC${v+1}.xy);
              `,v+1<d&&(p+=`
                  xC${v+1} = vec4(xTexelC${v}.zw, xTexelC${v+1}.zw);
                `)));v<d&&(p+=`
            wTexel = getW(r, ${v}, d1, q);
            dotProd += xC${v} * vec4(wTexel.xz, wTexel.xz);
          `,v+1<d&&(p+=`
              wTexel = getW(r, ${v+1}, d1, q);
              dotProd += xC${v+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",y="";r&&(s?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:f=`vec4 activation(vec4 x) {
          ${r}
        }`,y="result = activation(result);");const x=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${x}
        ${y}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GJ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:i,pad:a,dilations:u,dimRoundingMode:l}=r;let c=u;c==null&&(c=[1,1]),T(qt(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const d=gt(s.shape,o.shape,i,c,a,l,!0);let h;M().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?h=new FN(d):h=new ON(d);const p=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(h,[s,o],"float32",p)}const HJ={kernelName:Gg,backendName:"webgl",kernelFunc:GJ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jJ{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,o=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class KJ{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,i=n-1-e.padInfo.top,a=r-1-e.padInfo.left,u=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XJ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:i,dilations:a,pad:u,dimRoundingMode:l,filterShape:c}=r,d=gt(s.shape,c,i,a,u,l,!0),h=new jJ(d);return n.runWebGLProgram(h,[s,o],"float32")}const qJ={kernelName:Hg,backendName:"webgl",kernelFunc:XJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YJ(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{strides:i,dilations:a,pad:u,dimRoundingMode:l,inputShape:c}=r,d=gt(c,o.shape,i,a,u,l,!0),h=new KJ(d);return n.runWebGLProgram(h,[s,o],"float32")}const QJ={kernelName:jg,backendName:"webgl",kernelFunc:YJ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZJ{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JJ(t){const{inputs:e,backend:n}=t,{x:r}=e,s=[...r.shape,...r.shape],o=U(r.shape),i=re({inputs:{x:r},backend:n,attrs:{shape:[o]}}),a=new ZJ(o),u=n.runWebGLProgram(a,[i],i.dtype),l=re({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}const eee={kernelName:Kg,backendName:"webgl",kernelFunc:JJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tee{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:n,inWidth:r,padInfo:s,strideHeight:o,strideWidth:i,filterHeight:a,filterWidth:u,dilationHeight:l,dilationWidth:c}=e,{top:d,left:h}=s;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${d}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${n}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nee(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:i,pad:a,dilations:u}=r,l=nl(s.shape,o.shape,i,a,"NHWC",u);let c;const d=new tee(l);c=n.runWebGLProgram(d,[s,o],"float32");const h=re({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),h}const ree={kernelName:Xg,backendName:"webgl",kernelFunc:nee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function see(t){const{inputs:e,backend:n,attrs:r}=t,{equation:s}=r,o=e,{allDims:i,summedDims:a,idDims:u}=A0(s,o.length);O0(i.length,u,o);const{path:l,steps:c}=F0(a,u),d=c.length;let h=null,p=i.length;const f=[];for(let y=0;y<d;++y){for(const x of c[y]){const{permutationIndices:g,expandDims:v}=D0(p,u[x]);let b;L0(g)?b=o[x]:(b=Xt({inputs:{x:o[x]},backend:n,attrs:{perm:g}}),f.push(b));const S=b.shape.slice();for(let I=0;I<v.length;++I)S.splice(v[I],0,1);ze(b.shape,S)||(b=re({inputs:{x:b},backend:n,attrs:{shape:S}}),f.push(b)),h===null?h=b:(h=J0({inputs:{a:b,b:h},backend:n}),f.push(h))}y<d-1&&(l[y]>=0&&(h=Jd({inputs:{x:h},backend:n,attrs:{axis:l[y]-(i.length-p),keepDims:!1}}),f.push(h)),p--)}for(const y of f)y!==h&&n.disposeIntermediateTensorInfo(y);return h}const oee={kernelName:Yg,backendName:"webgl",kernelFunc:see};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iee="return (x >= 0.0) ? x : (exp(x) - 1.0);",aee=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,uee=De({opSnippet:iee,packedOpSnippet:aee}),lee={kernelName:Qg,backendName:"webgl",kernelFunc:uee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cee="return (b >= 0.0) ? a : a * (b + 1.0);",dee=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,hee=t=>{const{inputs:e,backend:n}=t,{dy:r,y:s}=e,o=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ca(dee,r.shape,s.shape):new Ko(cee,r.shape,s.shape);return n.runWebGLProgram(o,[r,s],r.dtype)},pee={kernelName:zS,backendName:"webgl",kernelFunc:hee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fee=`
  return vec4(equal(a, b));
`,mee="return float(a == b);",gee=Rt({opSnippet:mee,packedOpSnippet:fee,dtype:"bool",cpuKernelImpl:XY}),yee={kernelName:Jg,backendName:"webgl",kernelFunc:gee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xee=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${N0};
  float a1 = ${T0};
  float a2 = ${E0};
  float a3 = ${R0};
  float a4 = ${_0};
  float a5 = ${P0};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,vee=De({opSnippet:xee}),wee={kernelName:Zg,backendName:"webgl",kernelFunc:vee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bee=Sa+`
  return exp(x);
`,Cee=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,LN=De({opSnippet:bee,packedOpSnippet:Cee,cpuKernelImpl:qY,dtype:"float32"}),See={kernelName:ey,backendName:"webgl",kernelFunc:LN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function am(t){const{inputs:e,attrs:n,backend:r}=t,{dim:s}=n,{input:o}=e,i=o.shape.length,a=o.shape.slice();let u=s;return s<0&&(T(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),a.splice(u,0,1),re({inputs:{x:o},backend:r,attrs:{shape:a}})}const $ee={kernelName:ty,backendName:"webgl",kernelFunc:am};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rb="return exp(x) - 1.0;",kee=De({opSnippet:rb,packedOpSnippet:rb,cpuKernelImpl:YY}),Iee={kernelName:ny,backendName:"webgl",kernelFunc:kee};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sb{constructor(e,n,r){this.variableNames=["real","imag"];const s=n[1];this.outputShape=n;const o=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=r?`${s}.0`:"1.0";let a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zN(t,e,n){const r=n.texData.get(t.dataId),s=U(t.shape),o=t.shape[t.shape.length-1],i=s/o,a=re({inputs:{x:t},backend:n,attrs:{shape:[i,o]}}),u=a.shape,l=new sb("real",u,e),c=new sb("imag",u,e),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],h=n.runWebGLProgram(l,d,"float32"),p=n.runWebGLProgram(c,d,"float32"),f=oo({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const y=re({inputs:{x:f},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(f),y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nee(t){const{inputs:e,backend:n}=t,{input:r}=e;return zN(r,!1,n)}const Tee={kernelName:ry,backendName:"webgl",kernelFunc:Nee};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Eee{constructor(e,n){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pl(t){const{backend:e,attrs:n}=t,{shape:r,value:s}=n;let{dtype:o}=n;if(o=o||da(s),o==="string"){const i=xt(o,U(r));return i.fill(s),e.makeTensorInfo(r,o,i)}else{const i=new Eee(r,s),a=[[s]];return e.runWebGLProgram(i,[],o,a)}}const Ree={kernelName:sy,backendName:"webgl",kernelFunc:pl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _ee{constructor(e){this.variableNames=["Image"],this.outputShape=[];const n=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${n} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${n}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pee={kernelName:oy,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,s=new _ee(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ob="return floor(x);",Aee=De({opSnippet:ob,packedOpSnippet:ob,cpuKernelImpl:QY}),Dee={kernelName:iy,backendName:"webgl",kernelFunc:Aee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oee=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Fee=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Lee=Rt({opSnippet:Oee,packedOpSnippet:Fee,dtype:"int32"}),zee={kernelName:ay,backendName:"webgl",kernelFunc:Lee};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bee{constructor(e){this.variableNames=["A"];const n=Yt(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${r}.0);

        vec4 values = ${n.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mee{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const n=Yt(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${r}.0);
            vec4 values = ${n.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vee={kernelName:Uc,backendName:"webgl",kernelFunc:Wee};let mi,wp=M().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Wee(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:o}=r,i=typeof HTMLVideoElement<"u"&&s instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement,[u,l]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[l,u],d=[l,u,o];if(a||i){const y=M().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(mi==null||y!==wp)&&(wp=y,mi=document.createElement("canvas").getContext("2d",{willReadFrequently:wp})),mi.canvas.width=u,mi.canvas.height=l,mi.drawImage(s,0,0,u,l),s=mi.canvas}const h=n.makeTensorInfo(c,"int32");n.texData.get(h.dataId).usage=Dn.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),s);const p=M().getBool("WEBGL_PACK")?new Mee(d):new Bee(d),f=n.runWebGLProgram(p,[h],"int32");return n.disposeData(h.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uee(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r,y=kr(c),x=gt(s.shape,o.shape,u,d,l,h,!1,y);let g;const v=[],b=i!=null,S=a!=null,I=p==="leakyrelu",E=()=>{const _=[s,o],L=(F,V)=>{if(V==="NCHW"&&F.shape.length===1&&F.shape[0]!==1){const j=re({inputs:{x:F},backend:n,attrs:{shape:[F.shape[0],1,1]}});return v.push(j),j}return F};if(b&&_.push(L(i,c)),S&&_.push(L(a,c)),I){const F=n.makeTensorInfo([],"float32",ha(f,"float32"));_.push(F),v.push(F)}return _};if(x.filterHeight===1&&x.filterWidth===1&&x.dilationHeight===1&&x.dilationWidth===1&&x.strideHeight===1&&x.strideWidth===1&&(x.padInfo.type==="SAME"||x.padInfo.type==="VALID"))g=PN({x:s,filter:o,convInfo:x,backend:n,bias:i,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else if(x.strideWidth<=2&&y==="channelsLast"&&M().getBool("WEBGL_EXP_CONV")){const _=p?ju(p,!0):null,L=new _N(x,b,_,S,I),F=[[x.padInfo.top,x.padInfo.left],[x.strideHeight,x.strideWidth],[x.dilationHeight,x.dilationWidth],[x.inHeight,x.inWidth]],V=E();g=n.runWebGLProgram(L,V,"float32",F)}else if(M().getBool("WEBGL_CONV_IM2COL"))g=AN({x:s,filter:o,convInfo:x,backend:n,bias:i,activation:p,preluActivationWeights:a,leakyreluAlpha:f});else{const _=p?ju(p,!1):null,L=new RN(x,b,_,S,I),F=E();g=n.runWebGLProgram(L,F,"float32")}const R=re({inputs:{x:g},backend:n,attrs:{shape:x.outShape}});return v.push(g),v.forEach(_=>n.disposeIntermediateTensorInfo(_)),R}const Gee={kernelName:Hc,backendName:"webgl",kernelFunc:Uee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hee(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o,bias:i,preluActivationWeights:a}=e,{strides:u,pad:l,dilations:c,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=r,f=[];let y=c;y==null&&(y=[1,1]),T(qt(u,y),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${y}'`);const x=gt(s.shape,o.shape,u,y,l,d,!0),g=M().getBool("WEBGL_PACK_DEPTHWISECONV")&&x.strideWidth<=2&&x.outChannels/x.inChannels===1,v=h?ju(h,g):null,b=[s,o],S=i!=null,I=a!=null,E=h==="leakyrelu";if(S&&b.push(i),I&&b.push(a),E){const F=n.makeTensorInfo([],"float32",ha(p,"float32"));b.push(F),f.push(F)}let R;g?R=new FN(x,S,v,I,E):R=new ON(x,S,v,I,E);const _=[[x.padInfo.top,x.padInfo.left],[x.strideHeight,x.strideWidth],[x.dilationHeight,x.dilationWidth],[x.inHeight,x.inWidth]],L=n.runWebGLProgram(R,b,"float32",_);return f.forEach(F=>n.disposeIntermediateTensorInfo(F)),L}const jee={kernelName:jc,backendName:"webgl",kernelFunc:Hee};class Kee{constructor(e,n,r,s){this.sliceDim=e,this.strides=n,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=r;const o=Ge(r.length);let i=`
    int index;`;for(let a=0;a<this.sliceDim;a++)i+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xee(t){const{inputs:e,backend:n}=t,{params:r,indices:s}=e,o=s.shape,i=o[o.length-1],a=U(r.shape),[u,l,c,d]=p0(r,s),h=re({inputs:{x:s},backend:n,attrs:{shape:[l,i]}}),p=re({inputs:{x:r},backend:n,attrs:{shape:[U(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||r.dtype==="string"){const g=n.readSync(s.dataId),v=n.bufferSync(r),b=ZY(g,v,r.dtype,l,i,c,d,r.shape,a);return n.makeTensorInfo(u,r.dtype,b.values)}const f=new Kee(i,d,[l,c],r.shape),y=n.runWebGLProgram(f,[p,h],p.dtype),x=re({inputs:{x:y},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(y),x}const qee={kernelName:cy,backendName:"webgl",kernelFunc:Xee};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yee{constructor(e,n){this.variableNames=["A","indices"],this.outputShape=n,this.rank=n.length;const r=Ge(this.rank),s=Qee(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}}function Qee(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<t.length;s++)s===2?r.push("index"):r.push(`${n[s]}`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BN(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,indices:o}=e,{axis:i,batchDims:a}=r,u=Je(i,s.shape)[0];if(M().get("DEBUG")){const v=n.readSync(o.dataId),b=s.shape[u];for(let S=0;S<v.length;++S){const I=v[S];T(I<=b-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${b-1}]`)}}const l=M0(s,o,u,a),c=U(o.shape),d=[],h=re({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=re({inputs:{x:o},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});d.push(h),d.push(p);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,o])||s.dtype==="string"){const v=n.bufferSync(p),b=n.bufferSync(h),S=JY(b,v,f);return d.forEach(I=>n.disposeIntermediateTensorInfo(I)),n.makeTensorInfo(l.outputShape,S.dtype,S.values)}const y=new Yee(h.shape,f),x=n.runWebGLProgram(y,[h,p],h.dtype);d.push(x);const g=re({inputs:{x},backend:n,attrs:{shape:l.outputShape}});return d.forEach(v=>n.disposeIntermediateTensorInfo(v)),g}const Zee={kernelName:ly,backendName:"webgl",kernelFunc:BN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jee="return float(a > b);",ete=`
  return vec4(greaterThan(a, b));
`,tte=Rt({opSnippet:Jee,packedOpSnippet:ete,cpuKernelImpl:e9,dtype:"bool"}),nte={kernelName:dy,backendName:"webgl",kernelFunc:tte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rte="return float(a >= b);",ste=`
  return vec4(greaterThanEqual(a, b));
`,ote=Rt({opSnippet:rte,packedOpSnippet:ste,dtype:"bool",cpuKernelImpl:t9}),ite={kernelName:hy,backendName:"webgl",kernelFunc:ote};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ate(t){const{inputs:e,backend:n}=t,{input:r}=e;return zN(r,!0,n)}const ute={kernelName:py,backendName:"webgl",kernelFunc:ate};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lte="return float(!isnan(x) && !isinf(x));",cte=De({opSnippet:lte,dtype:"bool"}),dte={kernelName:my,backendName:"webgl",kernelFunc:cte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hte="return float(isinf(x));",pte=De({opSnippet:hte,dtype:"bool"}),fte={kernelName:gy,backendName:"webgl",kernelFunc:pte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mte="return float(isnan(x));",gte=De({opSnippet:mte,dtype:"bool"}),yte={kernelName:yy,backendName:"webgl",kernelFunc:gte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xte="return float(a < b);",vte=`
  return vec4(lessThan(a, b));
`,wte=Rt({opSnippet:xte,packedOpSnippet:vte,cpuKernelImpl:n9,dtype:"bool"}),bte={kernelName:vy,backendName:"webgl",kernelFunc:wte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cte="return float(a <= b);",Ste=`
  return vec4(lessThanEqual(a, b));
`,$te=Rt({opSnippet:Cte,packedOpSnippet:Ste,cpuKernelImpl:r9,dtype:"bool"}),kte={kernelName:wy,backendName:"webgl",kernelFunc:$te};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ite(t){const{backend:e,attrs:n}=t,{start:r,stop:s,num:o}=n,i=s9(r,s,o);return e.makeTensorInfo([i.length],"float32",i)}const Nte={kernelName:by,backendName:"webgl",kernelFunc:Ite};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tte=Sa+`
  return x < 0.0 ? 0./0. : log(x);
`,Ete=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Rte=De({opSnippet:Tte,packedOpSnippet:Ete,cpuKernelImpl:o9}),_te={kernelName:Cy,backendName:"webgl",kernelFunc:Rte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pte=Sa+`
  return log(1.0 + x);
`,Ate=De({opSnippet:Pte}),Dte={kernelName:Sy,backendName:"webgl",kernelFunc:Ate};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ote="return float(a >= 1.0 && b >= 1.0);",Fte=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Lte=Rt({opSnippet:Ote,packedOpSnippet:Fte,dtype:"bool"}),zte={kernelName:$y,backendName:"webgl",kernelFunc:Lte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bte="return float(!(x >= 1.0));",Mte=De({opSnippet:Bte}),Vte={kernelName:ky,backendName:"webgl",kernelFunc:Mte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wte="return float(a >= 1.0 || b >= 1.0);",Ute=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Gte=Rt({opSnippet:Wte,packedOpSnippet:Ute,dtype:"bool"}),Hte={kernelName:Iy,backendName:"webgl",kernelFunc:Gte};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jte{constructor(e,n,r,s,o){this.variableNames=["x"],this.outputShape=[];const i=n,a=e[3]-1;this.outputShape=e;let u;const l=`float(${r}) + float(${s}) * sum`;o===.5?u=`inversesqrt(${l})`:o===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kte{constructor(e,n,r,s,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=n,a=e[3]-1;this.outputShape=e;let u;const l=`float(${r}) + float(${s}) * sum`;o===.5?u=`inversesqrt(${l})`:o===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xte=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{depthRadius:o,bias:i,alpha:a,beta:u}=r,l=M().getBool("WEBGL_PACK_NORMALIZATION")?new Kte(s.shape,o,i,a,u):new jte(s.shape,o,i,a,u);return n.runWebGLProgram(l,[s],s.dtype)},qte={kernelName:Ny,backendName:"webgl",kernelFunc:Xte};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yte{constructor(e,n,r,s,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=n,this.bias=r,this.alpha=s,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${n})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${n} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qte=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s,y:o,dy:i}=e,{depthRadius:a,bias:u,alpha:l,beta:c}=r,d=new Yte(s.shape,a,u,l,c);return n.runWebGLProgram(d,[s,o,i],s.dtype)},Zte={kernelName:BS,backendName:"webgl",kernelFunc:Qte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jte(t,e,n,r){const s=U(e),i=U(t.shape)/s,a=re({inputs:{x:t},attrs:{shape:[i,s]},backend:r}),u=ai(a,t.dtype,"max",r),l=re({inputs:{x:u},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(u),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MN(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reductionIndices:o,keepDims:i}=r,a=s.shape.length,u=Je(o,s.shape);let l=u;const c=Lt(l,a),d=c!=null,h=n.shouldExecuteOnCPU([s]);let p=s;if(d){if(h){const b=n.texData.get(p.dataId).values,S=new Array(a);for(let R=0;R<S.length;R++)S[R]=s.shape[c[R]];const I=Q0(b,s.shape,s.dtype,c,S);p=n.makeTensorInfo(S,s.dtype);const E=n.texData.get(p.dataId);E.values=I}else p=Zd(s,c,n);l=zt(l.length,a)}Tn("max",l,a);const[f,y]=Vn(p.shape,l);let x=f;i&&(x=Nn(f,u));let g;if(h){const b=n.texData.get(p.dataId).values,S=i9(b,U(y),x,s.dtype);g=n.makeTensorInfo(x,s.dtype);const I=n.texData.get(g.dataId);I.values=S}else g=Jte(p,y,x,n);return d&&n.disposeIntermediateTensorInfo(p),g}const ene={kernelName:Ty,backendName:"webgl",kernelFunc:MN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tne=Z0+`
  return max(a, b);
`,nne=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ii+`
  return result;
`,rne=Rt({opSnippet:tne,packedOpSnippet:nne,cpuKernelImpl:a9}),sne={kernelName:Ey,backendName:"webgl",kernelFunc:rne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function one(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;cl(s,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:u}=r,l=1;T(qt(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const c=ir(s.shape,o,i,l,a,u);if(c.filterWidth===1&&c.filterHeight===1&&ze(c.inShape,c.outShape))return $n({inputs:{x:s},backend:n});const d=new Ku(c,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}const ine={kernelName:Ry,backendName:"webgl",kernelFunc:one};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ane(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:o,strides:i,pad:a,dataFormat:u,dimRoundingMode:l}=r,c=[1,1,1],d=gs(s.shape,o,i,c,a,l,u),h=new e1(d,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}const une={kernelName:_y,backendName:"webgl",kernelFunc:ane};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lne{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const n=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,o=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=o-1-e.padInfo.top,u=i-1-e.padInfo.left,l=o*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class cne{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const n=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,u=e.effectiveFilterDepth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,d=u-1-e.padInfo.front,h=l-1-e.padInfo.top,p=c-1-e.padInfo.left,f=u*l*c-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${n}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dne(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,i=o,{filterSize:a,strides:u,pad:l,dimRoundingMode:c}=r,d=[1,1,1],h=gs(i.shape,a,u,d,l,c),p=new e1(h,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),y=new cne(h),x=n.runWebGLProgram(y,[s,f],i.dtype);return n.disposeIntermediateTensorInfo(f),x}const hne={kernelName:VS,backendName:"webgl",kernelFunc:dne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pne(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o,output:i}=e,a=o;cl([o,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,h=ir(a.shape,u,l,1,c,d),p=!0,f=new Ku(h,"max",p),y=n.runWebGLProgram(f,[a],a.dtype),x=new lne(h),g=n.runWebGLProgram(x,[s,y],a.dtype);return n.disposeIntermediateTensorInfo(y),g}const fne={kernelName:MS,backendName:"webgl",kernelFunc:pne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mne(t,e,n,r){let s=new Ku(n,"max",!1);const o=r.runWebGLProgram(s,[t],"float32");s=new Ku(n,"max",!0,!0,e);const i=r.runWebGLProgram(s,[t],"float32");return[o,i]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gne={kernelName:Py,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:o,pad:i,includeBatchInIndex:a}=e,u=n;T(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const l=[1,1];T(qt(o,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);const c=ir(r.shape,s,o,l,i),[d,h]=mne(r,a,c,u);return[d,h]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yne(t,e,n,r){const s=U(e),i=U(t.shape)/s,a=re({inputs:{x:t},attrs:{shape:[i,s]},backend:r}),u=ai(a,"float32","mean",r),l=re({inputs:{x:u},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(u),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xne={kernelName:Ay,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{keepDims:s,axis:o}=e,i=n,a=r.shape.length,u=Je(o,r.shape);let l=u;const c=Lt(l,a),d=c!=null,h=i.shouldExecuteOnCPU([r]),p=[];let f=r;if(d){if(h){const S=i.texData.get(f.dataId).values,I=new Array(a);for(let _=0;_<I.length;_++)I[_]=r.shape[c[_]];const E=Q0(S,r.shape,r.dtype,c,I);f=i.makeTensorInfo(I,r.dtype);const R=i.texData.get(f.dataId);R.values=E}else f=Zd(r,c,i);p.push(f),l=zt(l.length,a)}Tn("sum",l,a);const[y,x]=Vn(f.shape,l);let g=y;s&&(g=Nn(y,u));const v=yne(f,x,g,i);for(const b of p)i.disposeIntermediateTensorInfo(b);return v}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vne(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:i}=r,a=s.shape.length,u=Je(o,s.shape);let l=u;const c=Lt(l,a);let d=s;c!=null&&(d=Xt({inputs:{x:s},backend:n,attrs:{perm:c}}),l=zt(l.length,s.shape.length)),Tn("min",l,a);const[h,p]=Vn(d.shape,l),f=U(p),y=re({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),x=ai(y,y.dtype,"min",n);let g;if(i){const v=Nn(h,u);g=re({inputs:{x},backend:n,attrs:{shape:v}})}else g=re({inputs:{x},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(x),c!=null&&n.disposeIntermediateTensorInfo(d),g}const wne={kernelName:Dy,backendName:"webgl",kernelFunc:vne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bne=Z0+`
  return min(a, b);
`,Cne=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ii+`
  return result;
`,Sne=Rt({opSnippet:bne,packedOpSnippet:Cne,cpuKernelImpl:u9}),$ne={kernelName:Oy,backendName:"webgl",kernelFunc:Sne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kne{constructor(e,n,r){this.variableNames=["x"],this.outputShape=n.map((c,d)=>c[0]+e[d]+c[1]);const s=e.length,o=Ge(s),i=n.map(c=>c[0]).join(","),a=n.map((c,d)=>c[0]+e[d]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l=r==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${i});
      ${o} end = ${o}(${a});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ine{constructor(e,n,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n.map((f,y)=>f[0]+e[y]+f[1]);const s=e.length,o=Ge(s),i=n.map(f=>f[0]).join(","),a=n.map((f,y)=>f[0]+e[y]).join(","),u=jt("rc",s),l=jt("source",s),c=`${u[s-1]} < ${this.outputShape[s-1]}`,d=s===1?"source":`vec2(${l.slice(-2).join()})`,h=r==="reflect"?0:1;let p="";if(s===1){const f=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${l.join()}), ${d});
        ${u[s-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${l.join()}), ${d});
        }
      `}else{const f=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${l.join()}), ${d});
        ${u[s-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${l.join()}), ${d});
        }
        rc = outputLoc;
        ${u[s-2]} += 1;
        if(${u[s-2]} < ${this.outputShape[s-2]}) {
          ${f}
          result[2] = getChannel(getX(${l.join()}), ${d});
          ${u[s-1]} += 1;
          if(${c}) {
            ${f}
            result[3] = getChannel(getX(${l.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${a});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nne=({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{paddings:s,mode:o}=n,i=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ine(r.shape,s,o):new kne(r.shape,s,o);return e.runWebGLProgram(i,[r],r.dtype)},Tne={kernelName:Fy,backendName:"webgl",kernelFunc:Nne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ene=`if (b == 0.0) return NAN;
  return mod(a, b);`,Rne=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+ii+`
  return result;
`,_ne=Rt({opSnippet:Ene,packedOpSnippet:Rne}),Pne={kernelName:Ly,backendName:"webgl",kernelFunc:_ne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ane{constructor(e,n,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${n-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${n-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dne=`
if (a == b) {
  return 1.0;
};
return a / b;`,One=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,VN=Rt({opSnippet:Dne,packedOpSnippet:One,checkOutOfBounds:!0}),Fne={kernelName:qg,backendName:"webgl",kernelFunc:VN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ib="return a - b;",WN=Rt({opSnippet:ib,packedOpSnippet:ib,supportsComplex:!0,cpuKernelImpl:E9}),Lne={kernelName:Rx,backendName:"webgl",kernelFunc:WN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UN(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{dim:o}=r,i=Je([o],s.shape),a=MN({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=Nn(a.shape,i),l=re({inputs:{x:a},backend:n,attrs:{shape:u}}),c=WN({inputs:{a:s,b:l},backend:n}),d=LN({inputs:{x:c},backend:n}),h=Jd({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),p=re({inputs:{x:h},backend:n,attrs:{shape:u}}),f=VN({inputs:{a:d,b:p},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),f}const zne={kernelName:Sx,backendName:"webgl",kernelFunc:UN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bne(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{numSamples:o,seed:i,normalized:a}=r,u=a?s:UN({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],d=new Ane(l,c,o),h=[[i]],p=n.runWebGLProgram(d,[u],"int32",h);return a||n.disposeIntermediateTensorInfo(u),p}const Mne={kernelName:zy,backendName:"webgl",kernelFunc:Bne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vne=ur+`
  return -x;
`,Wne=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Une(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])){const o=n.texData.get(r.dataId),[i,a]=c9(o.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,i)}let s;return M().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new Ps(r.shape,Wne):s=new Fr(r.shape,Vne),n.runWebGLProgram(s,[r],r.dtype)}const Gne={kernelName:My,backendName:"webgl",kernelFunc:Une};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hne=a0;function jne(t){xr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u}=r,l=n.readSync(s.dataId),c=n.readSync(o.dataId),{selectedIndices:d}=Hne(l,c,i,a,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}const Kne={kernelName:Wy,backendName:"webgl",kernelFunc:jne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xne=kk;function qne(t){xr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(s.dataId),d=n.readSync(o.dataId),{selectedIndices:h,validOutputs:p}=Xne(c,d,i,a,u,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const Yne={kernelName:WS,backendName:"webgl",kernelFunc:qne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qne=u0;function Zne(t){xr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(s.dataId),d=n.readSync(o.dataId),h=i,p=a,f=u,y=l,{selectedIndices:x,selectedScores:g}=Qne(c,d,h,p,f,y);return[n.makeTensorInfo([x.length],"int32",new Int32Array(x)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const Jne={kernelName:Uy,backendName:"webgl",kernelFunc:Zne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ere{constructor(e,n,r,s){this.variableNames=["indices"],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${r}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tre=t=>{const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{dtype:o,depth:i,onValue:a,offValue:u}=r,l=U(s.shape),c=new ere(l,i,a,u),d=re({inputs:{x:s},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(c,[d],o);n.disposeIntermediateTensorInfo(d);const p=[...s.shape,i],f=re({inputs:{x:h},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(h),f},nre={kernelName:Hy,backendName:"webgl",kernelFunc:tre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dd(t){const{inputs:e,backend:n}=t,{x:r}=e;if(r.dtype==="complex64"){const s=hl({inputs:{input:r},backend:n}),o=dd({inputs:{x:s},backend:n}),i=eh({inputs:{input:r},backend:n}),a=dd({inputs:{x:i},backend:n}),u=oo({inputs:{real:o,imag:a},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),u}else return pl({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:n})}const rre={kernelName:Lx,backendName:"webgl",kernelFunc:dd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GN(t){const{inputs:e,backend:n}=t,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){const s=hl({inputs:{input:r},backend:n}),o=GN({inputs:{x:s},backend:n}),i=eh({inputs:{input:r},backend:n}),a=dd({inputs:{x:i},backend:n}),u=oo({inputs:{real:o,imag:a},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),u}else return pl({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}const sre={kernelName:Gy,backendName:"webgl",kernelFunc:GN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ore(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r;if(e.length===1)return am({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const o=e[0].shape,i=e[0].dtype;e.forEach(c=>{kn(o,c.shape,"All tensors passed to stack must have matching shapes"),T(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],u=e.map(c=>{const d=am({inputs:{input:c},backend:n,attrs:{dim:s}});return a.push(d),d}),l=EN({inputs:u,backend:n,attrs:{axis:s}});return a.forEach(c=>n.disposeIntermediateTensorInfo(c)),l}const ire={kernelName:jy,backendName:"webgl",kernelFunc:ore};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class are{constructor(e,n,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((l,c)=>l[0]+e[c]+l[1]);const s=e.length,o=Ge(s),i=n.map(l=>l[0]).join(","),a=n.map((l,c)=>l[0]+e[c]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${i});
      ${o} end = ${o}(${a});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ure{constructor(e,n,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((y,x)=>y[0]+e[x]+y[1]);const s=e.length,o=Ge(s),i=n.map(y=>y[0]).join(","),a=n.map((y,x)=>y[0]+e[x]).join(","),u=jt("rc",s),l=jt("source",s),c=`${u[s-1]} < ${this.outputShape[s-1]}`,d=s===1?"source":`vec2(${l.slice(-2).join()})`,h=[`${o} rc = outputLoc;`,`${u[s-1]} += 1;
       if(${c}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${u[s-2]} += 1;
       if(${u[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${u[s-1]} += 1;
         if(${c}) {`],p=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let y=0,x=s===1?2:4;y<x;y++)f+=`
        ${h[y]}
        if (${p}) {
          result[${y}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${y}] = getChannel(getX(${l.join()}), ${d});
        }
      `;f+=s===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${a});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HN=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:o,constantValue:i}=r;if(U(s.shape)===0){const l=o.map((c,d)=>c[0]+s.shape[d]+c[1]);return pl({backend:n,attrs:{shape:l,value:i,dtype:s.dtype}})}const a=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ure(s.shape,o,i):new are(s.shape,o,i),u=[[i]];return n.runWebGLProgram(a,[s],s.dtype,u)},lre={kernelName:Ky,backendName:"webgl",kernelFunc:HN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cre=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,dre=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+ii+`
  return result;
`,hre=Rt({opSnippet:cre,packedOpSnippet:dre}),pre={kernelName:Xy,backendName:"webgl",kernelFunc:hre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fre(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:i}=r,a=s.shape.length,u=[],l=Je(o,s.shape);let c=l;const d=Lt(c,a);let h=s;d!=null&&(h=Xt({inputs:{x:s},backend:n,attrs:{perm:d}}),c=zt(c.length,a),u.push(h)),Tn("prod",c,a);let p;if(n.shouldExecuteOnCPU([h])){const f=n.texData.get(h.dataId).values,{outVals:y,outShape:x,outDtype:g}=h9(h.shape,h.dtype,f,c);p=n.makeTensorInfo(x,g,y)}else{const[f,y]=Vn(h.shape,c),x=U(y),g=re({inputs:{x:h},backend:n,attrs:{shape:[-1,x]}}),v=Dd(s.dtype),b=ai(g,v,"prod",n);p=re({inputs:{x:b},backend:n,attrs:{shape:f}}),u.push(g),u.push(b)}if(i){u.push(p);const f=Nn(p.shape,l);p=re({inputs:{x:p},backend:n,attrs:{shape:f}})}return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),p}const mre={kernelName:Yy,backendName:"webgl",kernelFunc:fre};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gre(t){const{inputs:e,backend:n,attrs:r}=t,{paramsNestedSplits:s,paramsDenseValues:o,indices:i}=e,{outputRaggedRank:a}=r,u=s.map(g=>n.readSync(g.dataId)),l=s.map(g=>g.shape),c=n.readSync(o.dataId),d=n.readSync(i.dataId),[h,p,f]=p9(u,l,c,o.shape,o.dtype,d,i.shape,a),y=h.map(g=>n.makeTensorInfo([g.length],"int32",g)),x=n.makeTensorInfo(f,o.dtype,p);return y.concat([x])}const yre={kernelName:US,backendName:"webgl",kernelFunc:gre};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xre(t){const{inputs:e,backend:n}=t,{starts:r,limits:s,deltas:o}=e,i=n.readSync(r.dataId),a=n.readSync(s.dataId),u=n.readSync(o.dataId),[l,c]=f9(i,r.shape,r.dtype,a,s.shape,u,o.shape),d=n.makeTensorInfo([l.length],"int32",l),h=n.makeTensorInfo([c.length],r.dtype,c);return[d,h]}const vre={kernelName:GS,backendName:"webgl",kernelFunc:xre};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wre(t){const{inputs:e,backend:n,attrs:r}=t,{shape:s,values:o,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:u}=r,l=n.readSync(s.dataId),c=n.readSync(o.dataId),d=n.readSync(i.dataId),h=a.map(x=>n.readSync(x.dataId)),p=a.map(x=>x.shape),[f,y]=m9(l,s.shape,c,o.shape,o.dtype,d,i.shape,h,p,u);return n.makeTensorInfo(f,o.dtype,y)}const bre={kernelName:HS,backendName:"webgl",kernelFunc:wre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jN=t=>{const{backend:e,attrs:n}=t,{start:r,stop:s,step:o,dtype:i}=n,a=g9(r,s,o,i);return e.makeTensorInfo([a.length],i,a)},Cre={kernelName:Qy,backendName:"webgl",kernelFunc:jN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sre="return 1.0 / x;",$re=De({opSnippet:Sre}),kre={kernelName:Jy,backendName:"webgl",kernelFunc:$re};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ire=ur+`
  return (x < 0.0) ? 0.0 : x;
`,Nre=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Tre=De({opSnippet:Ire,packedOpSnippet:Nre}),Ere={kernelName:ex,backendName:"webgl",kernelFunc:Tre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rre=ur+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,_re=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Pre=De({opSnippet:Rre,packedOpSnippet:_re}),Are={kernelName:sx,backendName:"webgl",kernelFunc:Pre};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dre{constructor(e,n,r,s,o){this.variableNames=["A"],this.outputShape=[];const[i,a,u,l]=e;this.outputShape=[i,n,r,l];const c=[s&&n>1?a-1:a,s&&r>1?u-1:u],d=[s&&n>1?n-1:n,s&&r>1?r-1:r];let h;o?h="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/d[0]},
          ${c[1]/d[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ore{constructor(e,n,r,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,u,l]=e;this.outputShape=[i,n,r,l];const c=[s&&n>1?a-1:a,s&&r>1?u-1:u],d=[s&&n>1?n-1:n,s&&r>1?r-1:r];let h;o?h="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/d[0]},
          ${c[1]/d[1]},
          ${c[1]/d[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fre(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:o,halfPixelCenters:i,size:a}=r,[u,l]=a,c=M().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Ore(s.shape,u,l,o,i):new Dre(s.shape,u,l,o,i);return n.runWebGLProgram(c,[s],"float32")}const Lre={kernelName:rx,backendName:"webgl",kernelFunc:Fre};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zre{constructor(e,n,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,s,o]=n,[,i,a]=e,u=[r&&i>1?s-1:s,r&&a>1?o-1:o],l=[r&&i>1?i-1:i,r&&a>1?a-1:a],c=u[0]/l[0],d=u[1]/l[1],h=1/c,p=1/d,f=Math.ceil(h)*2+2,y=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${y});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bre(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:o}=e,{alignCorners:i}=r,a=new zre(o.shape,s.shape,i);return n.runWebGLProgram(a,[o],o.dtype)}const Mre={kernelName:KS,backendName:"webgl",kernelFunc:Bre};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vre{constructor(e,n,r,s,o){this.variableNames=["A"],this.outputShape=[];const[i,a,u,l]=e;this.outputShape=[i,n,r,l];const c=[s&&n>1?a-1:a,s&&r>1?u-1:u],d=[s&&n>1?n-1:n,s&&r>1?r-1:r],h=s?"0.5":"0.0";let p;o?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/d[0]},
          ${c[1]/d[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wre{constructor(e,n,r,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,u,l]=e;this.outputShape=[i,n,r,l];const c=[s&&n>1?a-1:a,s&&r>1?u-1:u],d=[s&&n>1?n-1:n,s&&r>1?r-1:r],h=s?"0.5":"0.0";let p;o?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/d[0]},
          ${c[1]/d[1]},
          ${c[1]/d[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ure(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:o,halfPixelCenters:i,size:a}=r,[u,l]=a,c=M().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Wre(s.shape,u,l,o,i):new Vre(s.shape,u,l,o,i);return n.runWebGLProgram(c,[s],s.dtype)}const Gre={kernelName:nx,backendName:"webgl",kernelFunc:Ure};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hre{constructor(e,n,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,s,o]=n,[,i,a]=e,u=[r&&i>1?s-1:s,r&&a>1?o-1:o],l=[r&&i>1?i-1:i,r&&a>1?a-1:a],c=u[0]/l[0],d=u[1]/l[1],h=1/c,p=1/d,f=Math.ceil(h)*2+2,y=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${y});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jre(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:o}=e,{alignCorners:i}=r,a=new Hre(o.shape,s.shape,i);return n.runWebGLProgram(a,[o],o.dtype)}const Kre={kernelName:jS,backendName:"webgl",kernelFunc:jre};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xre{constructor(e,n){this.variableNames=["x"];const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=e,r===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const s=a=>n.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,o=e.map((a,u)=>s(u)).join(","),i=Ge(r);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qre{constructor(e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=e;const s=jt("rc",r),o=`${s[r-1]} + 1 < ${this.outputShape[r-1]}`,i=`${s[r-2]} + 1 < ${this.outputShape[r-2]}`,a=Ge(r);r===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(s.slice())};
          if(${o}){
            result.g = ${l(s.slice())};
          }
          if(${i}) {
            result.b = ${c(s.slice())};
            if(${o}) {
              result.a = ${d(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(f){return h(f)}function l(f){return f[r-1]="("+f[r-1]+" + 1)",h(f)}function c(f){return f[r-2]="("+f[r-2]+" + 1)",h(f)}function d(f){return f[r-1]="("+f[r-1]+" + 1)",f[r-2]="("+f[r-2]+" + 1)",h(f)}function h(f){const y=e.map((v,b)=>p(b,f)),x=y.join(","),g=y.slice(-2).join(",");return`getChannel(getX(${x}), vec2(${g}))`}function p(f,y){return n.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${y[f]} - 1`:`${y[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yre(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:o}=r,i=s.shape.length,a=Je(o,s.shape);if(i===0)return $n({inputs:{x:s},backend:n});const u=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qre(s.shape,a):new Xre(s.shape,a);return n.runWebGLProgram(u,[s],s.dtype)}const Qre={kernelName:ox,backendName:"webgl",kernelFunc:Yre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zre{constructor(e,n){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const r=e[1],s=e[2];this.outputShape=e;let o="";typeof n=="number"?o=`float outputValue = ${n.toFixed(2)};`:o=`
        vec3 fill = vec3(${n.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jre={kernelName:Bx,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:o,center:i}=e,a=n,u=new Zre(r.shape,o),[l,c]=C0(i,r.shape[1],r.shape[2]),d=[[l,c,Math.sin(s),Math.cos(s)]];return a.runWebGLProgram(u,[r],r.dtype,d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ese=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,tse=De({opSnippet:ese}),nse={kernelName:ix,backendName:"webgl",kernelFunc:tse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rse="return inversesqrt(x);",sse=De({opSnippet:rse,cpuKernelImpl:y9}),ose={kernelName:ax,backendName:"webgl",kernelFunc:sse};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class t1{constructor(e,n,r,s,o,i,a=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const l=Ge(o.length),c=Ge(i.length);let d="";r===1?d="i":r===2&&(d="i, j");const h=`getIndices(${d})`;let p="";s===1?p="i":s===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let y="";u&&(y="coords[0], coords[1]");const x=`getDefaultValue(${y})`,g=n>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${o});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${n}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${g};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${x}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ise{constructor(e,n,r,s,o,i,a=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const l=Ge(o.length),c=Ge(i.length);let d="";r===1?d="i":r===2&&(d="i, j");const h=`getIndices(${d})`;let p="";s===1?p="i":s===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let y="";u&&(y="coords[0], coords[1]");const x=`getDefaultValue(${y})`,g=n>1?"strides[j]":"strides",v=n>1?"strides[j + 1]":"strides";this.userCode=`
        ${l} strides = ${l}(${o});

        void main() {
          ${c} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${n}; j+=2) {
              ivec4 index = round(${h});
              flattenedIndex += index.xz * ${g};
              if (j + 1 < ${n}) {
                flattenedIndex += index.yw * ${v};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${x}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ase(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s,updates:o}=e,{shape:i}=r,{sliceRank:a,numUpdates:u,sliceSize:l,strides:c,outputSize:d}=Zo(o,s,i),h=[d/l,l];if(d===0)return n.makeTensorInfo(i,s.dtype);const p=re({inputs:{x:s},backend:n,attrs:{shape:[u,a]}}),f=re({inputs:{x:o},backend:n,attrs:{shape:[u,l]}}),y=n.makeTensorInfo([],"float32",new Float32Array([0]));let x;M().getBool("WEBGL_PACK")?x=new ise(u,a,p.shape.length,f.shape.length,c,h):x=new t1(u,a,p.shape.length,f.shape.length,c,h);const g=n.runWebGLProgram(x,[f,p,y],f.dtype),v=re({inputs:{x:g},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),v}const use={kernelName:ux,backendName:"webgl",kernelFunc:ase};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lse{constructor(e,n,r,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,r];const o="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(n+1))}; ++i) { if (left >= right) break;`,a=M().getNumber("WEBGL_VERSION")===2?o:i,u=s==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cse(t){const{inputs:e,backend:n,attrs:r}=t,{sortedSequence:s,values:o}=e,{side:i}=r,a=new lse(s.shape[0],s.shape[1],o.shape[1],i),u=[[s.shape[1]]];return n.runWebGLProgram(a,[s,o],"int32",u)}const dse={kernelName:cx,backendName:"webgl",kernelFunc:cse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hse{constructor(e,n,r){this.variableNames=["c","a","b"],this.outputShape=n;let s,o;if(r>4)throw Error(`Where for rank ${r} is not yet supported`);if(r===1)o="resRC",s="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],l=[];for(let c=0;c<n.length;c++)l.push(`${a[c]}`),c<e&&u.push(`${a[c]}`);s=u.join(),o=l.join()}const i=Ge(r);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pse(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:o}=e,i=new hse(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,o],nn(s.dtype,o.dtype))}const fse={kernelName:dx,backendName:"webgl",kernelFunc:pse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mse=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${k0};
  float scale = ${I0};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,gse=De({opSnippet:mse}),yse={kernelName:hx,backendName:"webgl",kernelFunc:gse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xse=Sa+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,vse=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,wse=De({opSnippet:xse,packedOpSnippet:vse,cpuKernelImpl:v9}),bse={kernelName:yx,backendName:"webgl",kernelFunc:wse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cse=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Sse=De({opSnippet:Cse}),$se={kernelName:gx,backendName:"webgl",kernelFunc:Sse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kse=Sa+`
  return sin(x);
`,Ise=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${ii}
  return result;
`,Nse=De({opSnippet:kse,packedOpSnippet:Ise}),Tse={kernelName:fx,backendName:"webgl",kernelFunc:Nse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ese=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Rse=De({opSnippet:Ese}),_se={kernelName:mx,backendName:"webgl",kernelFunc:Rse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pse=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Ase=De({opSnippet:Pse}),Dse={kernelName:xx,backendName:"webgl",kernelFunc:Ase};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ose=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:o,paddings:i}=r;T(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((g,v)=>g*v),u=[[0,0]];u.push(...i);for(let g=1+o.length;g<s.shape.length;++g)u.push([0,0]);const l=[],c=HN({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),d=ol(c.shape,o,a,!1),h=il(d.length,o.length,!1),p=al(c.shape,o,a,!1),f=re({inputs:{x:c},backend:n,attrs:{shape:d}}),y=Xt({inputs:{x:f},backend:n,attrs:{perm:h}}),x=re({inputs:{x:y},backend:n,attrs:{shape:p}});return l.push(c),l.push(f),l.push(y),l.forEach(g=>n.disposeIntermediateTensorInfo(g)),x},Fse={kernelName:bx,backendName:"webgl",kernelFunc:Ose};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lse(t){const{inputs:e,backend:n}=t,{indices:r,values:s,denseShape:o,defaultValue:i}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${s.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=n.readSync(r.dataId),u=n.readSync(s.dataId),l=n.readSync(o.dataId),c=n.readSync(i.dataId)[0],[d,h,p,f,y]=b9(a,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(x=>Number(x)))),n.makeTensorInfo([y.length],r.dtype,new Int32Array(y))]}const zse={kernelName:XS,backendName:"webgl",kernelFunc:Lse};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bse(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:s,newShape:o}=e;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const i=Array.from(n.readSync(s.dataId)),a=n.readSync(r.dataId),u=Array.from(n.readSync(o.dataId)),[l,c,d]=C9(a,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}const Mse={kernelName:qS,backendName:"webgl",kernelFunc:Bse};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vse(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const i=n.readSync(r.dataId),a=n.readSync(s.dataId),u=n.readSync(o.dataId),[l,c]=gN(i,r.shape,r.dtype,a,u,!0);return n.makeTensorInfo(c,r.dtype,l)}const Wse={kernelName:$x,backendName:"webgl",kernelFunc:Vse};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Use(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const i=n.readSync(r.dataId),a=n.readSync(s.dataId),u=n.readSync(o.dataId),[l,c]=gN(i,r.shape,r.dtype,a,u);return n.makeTensorInfo(c,r.dtype,l)}const Gse={kernelName:kx,backendName:"webgl",kernelFunc:Use};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hse(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:s,sparseValues:o,defaultValue:i}=e,{outputShape:a}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:d,outputSize:h}=Zo(o,s,a),p=!1;if(o.dtype==="string"){const g=n.bufferSync(s),v=n.bufferSync(o),b=us(n.readSync(i.dataId)[0]),S=x9(g,v,a,h,c,l,u,d,b,p);return n.makeTensorInfo(a,S.dtype,S.values)}const f=new t1(l,u,s.shape.length,o.shape.length,d,[h,1],p),y=n.runWebGLProgram(f,[o,s,i],o.dtype),x=re({inputs:{x:y},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(y),x}const jse={kernelName:Ix,backendName:"webgl",kernelFunc:Hse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kse(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{numOrSizeSplits:o,axis:i}=r,a=Je(i,s.shape)[0],u=z0(s,o,a),l=s.shape.length,c=new Array(l).fill(0),d=s.shape.slice();return u.map(h=>{const p=[...d];p[a]=h;const f=$a({inputs:{x:s},backend:n,attrs:{begin:c,size:p}});return c[a]+=h,f})}const Xse={kernelName:Cx,backendName:"webgl",kernelFunc:Kse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ab="return sqrt(x);",qse=De({opSnippet:ab,packedOpSnippet:ab,cpuKernelImpl:S9}),Yse={kernelName:vx,backendName:"webgl",kernelFunc:qse};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qse="return x * x;",Zse=De({opSnippet:Qse}),Jse={kernelName:YS,backendName:"webgl",kernelFunc:Zse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ub="return (a - b) * (a - b);",eoe=Rt({opSnippet:ub,packedOpSnippet:ub}),toe={kernelName:Nx,backendName:"webgl",kernelFunc:eoe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function noe(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");const o=n.readSync(s.dataId),i=Ys(o),a=$9(i,"string",r);return n.makeTensorInfo(s.shape,"string",a)}const roe={kernelName:QS,backendName:"webgl",kernelFunc:noe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function soe({inputs:t,attrs:e,backend:n}){const{x:r}=t,s=ur+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new Fr(r.shape,s);return n.runWebGLProgram(o,[r],r.dtype)}const ooe={kernelName:zx,backendName:"webgl",kernelFunc:soe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ioe{constructor(e,n,r){this.variableNames=["x"],this.outputShape=r;const s=r.length,o=Ge(r.length),i=Ge(r.length);let a="";if(s===1)a="coords * strides + begin";else{let u=0;a=r.map((l,c)=>(u++,r.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${u-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${n});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aoe(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:o,end:i,strides:a,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=r,{finalShapeSparse:p,finalShape:f,isIdentity:y,sliceDim0:x,isSimpleSlice:g,begin:v,end:b,strides:S}=v0(s.shape,o,i,a,u,l,c,d,h);let I;if(y)I=re({inputs:{x:s},backend:n,attrs:{shape:f}});else if(x||g){T(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const R=m0(v,b,S),_=$a({inputs:{x:s},backend:n,attrs:{begin:v,size:R}});I=re({inputs:{x:_},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(_)}else if(n.shouldExecuteOnCPU([s])){const _=n.readSync(s.dataId),L=Be(s.shape,s.dtype,_),F=k9(p,L,S,v);I=n.makeTensorInfo(f,s.dtype,F.values)}else{const _=new ioe(v,S,p);I=n.runWebGLProgram(_,[s],s.dtype)}const E=re({inputs:{x:I},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(I),E}const uoe={kernelName:Tx,backendName:"webgl",kernelFunc:aoe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function loe(t){const{inputs:e,backend:n,attrs:r}=t,{separator:s,nGramWidths:o,leftPad:i,rightPad:a,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:d}=e,h=n.readSync(c.dataId),p=n.readSync(d.dataId),[f,y]=I9(h,p,s,o,i,a,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",y)]}const coe={kernelName:Ex,backendName:"webgl",kernelFunc:loe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function doe(t){const{inputs:e,backend:n,attrs:r}=t,{skipEmpty:s}=r,{input:o,delimiter:i}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=n.readSync(o.dataId),u=n.readSync(i.dataId)[0],[l,c,d]=N9(a,u,s),h=c.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}const hoe={kernelName:ZS,backendName:"webgl",kernelFunc:doe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function poe(t){const{inputs:e,backend:n,attrs:r}=t,{numBuckets:s}=r,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(o.dataId),a=T9(i,s);return n.makeTensorInfo(o.shape,"int32",a)}const foe={kernelName:JS,backendName:"webgl",kernelFunc:poe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const moe="return tan(x);",goe=De({opSnippet:moe}),yoe={kernelName:_x,backendName:"webgl",kernelFunc:goe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xoe=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,voe=De({opSnippet:xoe}),woe={kernelName:Px,backendName:"webgl",kernelFunc:voe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function boe(t){const{inputs:e,backend:n,attrs:r}=t,{tensor:s,indices:o,updates:i}=e,{sliceRank:a,numUpdates:u,sliceSize:l,strides:c,outputSize:d}=Zo(i,o,s.shape),h=[d/l,l];if(d===0)return n.makeTensorInfo(s.shape,o.dtype);const p=re({inputs:{x:o},backend:n,attrs:{shape:[u,a]}}),f=re({inputs:{x:i},backend:n,attrs:{shape:[u,l]}}),y=re({inputs:{x:s},backend:n,attrs:{shape:h}}),x=new t1(u,a,p.shape.length,f.shape.length,c,h,!1,!0),g=n.runWebGLProgram(x,[f,p,y],y.dtype),v=re({inputs:{x:g},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(g),v}const Coe={kernelName:lx,backendName:"webgl",kernelFunc:boe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Soe{constructor(e,n){this.variableNames=["A"];const r=new Array(e.length);for(let i=0;i<r.length;i++)r[i]=e[i]*n[i];this.outputShape=r,this.rank=r.length;const s=Ge(this.rank),o=$oe(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function $oe(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<t.length;s++)r.push(`imod(${n[s]}, ${t[s]})`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KN(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reps:o}=r;if(s.dtype==="string"||s.shape.length>5){const u=n.readSync(s.dataId),l=s.dtype==="string"?u.map(h=>us(h)):u,c=Be(s.shape,s.dtype,l),d=R9(c,o);return n.makeTensorInfo(d.shape,d.dtype,d.values)}const i=new Soe(s.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}const koe={kernelName:_d,backendName:"webgl",kernelFunc:KN};class Ioe{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class Noe{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ho(t,e){e!==null&&t.disposeIntermediateTensorInfo(e)}function lb(t){let e=1;for(;e<t;)e*=2;return e}function Toe(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{k:o,sorted:i}=r,a=M().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=M().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([s])||c<a||o>u){const F=n.readSync(s.dataId),[V,j]=_9(F,l,s.dtype,o,i);return[n.makeTensorInfo(V.shape,V.dtype,V.values),n.makeTensorInfo(j.shape,j.dtype,j.values)]}if(o===0)return l[l.length-1]=0,[n.makeTensorInfo(l,s.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(c===1)return[s,pl({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const d=n.texData.get(s.dataId),h=d!==null&&d.isPacked,p=h?n.unpackTensor(s):s,y=U(l)/c,x=re({inputs:{x:p},attrs:{shape:[y,c]},backend:n});h&&ho(n,p);const g=lb(o),v=lb(c);let b=null;const S=()=>b===null?[x,x]:[x,b],I=(F,V,j)=>{const K=S(),Z=new Ioe(j),ce=[[c],[b===null?1:0],[Number.NEGATIVE_INFINITY],[F],[V]],Ce=b;b=n.runWebGLProgram(Z,K,"int32",ce),ho(n,Ce)};for(let F=1;F<g;F*=2){const V=F*2;for(let j=F;j>=1;j/=2)I(V,j,[y,v])}for(let F=v;F>g;F/=2){const V=S(),j=new Noe([y,F/2]),Z=[[c],[b===null?1:0],[g]],ne=b;b=n.runWebGLProgram(j,V,"int32",Z),ho(n,ne);const ce=g/2,Ce=ce*2;for(let X=ce;X>=1;X/=2)I(Ce,X,b.shape)}let E=b;b=$a({inputs:{x:b},backend:n,attrs:{begin:0,size:[y,o]}}),ho(n,E);let R=BN({inputs:{x,indices:b},backend:n,attrs:{axis:1,batchDims:1}});ho(n,x);const _=l.slice(0,-1);_.push(o),E=b,b=re({inputs:{x:b},attrs:{shape:_},backend:n}),ho(n,E);const L=R;return R=re({inputs:{x:R},attrs:{shape:_},backend:n}),ho(n,L),[R,b]}const Eoe={kernelName:Ax,backendName:"webgl",kernelFunc:Toe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Roe{constructor(e,n,r,s,o,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a=r==="nearest"?1:2;let u;switch(s){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${n}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${n}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _oe(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,transforms:o}=e,{interpolation:i,fillMode:a,fillValue:u,outputShape:l}=r,[c,d,h,p]=s.shape,[f,y]=l??[d,h],x=[c,f,y,p],g=new Roe(d,h,i,a,u,x);return n.runWebGLProgram(g,[s,o],"float32")}const Poe={kernelName:Dx,backendName:"webgl",kernelFunc:_oe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aoe(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:o}=e;cl(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(o.dataId),{outputValues:a,outputShape:u,indices:l}=P9(i,s,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,a),r.makeTensorInfo([l.length],"int32",l)]}const Doe={kernelName:e$,backendName:"webgl",kernelFunc:Aoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ooe(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:o}=r;o<0&&(o+=s.shape.length);const i=s,a=i.shape.length,u=s.shape[o],l=new Array(a-1);let c=0;for(let y=0;y<a;y++)y!==o&&(l[c++]=i.shape[y]);const d=[],h=new Array(a).fill(0),p=i.shape.slice();p[o]=1;const f=new Array(u);for(let y=0;y<f.length;y++){h[o]=y;const x=$a({inputs:{x:i},backend:n,attrs:{begin:h,size:p}}),g=re({inputs:{x},backend:n,attrs:{shape:l}});f[y]=g,d.push(x)}return d.forEach(y=>n.disposeIntermediateTensorInfo(y)),f}const Foe={kernelName:Ox,backendName:"webgl",kernelFunc:Ooe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Loe{constructor(e,n){this.variableNames=["x","segmentIds"];const r=e.windowSize,s=e.batchSize,o=e.inSize,i=e.numSegments,a=i*Math.ceil(o/r);this.outputShape=[s,a];const u="0.0",l="sumValue",c=Math.floor(r/4)*4,d=r%4,h=`
        sumValue += dot(values, segFilter);
    `;let p="";o%r>0&&(p=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let f="";o%r>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${h}
        }

        int inIdx = inOffset + ${c};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${h}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${h}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${h}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zoe(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,segmentIds:o}=e,{numSegments:i}=r,a=s.shape.length,u=[];let l=0;const c=Lt([l],a);let d=s;c!=null&&(d=Xt({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(d),l=zt(1,a)[0]);const h=B0(d.shape,l,i),p=U([d.shape[l]]),f=re({inputs:{x:d},backend:n,attrs:{shape:[-1,p]}});u.push(f);const y=Dd(s.dtype),x=(S,I,E,R,_)=>{const L=S.shape[0],F=S.shape[1],V=rI(F,_),j={windowSize:V,inSize:F,batchSize:L,numSegments:_},K=new Loe(j,I),Z=n.compileAndRun(K,[S,E],R);if(u.push(Z),Z.shape[1]===_)return Z;const ne=jN({backend:n,attrs:{start:0,stop:_,step:1,dtype:"float32"}}),ce=KN({inputs:{x:ne},backend:n,attrs:{reps:[F/V]}});return u.push(ne),u.push(ce),x(Z,I,ce,R,_)},g=x(f,"unsortedSegmentSum",o,y,i),v=re({inputs:{x:g},backend:n,attrs:{shape:h}});let b=v;if(c!=null){u.push(v);const S=sl(c);b=Xt({inputs:{x:b},backend:n,attrs:{perm:S}})}return u.forEach(S=>n.disposeIntermediateTensorInfo(S)),b}const Boe={kernelName:Fx,backendName:"webgl",kernelFunc:zoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Moe=[SQ,kQ,TQ,_Q,AQ,FQ,zQ,MQ,GQ,jQ,qQ,ZQ,tZ,oZ,uZ,cZ,hZ,gZ,xZ,wZ,$Z,_Z,AZ,LZ,BZ,HZ,KZ,QZ,iQ,eJ,oJ,lJ,mJ,xJ,wJ,CJ,$J,TJ,_J,DJ,FJ,zJ,MJ,UJ,HJ,qJ,QJ,eee,ree,oee,lee,pee,yee,wee,See,$ee,Iee,Tee,Ree,Pee,Dee,zee,Vee,Gee,jee,qee,Zee,nte,ite,oQ,ute,rJ,dte,fte,yte,uQ,bte,kte,Nte,_te,Dte,zte,Vte,Hte,qte,Zte,ene,sne,ine,une,hne,fne,gne,xne,wne,$ne,Tne,Pne,Mne,dQ,Gne,Kne,Yne,Jne,VZ,nre,sre,ire,lre,pre,cQ,mre,yre,vre,bre,Cre,WZ,Fne,kre,Ere,Are,pQ,Lre,Mre,Gre,Kre,Qre,Jre,nse,ose,use,dse,fse,yse,bse,$se,Tse,_se,EZ,zne,Dse,Fse,zse,Mse,Wse,Gse,jse,Xse,Yse,Jse,toe,roe,ooe,uoe,coe,hoe,foe,Lne,wQ,yoe,woe,Coe,koe,Eoe,Poe,bQ,Doe,Foe,Boe,rre];for(const t of Moe)t$(t);const Voe={},cb=t=>{let e;const n=new Set,r=(c,d)=>{const h=typeof c=="function"?c(e):c;if(!Object.is(h,e)){const p=e;e=d??(typeof h!="object"||h===null)?h:Object.assign({},e,h),n.forEach(f=>f(e,p))}},s=()=>e,u={setState:r,getState:s,getInitialState:()=>l,subscribe:c=>(n.add(c),()=>n.delete(c)),destroy:()=>{(Voe?"production":void 0)!=="production"&&console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),n.clear()}},l=e=t(r,s,u);return u},Woe=t=>t?cb(t):cb;var XN={exports:{}},qN={},YN={exports:{}},QN={};/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ia=nt;function Uoe(t,e){return t===e&&(t!==0||1/t===1/e)||t!==t&&e!==e}var Goe=typeof Object.is=="function"?Object.is:Uoe,Hoe=ia.useState,joe=ia.useEffect,Koe=ia.useLayoutEffect,Xoe=ia.useDebugValue;function qoe(t,e){var n=e(),r=Hoe({inst:{value:n,getSnapshot:e}}),s=r[0].inst,o=r[1];return Koe(function(){s.value=n,s.getSnapshot=e,bp(s)&&o({inst:s})},[t,n,e]),joe(function(){return bp(s)&&o({inst:s}),t(function(){bp(s)&&o({inst:s})})},[t]),Xoe(n),n}function bp(t){var e=t.getSnapshot;t=t.value;try{var n=e();return!Goe(t,n)}catch{return!0}}function Yoe(t,e){return e()}var Qoe=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?Yoe:qoe;QN.useSyncExternalStore=ia.useSyncExternalStore!==void 0?ia.useSyncExternalStore:Qoe;YN.exports=QN;var Zoe=YN.exports;/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var th=nt,Joe=Zoe;function eie(t,e){return t===e&&(t!==0||1/t===1/e)||t!==t&&e!==e}var tie=typeof Object.is=="function"?Object.is:eie,nie=Joe.useSyncExternalStore,rie=th.useRef,sie=th.useEffect,oie=th.useMemo,iie=th.useDebugValue;qN.useSyncExternalStoreWithSelector=function(t,e,n,r,s){var o=rie(null);if(o.current===null){var i={hasValue:!1,value:null};o.current=i}else i=o.current;o=oie(function(){function u(p){if(!l){if(l=!0,c=p,p=r(p),s!==void 0&&i.hasValue){var f=i.value;if(s(f,p))return d=f}return d=p}if(f=d,tie(c,p))return f;var y=r(p);return s!==void 0&&s(f,y)?(c=p,f):(c=p,d=y)}var l=!1,c,d,h=n===void 0?null:n;return[function(){return u(e())},h===null?void 0:function(){return u(h())}]},[e,n,r,s]);var a=nie(t,o[0],o[1]);return sie(function(){i.hasValue=!0,i.value=a},[a]),iie(a),a};XN.exports=qN;var aie=XN.exports;const uie=um(aie),ZN={},{useDebugValue:lie}=pm,{useSyncExternalStoreWithSelector:cie}=uie;let db=!1;const die=t=>t;function hie(t,e=die,n){(ZN?"production":void 0)!=="production"&&n&&!db&&(console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),db=!0);const r=cie(t.subscribe,t.getState,t.getServerState||t.getInitialState,e,n);return lie(r),r}const hb=t=>{(ZN?"production":void 0)!=="production"&&typeof t!="function"&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const e=typeof t=="function"?Woe(t):t,n=(r,s)=>hie(e,r,s);return Object.assign(n,e),n},pie=t=>t?hb(t):hb,JN=pie((t,e)=>({currentTest:null,testStatus:"idle",landmarks:null,analysisResults:{},setCurrentTest:n=>{t({currentTest:n})},startTest:()=>{const{currentTest:n}=e();n&&t({testStatus:"running",landmarks:null})},stopTest:()=>{t({testStatus:"idle"})},resetTest:()=>{t({testStatus:"idle",landmarks:null})},updateLandmarks:(n,r)=>{t({landmarks:n})},completeTest:n=>{const{currentTest:r,analysisResults:s}=e();r&&t({testStatus:"completed",analysisResults:{...s,[r]:n}})}})),fie=t=>{const[e,n]=nt.useState(null),[r,s]=nt.useState(!1),[o,i]=nt.useState(null),[a,u]=nt.useState(!0),l=nt.useRef(),c=nt.useRef(0),d=nt.useRef(0),{testStatus:h,currentTest:p,updateLandmarks:f}=JN();return nt.useEffect(()=>{let y=!0;return(async()=>{try{i(null),u(!0),console.log("🚀 TensorFlow.js BlazePose初期化開始...");const g=Wr.BlazePose,b=await Qq(g,{runtime:"tfjs",modelType:"lite",enableSmoothing:!0,enableSegmentation:!1});if(!y)return;console.log("✅ TensorFlow.js BlazePose初期化完了"),n(b),s(!0),u(!1)}catch(g){console.error("❌ TensorFlow.js BlazePose初期化エラー:",g),y&&(i(`TensorFlow.js BlazePoseの初期化に失敗しました: ${g instanceof Error?g.message:String(g)}`),u(!1))}})(),()=>{y=!1,l.current&&cancelAnimationFrame(l.current)}},[]),nt.useEffect(()=>{if(!e||!t||h!=="running")return;let y=-1;const x=async()=>{try{if(!t||!e||h!=="running")return;const g=t.currentTime;if(g!==y){if(y=g,c.current++,c.current%2!==0){l.current=requestAnimationFrame(x);return}console.log("🎬 TensorFlow.js pose detection...");const v=await e.estimatePoses(t);if(v&&v.length>0&&v[0].keypoints){const S=v[0].keypoints.map(E=>({x:E.x/t.videoWidth,y:E.y/t.videoHeight,z:0,visibility:E.score||1})),I=Date.now();f(S,I),console.log("✅ TensorFlow.js ランドマーク検出:",S.length+"個")}if(Date.now()-d.current>1e4){console.log("✅ テスト完了（10秒経過）");return}}l.current=requestAnimationFrame(x)}catch(g){console.error("🔴 TensorFlow.js Pose detection error:",g),i(`ポーズ検出中にエラーが発生しました: ${g instanceof Error?g.message:String(g)}`)}};return h==="running"&&(d.current=Date.now(),c.current=0,x()),()=>{l.current&&cancelAnimationFrame(l.current)}},[e,t,h,p,f]),{isModelReady:r,error:o,isInitializing:a}},Cp={[xn.STANDING_HIP_FLEXION]:"立位股関節屈曲",[xn.ROCK_BACK]:"ロックバック",[xn.SITTING_KNEE_EXTENSION]:"座位膝関節伸展"},mie={[xn.STANDING_HIP_FLEXION]:"立位姿勢の状態で前屈をして、腰椎屈曲のコントロールを評価します。膝を曲げずに股関節から前屈してください。",[xn.ROCK_BACK]:"四つ這いの姿勢で体重を後方に移動させて腰椎屈曲と伸展のコントロールを評価します。ゆっくりと後方に体重を移動してください。",[xn.SITTING_KNEE_EXTENSION]:"座位姿勢で膝関節を伸展した際の腰椎屈曲のコントロールを評価します。背筋を伸ばした状態で片脚の膝を伸ばしてください。"},gie={[xn.STANDING_HIP_FLEXION]:["股関節を軸とした前屈動作","腰椎の過度な屈曲を避ける","膝関節は伸展位を保持","体幹の一体性を維持"],[xn.ROCK_BACK]:["四つ這い位から後方への体重移動","腰椎の分節的な屈曲・伸展","上肢での支持性維持","頭頸部の安定性保持"],[xn.SITTING_KNEE_EXTENSION]:["座位での体幹安定性維持","膝関節伸展時の腰椎制御","骨盤ニュートラル位置保持","代償動作の最小化"]},yie=()=>{const[t,e]=nt.useState(null),[n,r]=nt.useState({width:0,height:0}),s=nt.useRef(null),o=nt.useRef(null),[i,a]=nt.useState(null),[u,l]=nt.useState(!1),c=F=>{var j;const V=(j=F.target.files)==null?void 0:j[0];if(V){i&&URL.revokeObjectURL(i);const K=URL.createObjectURL(V);a(K),l(!0)}},{currentTest:d,testStatus:h,landmarks:p,analysisResults:f,setCurrentTest:y,startTest:x,resetTest:g}=JN(),{isModelReady:v,error:b,isInitializing:S}=fie(t);nt.useEffect(()=>{const F=()=>{if(t&&o.current){const V=t.videoWidth,j=t.videoHeight;V&&j&&(r({width:V,height:j}),console.log("📐 Video size updated:",{videoWidth:V,videoHeight:j}))}};if(t)return t.addEventListener("loadedmetadata",F),t.addEventListener("resize",F),t.videoWidth&&F(),()=>{t.removeEventListener("loadedmetadata",F),t.removeEventListener("resize",F)}},[t]);const I=nt.useCallback(F=>{console.log("🎬 Setting video element:",F),e(F)},[]),E=()=>{u&&s.current?(s.current.currentTime=0,s.current.play().then(()=>{console.log("Video file started playing"),e(s.current),x()}).catch(F=>{console.error("Failed to play video:",F)})):!u&&t&&(console.log("Starting webcam test"),x())},R=()=>{g(),u&&s.current&&(s.current.currentTime=0,s.current.pause())},_=()=>{g(),i&&URL.revokeObjectURL(i),a(null),l(!1),e(null)};nt.useEffect(()=>()=>{i&&URL.revokeObjectURL(i)},[i]);const L=d?f[d]:void 0;return b?G.jsx("div",{className:"min-h-screen flex items-center justify-center bg-red-50 p-4",children:G.jsxs("div",{className:"bg-white p-6 rounded-lg shadow-lg max-w-md w-full",children:[G.jsx("h2",{className:"text-xl font-bold text-red-600 mb-4",children:"エラーが発生しました"}),G.jsx("p",{className:"text-gray-700 mb-6 text-sm",children:b}),G.jsxs("div",{className:"flex flex-col gap-3",children:[G.jsx("button",{onClick:()=>window.location.reload(),className:"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 text-sm",children:"リロード"}),G.jsx("button",{onClick:_,className:"bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600 text-sm",children:"カメラに戻る"})]})]})}):S||!v?G.jsx("div",{className:"min-h-screen flex items-center justify-center bg-gray-100 p-4",children:G.jsxs("div",{className:"bg-white p-6 rounded-lg shadow-lg text-center max-w-sm w-full",children:[G.jsx("div",{className:"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4"}),G.jsx("h2",{className:"text-lg font-semibold mb-2",children:S?"MediaPipeを初期化中...":"モデルを読み込み中..."}),G.jsx("p",{className:"text-gray-600 text-sm",children:"しばらくお待ちください"})]})}):G.jsxs("div",{className:"test-analysis-view min-h-screen bg-gray-50",children:[G.jsxs("header",{className:"app-header bg-white shadow-sm p-4 md:p-6",children:[G.jsx("h1",{className:"text-2xl md:text-3xl font-bold text-gray-800 mb-4",children:"腰椎コントロール評価システム"}),G.jsxs("div",{className:"test-selector",children:[G.jsx("h2",{className:"text-lg md:text-xl font-semibold mb-3",children:"評価項目選択:"}),G.jsx("div",{className:"flex flex-wrap gap-2 md:gap-3",children:Object.values(xn).map(F=>G.jsx("button",{className:`px-3 md:px-6 py-2 md:py-3 rounded-lg font-medium transition-colors text-xs md:text-sm ${d===F?"bg-blue-500 text-white shadow-md":"bg-gray-200 text-gray-700 hover:bg-gray-300"} ${h==="running"?"opacity-50 cursor-not-allowed":""}`,onClick:()=>y(F),disabled:h==="running",children:Cp[F]},F))})]}),G.jsxs("div",{className:"mt-4 md:mt-6 flex flex-col md:flex-row gap-3",children:[G.jsx("label",{htmlFor:"video-upload",className:"inline-block bg-green-500 text-white font-bold py-2 px-4 rounded cursor-pointer hover:bg-green-600 transition-colors text-sm text-center",children:"📁 動画ファイルを選択して解析"}),G.jsx("input",{id:"video-upload",type:"file",accept:"video/*",className:"hidden",onChange:c,disabled:h==="running"}),u&&G.jsx("button",{onClick:_,className:"bg-gray-500 text-white font-bold py-2 px-4 rounded hover:bg-gray-600 transition-colors text-sm",disabled:h==="running",children:"📷 カメラに戻る"})]}),i&&G.jsx("p",{className:"mt-2 text-sm text-green-600",children:"✅ 動画ファイルが選択されました"})]}),G.jsxs("main",{className:"test-content p-4 md:p-6",children:[G.jsxs("div",{className:"camera-section w-full max-w-4xl mx-auto mb-6",children:[G.jsxs("div",{ref:o,className:"video-container relative w-full bg-black rounded-lg overflow-hidden",style:{aspectRatio:"16/9",minHeight:"300px"},children:[u?G.jsx("video",{ref:s,src:i||void 0,className:"w-full h-full object-contain",controls:!0,playsInline:!0,"webkit-playsinline":"true",onLoadedData:()=>e(s.current),style:{width:"100%",height:"100%",objectFit:"contain"}}):G.jsx(b3,{onVideoElement:I}),p&&n.width>0&&n.height>0&&G.jsx(C3,{landmarks:p,videoWidth:n.width,videoHeight:n.height,isMirrored:!u}),h==="running"&&G.jsx("div",{className:"absolute top-2 md:top-4 left-2 md:left-4 bg-red-500 text-white px-2 md:px-3 py-1 rounded-full text-xs md:text-sm font-medium",children:"🔴 解析中..."})]}),G.jsxs("div",{className:"test-controls mt-4 text-center",children:[h==="idle"&&G.jsx("button",{className:"bg-blue-500 text-white px-6 md:px-8 py-3 md:py-4 rounded-lg font-semibold text-sm md:text-base hover:bg-blue-600 transition-colors disabled:opacity-50 disabled:cursor-not-allowed",onClick:E,disabled:!d||!v,children:"解析開始"}),h==="running"&&G.jsx("div",{className:"text-blue-600 font-semibold text-sm md:text-base",children:"解析中..."}),h==="completed"&&G.jsx("button",{className:"bg-gray-500 text-white px-6 md:px-8 py-3 md:py-4 rounded-lg font-semibold text-sm md:text-base hover:bg-gray-600 transition-colors",onClick:R,children:"リセット"})]})]}),G.jsx("div",{className:"results-section bg-white rounded-lg shadow-lg p-4 md:p-6",children:d&&L?G.jsxs("div",{className:"test-results",children:[G.jsxs("h3",{className:"text-xl md:text-2xl font-bold mb-4 md:mb-6",children:[Cp[d]," 結果"]}),G.jsxs("div",{className:"flex flex-col md:flex-row gap-6 md:gap-8",children:[G.jsx("div",{className:"score-display flex justify-center",children:G.jsx("div",{className:"score-circle w-24 h-24 md:w-32 md:h-32 rounded-full flex items-center justify-center relative",style:{background:`conic-gradient(#4CAF50 0%, #4CAF50 ${L.score}%, #f3f3f3 ${L.score}%, #f3f3f3 100%)`},children:G.jsx("div",{className:"bg-white w-16 h-16 md:w-20 md:h-20 rounded-full flex items-center justify-center",children:G.jsx("span",{className:"text-xl md:text-2xl font-bold text-gray-800",children:Math.round(L.score)})})})}),G.jsxs("div",{className:"metrics-list flex-1",children:[G.jsx("h4",{className:"font-semibold text-gray-800 mb-3",children:"詳細測定値:"}),G.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-2",children:Object.entries(L.metrics).map(([F,V])=>G.jsxs("div",{className:"bg-gray-50 p-3 rounded flex justify-between items-center",children:[G.jsxs("span",{className:"text-sm font-medium text-gray-700",children:[F,":"]}),G.jsx("span",{className:"text-sm font-bold text-gray-900",children:typeof V=="number"?F.includes("角度")?`${V.toFixed(1)}°`:V.toFixed(1):V})]},F))})]})]}),G.jsxs("div",{className:"feedback mt-6",children:[G.jsx("h4",{className:"font-semibold text-gray-800 mb-3",children:"評価結果:"}),G.jsx("div",{className:"bg-blue-50 p-4 rounded-lg",children:G.jsx("p",{className:"text-sm md:text-base text-gray-700 leading-relaxed whitespace-pre-line",children:L.feedback})})]})]}):d?G.jsxs("div",{className:"test-instructions",children:[G.jsx("h3",{className:"text-xl md:text-2xl font-bold mb-4",children:Cp[d]}),G.jsxs("div",{className:"mb-6 p-4 bg-gray-100 rounded-lg text-center",children:[G.jsxs("svg",{width:"160",height:"120",viewBox:"0 0 200 150",className:"mx-auto mb-3 max-w-full h-auto",children:[d===xn.STANDING_HIP_FLEXION&&G.jsxs("g",{children:[G.jsx("circle",{cx:"100",cy:"25",r:"12",fill:"#007bff"}),G.jsx("line",{x1:"100",y1:"37",x2:"100",y2:"80",stroke:"#007bff",strokeWidth:"4"}),G.jsx("line",{x1:"100",y1:"60",x2:"80",y2:"45",stroke:"#007bff",strokeWidth:"3"}),G.jsx("line",{x1:"100",y1:"60",x2:"120",y2:"45",stroke:"#007bff",strokeWidth:"3"}),G.jsx("line",{x1:"100",y1:"80",x2:"85",y2:"120",stroke:"#007bff",strokeWidth:"3"}),G.jsx("line",{x1:"100",y1:"80",x2:"115",y2:"120",stroke:"#007bff",strokeWidth:"3"}),G.jsx("path",{d:"M 120 55 L 140 75 L 135 70 M 140 75 L 135 80",stroke:"#ff4444",strokeWidth:"2",fill:"none"}),G.jsx("text",{x:"100",y:"140",textAnchor:"middle",fontSize:"10",fill:"#666",children:"立位前屈"})]}),d===xn.ROCK_BACK&&G.jsxs("g",{children:[G.jsx("circle",{cx:"60",cy:"40",r:"10",fill:"#28a745"}),G.jsx("line",{x1:"60",y1:"50",x2:"60",y2:"80",stroke:"#28a745",strokeWidth:"3"}),G.jsx("line",{x1:"60",y1:"65",x2:"40",y2:"55",stroke:"#28a745",strokeWidth:"2"}),G.jsx("line",{x1:"60",y1:"65",x2:"80",y2:"55",stroke:"#28a745",strokeWidth:"2"}),G.jsx("line",{x1:"60",y1:"80",x2:"80",y2:"110",stroke:"#28a745",strokeWidth:"3"}),G.jsx("line",{x1:"60",y1:"80",x2:"100",y2:"110",stroke:"#28a745",strokeWidth:"3"}),G.jsx("circle",{cx:"120",cy:"60",r:"8",fill:"#28a745",fillOpacity:"0.5"}),G.jsx("path",{d:"M 80 85 Q 100 95 120 60",stroke:"#ff4444",strokeWidth:"2",fill:"none",strokeDasharray:"3,3"}),G.jsx("text",{x:"100",y:"140",textAnchor:"middle",fontSize:"10",fill:"#666",children:"四つ這いロックバック"})]}),d===xn.SITTING_KNEE_EXTENSION&&G.jsxs("g",{children:[G.jsx("circle",{cx:"100",cy:"30",r:"10",fill:"#ffc107"}),G.jsx("line",{x1:"100",y1:"40",x2:"100",y2:"70",stroke:"#ffc107",strokeWidth:"3"}),G.jsx("line",{x1:"100",y1:"55",x2:"85",y2:"45",stroke:"#ffc107",strokeWidth:"2"}),G.jsx("line",{x1:"100",y1:"55",x2:"115",y2:"45",stroke:"#ffc107",strokeWidth:"2"}),G.jsx("rect",{x:"85",y:"70",width:"30",height:"10",fill:"#8B4513"}),G.jsx("line",{x1:"100",y1:"70",x2:"100",y2:"90",stroke:"#ffc107",strokeWidth:"3"}),G.jsx("line",{x1:"100",y1:"90",x2:"130",y2:"95",stroke:"#ffc107",strokeWidth:"3"}),G.jsx("line",{x1:"100",y1:"90",x2:"85",y2:"110",stroke:"#ffc107",strokeWidth:"2",strokeDasharray:"2,2"}),G.jsx("text",{x:"100",y:"140",textAnchor:"middle",fontSize:"10",fill:"#666",children:"座位膝伸展"})]})]}),G.jsx("p",{className:"text-xs md:text-sm text-gray-600 font-medium",children:"評価動作の例"})]}),G.jsxs("div",{className:"mb-6",children:[G.jsx("h4",{className:"font-semibold text-gray-800 mb-2",children:"📋 実行方法:"}),G.jsx("p",{className:"text-sm text-gray-600 leading-relaxed mb-3",children:mie[d]}),G.jsx("h5",{className:"font-medium text-gray-700 mb-2",children:"評価ポイント:"}),G.jsx("ul",{className:"text-sm text-gray-600 space-y-1",children:gie[d].map((F,V)=>G.jsxs("li",{className:"flex items-start",children:[G.jsx("span",{className:"text-blue-500 mr-2 flex-shrink-0",children:"•"}),G.jsx("span",{children:F})]},V))})]}),G.jsxs("div",{className:"bg-yellow-50 p-4 rounded-lg",children:[G.jsx("h4",{className:"font-semibold text-yellow-800 mb-2",children:"⚠️ 注意事項:"}),G.jsxs("ul",{className:"text-sm text-yellow-700 space-y-1",children:[G.jsxs("li",{className:"flex items-start",children:[G.jsx("span",{className:"mr-2 flex-shrink-0",children:"•"}),G.jsx("span",{children:"全身がカメラに映るように調整してください"})]}),G.jsxs("li",{className:"flex items-start",children:[G.jsx("span",{className:"mr-2 flex-shrink-0",children:"•"}),G.jsx("span",{children:"十分な照明を確保してください"})]}),G.jsxs("li",{className:"flex items-start",children:[G.jsx("span",{className:"mr-2 flex-shrink-0",children:"•"}),G.jsx("span",{children:"動作はゆっくりと行ってください"})]}),G.jsxs("li",{className:"flex items-start",children:[G.jsx("span",{className:"mr-2 flex-shrink-0",children:"•"}),G.jsx("span",{children:"痛みを感じた場合は中止してください"})]}),G.jsxs("li",{className:"flex items-start",children:[G.jsx("span",{className:"mr-2 flex-shrink-0",children:"•"}),G.jsx("span",{children:"安全な場所で実施してください"})]})]})]})]}):G.jsx("div",{className:"no-results",children:G.jsxs("div",{className:"text-center py-8",children:[G.jsx("div",{className:"text-4xl mb-4",children:"🏥"}),G.jsx("h3",{className:"text-lg font-semibold text-gray-700 mb-2",children:"評価項目を選択してください"}),G.jsx("p",{className:"text-sm text-gray-500 mb-4",children:"上部のボタンから実施したい評価項目を選択してください。"}),G.jsxs("div",{className:"bg-blue-50 p-4 rounded-lg text-left",children:[G.jsx("h4",{className:"font-semibold text-blue-800 mb-2",children:"システム概要:"}),G.jsx("p",{className:"text-sm text-blue-700 leading-relaxed",children:"このシステムは理学療法士向けの腰椎コントロール評価ツールです。 各評価項目では、腰椎屈曲の制御能力を定量的に評価し、 改善点や運動指導のポイントを提供します。"})]})]})})})]})]})};function xie(){return G.jsx("div",{className:"App",children:G.jsx(yie,{})})}Sp.createRoot(document.getElementById("root")).render(G.jsx(pm.StrictMode,{children:G.jsx(xie,{})}));
//# sourceMappingURL=index-Du8-wxiU.js.map
